{"Runs": "200", "SwarmSource": "bzzr://a9fcb3e51723cc1d95c02fe2cbb16a9458ab670aa1853441666c3f8c8a79b529", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"motd\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_m\",\"type\":\"string\"}],\"name\":\"setMotd\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"controllerApprove\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_c\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"controllerTransfer\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"finalized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"}],\"name\":\"Motd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.14+commit.c2215d46", "ConstructorArguments": "", "SourceCode": "// Unattributed material copyright New Alchemy Limited, 2017. All rights reserved.\r\npragma solidity >=0.4.10;\r\n\r\ncontract SafeMath {\r\n    function safeMul(uint a, uint b) internal returns (uint) {\r\n        uint c = a * b;\r\n        require(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function safeSub(uint a, uint b) internal returns (uint) {\r\n        require(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function safeAdd(uint a, uint b) internal returns (uint) {\r\n        uint c = a + b;\r\n        require(c>=a && c>=b);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract Owned {\r\n\taddress public owner;\r\n\taddress newOwner;\r\n\r\n\tfunction Owned() {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == owner);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction changeOwner(address _newOwner) onlyOwner {\r\n\t\tnewOwner = _newOwner;\r\n\t}\r\n\r\n\tfunction acceptOwnership() {\r\n\t\tif (msg.sender == newOwner) {\r\n\t\t\towner = newOwner;\r\n\t\t}\r\n\t}\r\n}\r\n\r\ncontract Pausable is Owned {\r\n\tbool public paused;\r\n\r\n\tfunction pause() onlyOwner {\r\n\t\tpaused = true;\r\n\t}\r\n\r\n\tfunction unpause() onlyOwner {\r\n\t\tpaused = false;\r\n\t}\r\n\r\n\tmodifier notPaused() {\r\n\t\trequire(!paused);\r\n\t\t_;\r\n\t}\r\n}\r\n\r\ncontract Finalizable is Owned {\r\n\tbool public finalized;\r\n\r\n\tfunction finalize() onlyOwner {\r\n\t\tfinalized = true;\r\n\t}\r\n\r\n\tmodifier notFinalized() {\r\n\t\trequire(!finalized);\r\n\t\t_;\r\n\t}\r\n}\r\n\r\ncontract IToken {\r\n\tfunction transfer(address _to, uint _value) returns (bool);\r\n\tfunction balanceOf(address owner) returns(uint);\r\n}\r\n\r\ncontract TokenReceivable is Owned {\r\n\tfunction claimTokens(address _token, address _to) onlyOwner returns (bool) {\r\n\t\tIToken token = IToken(_token);\r\n\t\treturn token.transfer(_to, token.balanceOf(this));\r\n\t}\r\n}\r\n\r\ncontract EventDefinitions {\r\n\tevent Transfer(address indexed from, address indexed to, uint value);\r\n\tevent Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\ncontract Token is Finalizable, TokenReceivable, SafeMath, EventDefinitions, Pausable {\r\n\tstring constant public name = \"Education\";\r\n\tuint8 constant public decimals = 8;\r\n\tstring constant public symbol = \"EDU\";\r\n\tController public controller;\r\n\tstring public motd;\r\n\tevent Motd(string message);\r\n\r\n\t// functions below this line are onlyOwner\r\n\r\n\tfunction setMotd(string _m) onlyOwner {\r\n\t\tmotd = _m;\r\n\t\tMotd(_m);\r\n\t}\r\n\r\n\tfunction setController(address _c) onlyOwner notFinalized {\r\n\t\tcontroller = Controller(_c);\r\n\t}\r\n\r\n\t// functions below this line are public\r\n\r\n\tfunction balanceOf(address a) constant returns (uint) {\r\n\t\treturn controller.balanceOf(a);\r\n\t}\r\n\r\n\tfunction totalSupply() constant returns (uint) {\r\n\t\treturn controller.totalSupply();\r\n\t}\r\n\r\n\tfunction allowance(address _owner, address _spender) constant returns (uint) {\r\n\t\treturn controller.allowance(_owner, _spender);\r\n\t}\r\n\r\n\tfunction transfer(address _to, uint _value) onlyPayloadSize(2) notPaused returns (bool success) {\r\n\t\tif (controller.transfer(msg.sender, _to, _value)) {\r\n\t\t\tTransfer(msg.sender, _to, _value);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction transferFrom(address _from, address _to, uint _value) onlyPayloadSize(3) notPaused returns (bool success) {\r\n\t\tif (controller.transferFrom(msg.sender, _from, _to, _value)) {\r\n\t\t\tTransfer(_from, _to, _value);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction approve(address _spender, uint _value) onlyPayloadSize(2) notPaused returns (bool success) {\r\n\t\tif (controller.approve(msg.sender, _spender, _value)) {\r\n\t\t\tApproval(msg.sender, _spender, _value);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction increaseApproval (address _spender, uint _addedValue) onlyPayloadSize(2) notPaused returns (bool success) {\r\n\t\tif (controller.increaseApproval(msg.sender, _spender, _addedValue)) {\r\n\t\t\tuint newval = controller.allowance(msg.sender, _spender);\r\n\t\t\tApproval(msg.sender, _spender, newval);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction decreaseApproval (address _spender, uint _subtractedValue) onlyPayloadSize(2) notPaused returns (bool success) {\r\n\t\tif (controller.decreaseApproval(msg.sender, _spender, _subtractedValue)) {\r\n\t\t\tuint newval = controller.allowance(msg.sender, _spender);\r\n\t\t\tApproval(msg.sender, _spender, newval);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tmodifier onlyPayloadSize(uint numwords) {\r\n\t\tassert(msg.data.length >= numwords * 32 + 4);\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction burn(uint _amount) notPaused {\r\n\t\tcontroller.burn(msg.sender, _amount);\r\n\t\tTransfer(msg.sender, 0x0, _amount);\r\n\t}\r\n\r\n\t// functions below this line are onlyController\r\n\r\n\tmodifier onlyController() {\r\n\t\tassert(msg.sender == address(controller));\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction controllerTransfer(address _from, address _to, uint _value) onlyController {\r\n\t\tTransfer(_from, _to, _value);\r\n\t}\r\n\r\n\tfunction controllerApprove(address _owner, address _spender, uint _value) onlyController {\r\n\t\tApproval(_owner, _spender, _value);\r\n\t}\r\n}\r\n\r\ncontract Controller is Owned, Finalizable {\r\n\tLedger public ledger;\r\n\tToken public token;\r\n\r\n\tfunction Controller() {\r\n\t}\r\n\r\n\t// functions below this line are onlyOwner\r\n\r\n\tfunction setToken(address _token) onlyOwner {\r\n\t\ttoken = Token(_token);\r\n\t}\r\n\r\n\tfunction setLedger(address _ledger) onlyOwner {\r\n\t\tledger = Ledger(_ledger);\r\n\t}\r\n\r\n\tmodifier onlyToken() {\r\n\t\trequire(msg.sender == address(token));\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier onlyLedger() {\r\n\t\trequire(msg.sender == address(ledger));\r\n\t\t_;\r\n\t}\r\n\r\n\t// public functions\r\n\r\n\tfunction totalSupply() constant returns (uint) {\r\n\t\treturn ledger.totalSupply();\r\n\t}\r\n\r\n\tfunction balanceOf(address _a) constant returns (uint) {\r\n\t\treturn ledger.balanceOf(_a);\r\n\t}\r\n\r\n\tfunction allowance(address _owner, address _spender) constant returns (uint) {\r\n\t\treturn ledger.allowance(_owner, _spender);\r\n\t}\r\n\r\n\t// functions below this line are onlyLedger\r\n\r\n\tfunction ledgerTransfer(address from, address to, uint val) onlyLedger {\r\n\t\ttoken.controllerTransfer(from, to, val);\r\n\t}\r\n\r\n\t// functions below this line are onlyToken\r\n\r\n\tfunction transfer(address _from, address _to, uint _value) onlyToken returns (bool success) {\r\n\t\treturn ledger.transfer(_from, _to, _value);\r\n\t}\r\n\r\n\tfunction transferFrom(address _spender, address _from, address _to, uint _value) onlyToken returns (bool success) {\r\n\t\treturn ledger.transferFrom(_spender, _from, _to, _value);\r\n\t}\r\n\r\n\tfunction approve(address _owner, address _spender, uint _value) onlyToken returns (bool success) {\r\n\t\treturn ledger.approve(_owner, _spender, _value);\r\n\t}\r\n\r\n\tfunction increaseApproval (address _owner, address _spender, uint _addedValue) onlyToken returns (bool success) {\r\n\t\treturn ledger.increaseApproval(_owner, _spender, _addedValue);\r\n\t}\r\n\r\n\tfunction decreaseApproval (address _owner, address _spender, uint _subtractedValue) onlyToken returns (bool success) {\r\n\t\treturn ledger.decreaseApproval(_owner, _spender, _subtractedValue);\r\n\t}\r\n\r\n\tfunction burn(address _owner, uint _amount) onlyToken {\r\n\t\tledger.burn(_owner, _amount);\r\n\t}\r\n}\r\n\r\ncontract Ledger is Owned, SafeMath, Finalizable {\r\n\tController public controller;\r\n\tmapping(address => uint) public balanceOf;\r\n\tmapping (address => mapping (address => uint)) public allowance;\r\n\tuint public totalSupply;\r\n\tuint public mintingNonce;\r\n\tbool public mintingStopped;\r\n\r\n\t// functions below this line are onlyOwner\r\n\r\n\tfunction Ledger() {\r\n\t}\r\n\r\n\tfunction setController(address _controller) onlyOwner notFinalized {\r\n\t\tcontroller = Controller(_controller);\r\n\t}\r\n\r\n\tfunction stopMinting() onlyOwner {\r\n\t\tmintingStopped = true;\r\n\t}\r\n\r\n\tfunction multiMint(uint nonce, uint256[] bits) onlyOwner {\r\n\t\trequire(!mintingStopped);\r\n\t\tif (nonce != mintingNonce) return;\r\n\t\tmintingNonce += 1;\r\n\t\tuint256 lomask = (1 << 96) - 1;\r\n\t\tuint created = 0;\r\n\t\tfor (uint i=0; i<bits.length; i++) {\r\n\t\t\taddress a = address(bits[i]>>96);\r\n\t\t\tuint value = bits[i]&lomask;\r\n\t\t\tbalanceOf[a] = balanceOf[a] + value;\r\n\t\t\tcontroller.ledgerTransfer(0, a, value);\r\n\t\t\tcreated += value;\r\n\t\t}\r\n\t\ttotalSupply += created;\r\n\t}\r\n\r\n\t// functions below this line are onlyController\r\n\r\n\tmodifier onlyController() {\r\n\t\trequire(msg.sender == address(controller));\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction transfer(address _from, address _to, uint _value) onlyController returns (bool success) {\r\n\t\tif (balanceOf[_from] < _value) return false;\r\n\r\n\t\tbalanceOf[_from] = safeSub(balanceOf[_from], _value);\r\n\t\tbalanceOf[_to] = safeAdd(balanceOf[_to], _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferFrom(address _spender, address _from, address _to, uint _value) onlyController returns (bool success) {\r\n\t\tif (balanceOf[_from] < _value) return false;\r\n\r\n\t\tvar allowed = allowance[_from][_spender];\r\n\t\tif (allowed < _value) return false;\r\n\r\n\t\tbalanceOf[_to] = safeAdd(balanceOf[_to], _value);\r\n\t\tbalanceOf[_from] = safeSub(balanceOf[_from], _value);\r\n\t\tallowance[_from][_spender] = safeSub(allowed, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction approve(address _owner, address _spender, uint _value) onlyController returns (bool success) {\r\n\t\tif ((_value != 0) && (allowance[_owner][_spender] != 0)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tallowance[_owner][_spender] = _value;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction increaseApproval (address _owner, address _spender, uint _addedValue) onlyController returns (bool success) {\r\n\t\tuint oldValue = allowance[_owner][_spender];\r\n\t\tallowance[_owner][_spender] = safeAdd(oldValue, _addedValue);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction decreaseApproval (address _owner, address _spender, uint _subtractedValue) onlyController returns (bool success) {\r\n\t\tuint oldValue = allowance[_owner][_spender];\r\n\t\tif (_subtractedValue > oldValue) {\r\n\t\t\tallowance[_owner][_spender] = 0;\r\n\t\t} else {\r\n\t\t\tallowance[_owner][_spender] = safeSub(oldValue, _subtractedValue);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction burn(address _owner, uint _amount) onlyController {\r\n\t\tbalanceOf[_owner] = safeSub(balanceOf[_owner], _amount);\r\n\t\ttotalSupply = safeSub(totalSupply, _amount);\r\n\t}\r\n}", "OptimizationUsed": "1", "ContractName": "Token", "ByteCode": "0x606060405236156101435763ffffffff60e060020a60003504166306fdde038114610148578063095ea7b3146101d357806318160ddd1461020957806323b872dd1461022e578063313ce5671461026a5780633f4ba83a1461029357806342966c68146102a85780634bb278f3146102c05780635aab4ac8146102d55780635c975abb146103605780635fe59b9d1461038757806366188463146103da57806369ffa08a1461041057806370a082311461044957806379ba50971461047a5780638456cb591461048f5780638da5cb5b146104a45780638e339b66146104d357806392eefe9b146104fd57806395d89b411461051e5780639b504387146105a9578063a6f9dae1146105d3578063a9059cbb146105f4578063b3f05b971461062a578063d73dd62314610651578063dd62ed3e14610687578063f77c4791146106be575b600080fd5b341561015357600080fd5b61015b6106ed565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101985780820151818401525b60200161017f565b50505050905090810190601f1680156101c55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101de57600080fd5b6101f5600160a060020a0360043516602435610724565b604051901515815260200160405180910390f35b341561021457600080fd5b61021c610822565b60405190815260200160405180910390f35b341561023957600080fd5b6101f5600160a060020a036004358116906024351660443561088c565b604051901515815260200160405180910390f35b341561027557600080fd5b61027d610992565b60405160ff909116815260200160405180910390f35b341561029e57600080fd5b6102a6610997565b005b34156102b357600080fd5b6102a66004356109d5565b005b34156102cb57600080fd5b6102a6610a88565b005b34156102e057600080fd5b61015b610adc565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101985780820151818401525b60200161017f565b50505050905090810190601f1680156101c55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561036b57600080fd5b6101f5610b7a565b604051901515815260200160405180910390f35b341561039257600080fd5b6102a660046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650610b8a95505050505050565b005b34156103e557600080fd5b6101f5600160a060020a0360043516602435610c57565b604051901515815260200160405180910390f35b341561041b57600080fd5b6101f5600160a060020a0360043581169060243516610dd5565b604051901515815260200160405180910390f35b341561045457600080fd5b61021c600160a060020a0360043516610edf565b60405190815260200160405180910390f35b341561048557600080fd5b6102a6610f5c565b005b341561049a57600080fd5b6102a6610fa6565b005b34156104af57600080fd5b6104b7610fea565b604051600160a060020a03909116815260200160405180910390f35b34156104de57600080fd5b6102a6600160a060020a0360043581169060243516604435610ff9565b005b341561050857600080fd5b6102a6600160a060020a036004351661104d565b005b341561052957600080fd5b61015b6110be565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101985780820151818401525b60200161017f565b50505050905090810190601f1680156101c55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156105b457600080fd5b6102a6600160a060020a03600435811690602435166044356110f5565b005b34156105de57600080fd5b6102a6600160a060020a0360043516611149565b005b34156105ff57600080fd5b6101f5600160a060020a0360043516602435611191565b604051901515815260200160405180910390f35b341561063557600080fd5b6101f561128f565b604051901515815260200160405180910390f35b341561065c57600080fd5b6101f5600160a060020a03600435166024356112b0565b604051901515815260200160405180910390f35b341561069257600080fd5b61021c600160a060020a036004358116906024351661142e565b60405190815260200160405180910390f35b34156106c957600080fd5b6104b76114b4565b604051600160a060020a03909116815260200160405180910390f35b60408051908101604052600981527f456475636174696f6e0000000000000000000000000000000000000000000000602082015281565b60006002604436101561073357fe5b60015460a860020a900460ff161561074a57600080fd5b600254600160a060020a031663e1f21c6733868660006040516020015260405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b15156107b657600080fd5b6102c65a03f115156107c757600080fd5b50505060405180519050156108145783600160a060020a031633600160a060020a03166000805160206115848339815191528560405190815260200160405180910390a360019150610819565b600091505b5b5b5092915050565b600254600090600160a060020a03166318160ddd82604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561086c57600080fd5b6102c65a03f1151561087d57600080fd5b50505060405180519150505b90565b60006003606436101561089b57fe5b60015460a860020a900460ff16156108b257600080fd5b600254600160a060020a03166315dacbea3387878760006040516020015260405160e060020a63ffffffff8716028152600160a060020a0394851660048201529284166024840152921660448201526064810191909152608401602060405180830381600087803b151561092557600080fd5b6102c65a03f1151561093657600080fd5b50505060405180519050156109835783600160a060020a031685600160a060020a03166000805160206115648339815191528560405190815260200160405180910390a360019150610988565b600091505b5b5b509392505050565b600881565b60005433600160a060020a039081169116146109b257600080fd5b6001805475ff000000000000000000000000000000000000000000191690555b5b565b60015460a860020a900460ff16156109ec57600080fd5b600254600160a060020a0316639dc29fac338360405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401600060405180830381600087803b1515610a4257600080fd5b6102c65a03f11515610a5357600080fd5b505050600033600160a060020a03166000805160206115648339815191528360405190815260200160405180910390a35b5b50565b60005433600160a060020a03908116911614610aa357600080fd5b6001805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790555b5b565b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b725780601f10610b4757610100808354040283529160200191610b72565b820191906000526020600020905b815481529060010190602001808311610b5557829003601f168201915b505050505081565b60015460a860020a900460ff1681565b60005433600160a060020a03908116911614610ba557600080fd5b6003818051610bb89291602001906114c3565b507f6e7666d68b6b7c619b2fe5a2c3dd0564bf3e02b0508b217d7a28ce5805583eab8160405160208082528190810183818151815260200191508051906020019080838360005b83811015610c185780820151818401525b602001610bff565b50505050905090810190601f168015610c455780820380516001836020036101000a031916815260200191505b509250505060405180910390a15b5b50565b60008060026044361015610c6757fe5b60015460a860020a900460ff1615610c7e57600080fd5b600254600160a060020a031663f019c26733878760006040516020015260405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b1515610cea57600080fd5b6102c65a03f11515610cfb57600080fd5b5050506040518051905015610dc657600254600160a060020a031663dd62ed3e338760006040516020015260405160e060020a63ffffffff8516028152600160a060020a03928316600482015291166024820152604401602060405180830381600087803b1515610d6b57600080fd5b6102c65a03f11515610d7c57600080fd5b50505060405180519050915084600160a060020a031633600160a060020a03166000805160206115848339815191528460405190815260200160405180910390a360019250610dcb565b600092505b5b5b505092915050565b60008054819033600160a060020a03908116911614610df357600080fd5b5082600160a060020a03811663a9059cbb84826370a082313060006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b1515610e5357600080fd5b6102c65a03f11515610e6457600080fd5b5050506040518051905060006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b1515610eba57600080fd5b6102c65a03f11515610ecb57600080fd5b50505060405180519250505b5b5092915050565b600254600090600160a060020a03166370a0823183836040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b1515610f3a57600080fd5b6102c65a03f11515610f4b57600080fd5b50505060405180519150505b919050565b60015433600160a060020a03908116911614156109d2576001546000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039092169190911790555b5b565b60005433600160a060020a03908116911614610fc157600080fd5b6001805475ff000000000000000000000000000000000000000000191660a860020a1790555b5b565b600054600160a060020a031681565b60025433600160a060020a0390811691161461101157fe5b81600160a060020a031683600160a060020a03166000805160206115848339815191528360405190815260200160405180910390a35b5b505050565b60005433600160a060020a0390811691161461106857600080fd5b60015474010000000000000000000000000000000000000000900460ff161561109057600080fd5b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b5b50565b60408051908101604052600381527f4544550000000000000000000000000000000000000000000000000000000000602082015281565b60025433600160a060020a0390811691161461110d57fe5b81600160a060020a031683600160a060020a03166000805160206115648339815191528360405190815260200160405180910390a35b5b505050565b60005433600160a060020a0390811691161461116457600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b50565b6000600260443610156111a057fe5b60015460a860020a900460ff16156111b757600080fd5b600254600160a060020a031663beabacc833868660006040516020015260405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b151561122357600080fd5b6102c65a03f1151561123457600080fd5b50505060405180519050156108145783600160a060020a031633600160a060020a03166000805160206115648339815191528560405190815260200160405180910390a360019150610819565b600091505b5b5b5092915050565b60015474010000000000000000000000000000000000000000900460ff1681565b600080600260443610156112c057fe5b60015460a860020a900460ff16156112d757600080fd5b600254600160a060020a031663bcdd612133878760006040516020015260405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b1515610cea57600080fd5b6102c65a03f11515610cfb57600080fd5b5050506040518051905015610dc657600254600160a060020a031663dd62ed3e338760006040516020015260405160e060020a63ffffffff8516028152600160a060020a03928316600482015291166024820152604401602060405180830381600087803b1515610d6b57600080fd5b6102c65a03f11515610d7c57600080fd5b50505060405180519050915084600160a060020a031633600160a060020a03166000805160206115848339815191528460405190815260200160405180910390a360019250610dcb565b600092505b5b5b505092915050565b600254600090600160a060020a031663dd62ed3e8484846040516020015260405160e060020a63ffffffff8516028152600160a060020a03928316600482015291166024820152604401602060405180830381600087803b151561149157600080fd5b6102c65a03f115156114a257600080fd5b50505060405180519150505b92915050565b600254600160a060020a031681565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061150457805160ff1916838001178555611531565b82800160010185558215611531579182015b82811115611531578251825591602001919060010190611516565b5b5061153e929150611542565b5090565b61088991905b8082111561153e5760008155600101611548565b5090565b905600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a165627a7a72305820a9fcb3e51723cc1d95c02fe2cbb16a9458ab670aa1853441666c3f8c8a79b5290029"}