{"Runs": "200", "SwarmSource": "bzzr://78ea1c2461c24f619cce93f0d640628815b035b99edbe53c566d1f5e2ce166c3", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_holder\",\"type\":\"address\"}],\"name\":\"unlockTimeOf\",\"outputs\":[{\"name\":\"lockTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_holder\",\"type\":\"address\"}],\"name\":\"lockupBalanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_holder\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlock\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_holder\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_lockupRate\",\"type\":\"uint256\"}],\"name\":\"distribute\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.21+commit.dfe3193c", "ConstructorArguments": "", "SourceCode": "pragma solidity ^0.4.18;\r\n\r\nlibrary SafeMath {\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;       \r\n    }       \r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n        newOwner = address(0);\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    modifier onlyNewOwner() {\r\n        require(msg.sender != address(0));\r\n        require(msg.sender == newOwner);\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        require(_newOwner != address(0));\r\n        newOwner = _newOwner;\r\n    }\r\n\r\n    function acceptOwnership() public onlyNewOwner returns(bool) {\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract ERC20 {\r\n    function totalSupply() public view returns (uint256);\r\n    function balanceOf(address who) public view returns (uint256);\r\n    function allowance(address owner, address spender) public view returns (uint256);\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n    function approve(address spender, uint256 value) public returns (bool);\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract POPCHAINCASH is ERC20, Ownable {\r\n\r\n    using SafeMath for uint256;\r\n\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    uint256 internal initialSupply;\r\n    uint256 internal _totalSupply;\r\n    \r\n                                 \r\n    uint256 internal LOCKUP_TERM = 6 * 30 * 24 * 3600;\r\n\r\n    mapping(address => uint256) internal _balances;\r\n    mapping(address => mapping(address => uint256)) internal _allowed;\r\n\r\n    mapping(address => uint256) internal _lockupBalances;\r\n    mapping(address => uint256) internal _lockupExpireTime;\r\n\r\n    function POPCHAINCASH() public {\r\n        name = \"POPCHAIN CASH\";\r\n        symbol = \"PCH\";\r\n        decimals = 18;\r\n\r\n\r\n        //Total Supply  2,000,000,000\r\n        initialSupply = 2000000000;\r\n        _totalSupply = initialSupply * 10 ** uint(decimals);\r\n        _balances[owner] = _totalSupply;\r\n        emit Transfer(address(0), owner, _totalSupply);\r\n    }\r\n\r\n    function totalSupply() public view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n   \r\n    function transfer(address _to, uint256 _value) public returns (bool) {\r\n        require(_to != address(0));\r\n        require(_to != address(this));\r\n        require(msg.sender != address(0));\r\n        require(_value <= _balances[msg.sender]);\r\n\r\n        // SafeMath.sub will throw if there is not enough balance.\r\n        _balances[msg.sender] = _balances[msg.sender].sub(_value);\r\n        _balances[_to] = _balances[_to].add(_value);\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function balanceOf(address _holder) public view returns (uint256 balance) {\r\n        return _balances[_holder].add(_lockupBalances[_holder]);\r\n    }\r\n\r\n      \r\n    function lockupBalanceOf(address _holder) public view returns (uint256 balance) {\r\n        return _lockupBalances[_holder];\r\n    }\r\n\r\n   \r\n    function unlockTimeOf(address _holder) public view returns (uint256 lockTime) {\r\n        return _lockupExpireTime[_holder];\r\n    }\r\n\r\n    \r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n        require(_from != address(0));\r\n        require(_to != address(0));\r\n        require(_to != address(this));\r\n        require(_value <= _balances[_from]);\r\n        require(_value <= _allowed[_from][msg.sender]);\r\n\r\n        _balances[_from] = _balances[_from].sub(_value);\r\n        _balances[_to] = _balances[_to].add(_value);\r\n        _allowed[_from][msg.sender] = _allowed[_from][msg.sender].sub(_value);\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool) {\r\n        require(_value > 0);\r\n        _allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    \r\n    function allowance(address _holder, address _spender) public view returns (uint256) {\r\n        return _allowed[_holder][_spender];\r\n    }\r\n\r\n    \r\n    function () public payable {\r\n        revert();\r\n    }\r\n\r\n    \r\n    function burn(uint256 _value) public onlyOwner returns (bool success) {\r\n        require(_value <= _balances[msg.sender]);\r\n        address burner = msg.sender;\r\n        _balances[burner] = _balances[burner].sub(_value);\r\n        _totalSupply = _totalSupply.sub(_value);\r\n        return true;\r\n    }\r\n\r\n    \r\n    function distribute(address _to, uint256 _value, uint256 _lockupRate) public onlyOwner returns (bool) {\r\n        require(_to != address(0));\r\n        require(_to != address(this));\r\n        //Do not allow multiple distributions of the same address. Avoid locking time reset.\r\n        require(_lockupBalances[_to] == 0);     \r\n        require(_value <= _balances[owner]);\r\n        require(_lockupRate == 50 || _lockupRate == 100);\r\n\r\n        _balances[owner] = _balances[owner].sub(_value);\r\n\r\n        uint256 lockupValue = _value.mul(_lockupRate).div(100);\r\n        uint256 givenValue = _value.sub(lockupValue);\r\n        uint256 ExpireTime = now + LOCKUP_TERM; //six months\r\n\r\n        if (_lockupRate == 100) {\r\n            ExpireTime += LOCKUP_TERM;          //one year.\r\n        }\r\n        \r\n        _balances[_to] = _balances[_to].add(givenValue);\r\n        _lockupBalances[_to] = _lockupBalances[_to].add(lockupValue);\r\n        _lockupExpireTime[_to] = ExpireTime;\r\n\r\n        emit Transfer(owner, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function unlock() public returns(bool) {\r\n        address tokenHolder = msg.sender;\r\n        require(_lockupBalances[tokenHolder] > 0);\r\n        require(_lockupExpireTime[tokenHolder] <= now);\r\n\r\n        uint256 value = _lockupBalances[tokenHolder];\r\n\r\n        _balances[tokenHolder] = _balances[tokenHolder].add(value);  \r\n        _lockupBalances[tokenHolder] = 0;\r\n\r\n        return true;\r\n    }\r\n\r\n    \r\n    function acceptOwnership() public onlyNewOwner returns(bool) {\r\n        uint256 ownerAmount = _balances[owner];\r\n        _balances[owner] = _balances[owner].sub(ownerAmount);\r\n        _balances[newOwner] = _balances[newOwner].add(ownerAmount);\r\n        emit Transfer(owner, newOwner, ownerAmount);   \r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n        emit OwnershipTransferred(owner, newOwner);\r\n\r\n        return true;\r\n    }\r\n}", "OptimizationUsed": "1", "ContractName": "POPCHAINCASH", "ByteCode": "0x6060604052600436106100fb5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610100578063095ea7b31461018a57806318160ddd146101c057806323b872dd146101e5578063313ce5671461020d57806342966c6814610236578063469a69471461024c5780634728537c1461026b57806370a082311461028a57806379ba5097146102a95780638da5cb5b146102bc57806395d89b41146102eb578063a69df4b5146102fe578063a9059cbb14610311578063d4ee1d9014610333578063dd62ed3e14610346578063e2c92a521461036b578063f2fde38b14610390575b600080fd5b341561010b57600080fd5b6101136103b1565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561014f578082015183820152602001610137565b50505050905090810190601f16801561017c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561019557600080fd5b6101ac600160a060020a036004351660243561044f565b604051901515815260200160405180910390f35b34156101cb57600080fd5b6101d36104c6565b60405190815260200160405180910390f35b34156101f057600080fd5b6101ac600160a060020a03600435811690602435166044356104cc565b341561021857600080fd5b610220610672565b60405160ff909116815260200160405180910390f35b341561024157600080fd5b6101ac60043561067b565b341561025757600080fd5b6101d3600160a060020a036004351661071b565b341561027657600080fd5b6101d3600160a060020a0360043516610736565b341561029557600080fd5b6101d3600160a060020a0360043516610751565b34156102b457600080fd5b6101ac61078a565b34156102c757600080fd5b6102cf6108d9565b604051600160a060020a03909116815260200160405180910390f35b34156102f657600080fd5b6101136108e8565b341561030957600080fd5b6101ac610953565b341561031c57600080fd5b6101ac600160a060020a0360043516602435610a0a565b341561033e57600080fd5b6102cf610b29565b341561035157600080fd5b6101d3600160a060020a0360043581169060243516610b38565b341561037657600080fd5b6101ac600160a060020a0360043516602435604435610b63565b341561039b57600080fd5b6103af600160a060020a0360043516610d65565b005b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104475780601f1061041c57610100808354040283529160200191610447565b820191906000526020600020905b81548152906001019060200180831161042a57829003601f168201915b505050505081565b600080821161045d57600080fd5b600160a060020a03338116600081815260096020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b60065490565b6000600160a060020a03841615156104e357600080fd5b600160a060020a03831615156104f857600080fd5b30600160a060020a031683600160a060020a03161415151561051957600080fd5b600160a060020a03841660009081526008602052604090205482111561053e57600080fd5b600160a060020a038085166000908152600960209081526040808320339094168352929052205482111561057157600080fd5b600160a060020a03841660009081526008602052604090205461059a908363ffffffff610dc416565b600160a060020a0380861660009081526008602052604080822093909355908516815220546105cf908363ffffffff610dd616565b600160a060020a03808516600090815260086020908152604080832094909455878316825260098152838220339093168252919091522054610617908363ffffffff610dc416565b600160a060020a0380861660008181526009602090815260408083203386168452909152908190209390935590851691600080516020610e338339815191529085905190815260200160405180910390a35060019392505050565b60045460ff1681565b60008054819033600160a060020a0390811691161461069957600080fd5b600160a060020a0333166000908152600860205260409020548311156106be57600080fd5b5033600160a060020a0381166000908152600860205260409020546106e39084610dc4565b600160a060020a03821660009081526008602052604090205560065461070f908463ffffffff610dc416565b60065550600192915050565b600160a060020a03166000908152600b602052604090205490565b600160a060020a03166000908152600a602052604090205490565b600160a060020a0381166000908152600a602090815260408083205460089092528220546107849163ffffffff610dd616565b92915050565b60008033600160a060020a031615156107a257600080fd5b60015433600160a060020a039081169116146107bd57600080fd5b5060008054600160a060020a03168152600860205260409020546107e7818063ffffffff610dc416565b60008054600160a060020a0390811682526008602052604080832093909355600154168152205461081e908263ffffffff610dd616565b60018054600160a060020a03908116600090815260086020526040808220949094559154915491811692911690600080516020610e338339815191529084905190815260200160405180910390a36001805460008054600160a060020a0380841673ffffffffffffffffffffffffffffffffffffffff19928316178084559190931690935591167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600191505090565b600054600160a060020a031681565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104475780601f1061041c57610100808354040283529160200191610447565b33600160a060020a0381166000908152600a6020526040812054909190829081901161097e57600080fd5b600160a060020a0382166000908152600b6020526040902054429011156109a457600080fd5b50600160a060020a0381166000908152600a60209081526040808320546008909252909120546109da908263ffffffff610dd616565b600160a060020a038316600090815260086020908152604080832093909355600a90529081205560019250505090565b6000600160a060020a0383161515610a2157600080fd5b30600160a060020a031683600160a060020a031614151515610a4257600080fd5b33600160a060020a03161515610a5757600080fd5b600160a060020a033316600090815260086020526040902054821115610a7c57600080fd5b600160a060020a033316600090815260086020526040902054610aa5908363ffffffff610dc416565b600160a060020a033381166000908152600860205260408082209390935590851681522054610ada908363ffffffff610dd616565b600160a060020a038085166000818152600860205260409081902093909355913390911690600080516020610e338339815191529085905190815260200160405180910390a350600192915050565b600154600160a060020a031681565b600160a060020a03918216600090815260096020908152604080832093909416825291909152205490565b6000805481908190819033600160a060020a03908116911614610b8557600080fd5b600160a060020a0387161515610b9a57600080fd5b30600160a060020a031687600160a060020a031614151515610bbb57600080fd5b600160a060020a0387166000908152600a602052604090205415610bde57600080fd5b60008054600160a060020a0316815260086020526040902054861115610c0357600080fd5b8460321480610c125750846064145b1515610c1d57600080fd5b60008054600160a060020a0316815260086020526040902054610c46908763ffffffff610dc416565b60008054600160a060020a0316815260086020526040902055610c806064610c74888863ffffffff610df016565b9063ffffffff610e1b16565b9250610c92868463ffffffff610dc416565b9150600754420190508460641415610ca957600754015b600160a060020a038716600090815260086020526040902054610cd2908363ffffffff610dd616565b600160a060020a038816600090815260086020908152604080832093909355600a90522054610d07908463ffffffff610dd616565b600160a060020a038089166000818152600a6020908152604080832095909555600b9052838120859055549092911690600080516020610e338339815191529089905190815260200160405180910390a35060019695505050505050565b60005433600160a060020a03908116911614610d8057600080fd5b600160a060020a0381161515610d9557600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600082821115610dd057fe5b50900390565b600082820183811015610de557fe5b8091505b5092915050565b600080831515610e035760009150610de9565b50828202828482811515610e1357fe5b0414610de557fe5b6000808284811515610e2957fe5b049493505050505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a7230582078ea1c2461c24f619cce93f0d640628815b035b99edbe53c566d1f5e2ce166c30029"}