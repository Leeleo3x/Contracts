{"Runs": "200", "SwarmSource": "bzzr://9d6ef1f481ef42049dd53d6f31f15f92c1532312114fb69b98813275b2fcc894", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"tokenSupply\",\"type\":\"uint256\"}],\"name\":\"SetupToken\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"adr\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.11+commit.68ef5810", "ConstructorArguments": "000000000000000000000000517cdd585b00b14efc69f5c67d6910e562acb1f1", "SourceCode": "pragma solidity ^0.4.11;\r\n \r\ncontract Token {\r\n    string public symbol = \"\";\r\n    string public name = \"\";\r\n    uint8 public constant decimals = 18;\r\n    uint256 _totalSupply = 0;\r\n    address owner = 0;\r\n    bool setupDone = false;\r\n   \r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n \r\n    mapping(address => uint256) balances;\r\n \r\n    mapping(address => mapping (address => uint256)) allowed;\r\n \r\n    function Token(address adr) {\r\n        owner = adr;        \r\n    }\r\n   \r\n    function SetupToken(string tokenName, string tokenSymbol, uint256 tokenSupply)\r\n    {\r\n        if (msg.sender == owner && setupDone == false)\r\n        {\r\n            symbol = tokenSymbol;\r\n            name = tokenName;\r\n            _totalSupply = tokenSupply * 1000000000000000000;\r\n            balances[owner] = _totalSupply;\r\n            setupDone = true;\r\n        }\r\n    }\r\n \r\n    function totalSupply() constant returns (uint256 totalSupply) {        \r\n        return _totalSupply;\r\n    }\r\n \r\n    function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n \r\n    function transfer(address _to, uint256 _amount) returns (bool success) {\r\n        if (balances[msg.sender] >= _amount\r\n            && _amount > 0\r\n            && balances[_to] + _amount > balances[_to]) {\r\n            balances[msg.sender] -= _amount;\r\n            balances[_to] += _amount;\r\n            Transfer(msg.sender, _to, _amount);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n \r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _amount\r\n    ) returns (bool success) {\r\n        if (balances[_from] >= _amount\r\n            && allowed[_from][msg.sender] >= _amount\r\n            && _amount > 0\r\n            && balances[_to] + _amount > balances[_to]) {\r\n            balances[_from] -= _amount;\r\n            allowed[_from][msg.sender] -= _amount;\r\n            balances[_to] += _amount;\r\n            Transfer(_from, _to, _amount);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n \r\n    function approve(address _spender, uint256 _amount) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _amount;\r\n        Approval(msg.sender, _spender, _amount);\r\n        return true;\r\n    }\r\n \r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n}", "OptimizationUsed": "1", "ContractName": "Token", "ByteCode": "0x606060405236156100a15763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100a3578063095ea7b31461013357806318160ddd1461016657806323b872dd14610188578063313ce567146101c157806370a08231146101e757806395d89b4114610215578063a9059cbb146102a5578063b6d2a9b9146102d8578063dd62ed3e1461036f575bfe5b34156100ab57fe5b6100b36103a3565b6040805160208082528351818301528351919283929083019185019080838382156100f9575b8051825260208311156100f957601f1990920191602091820191016100d9565b505050905090810190601f1680156101255780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561013b57fe5b610152600160a060020a0360043516602435610430565b604080519115158252519081900360200190f35b341561016e57fe5b61017661049b565b60408051918252519081900360200190f35b341561019057fe5b610152600160a060020a03600435811690602435166044356104a2565b604080519115158252519081900360200190f35b34156101c957fe5b6101d16105bc565b6040805160ff9092168252519081900360200190f35b34156101ef57fe5b610176600160a060020a03600435166105c1565b60408051918252519081900360200190f35b341561021d57fe5b6100b36105e0565b6040805160208082528351818301528351919283929083019185019080838382156100f9575b8051825260208311156100f957601f1990920191602091820191016100d9565b505050905090810190601f1680156101255780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156102ad57fe5b610152600160a060020a036004351660243561066e565b604080519115158252519081900360200190f35b34156102e057fe5b61036d600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284375050604080516020601f89358b01803591820183900483028401830190945280835297999881019791965091820194509250829150840183828082843750949650509335935061073f92505050565b005b341561037757fe5b610176600160a060020a036004358116906024351661080e565b60408051918252519081900360200190f35b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104285780601f106103fd57610100808354040283529160200191610428565b820191906000526020600020905b81548152906001019060200180831161040b57829003601f168201915b505050505081565b600160a060020a03338116600081815260056020908152604080832094871680845294825280832086905580518681529051929493927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b6002545b90565b600160a060020a0383166000908152600460205260408120548290108015906104f25750600160a060020a0380851660009081526005602090815260408083203390941683529290522054829010155b80156104fe5750600082115b80156105235750600160a060020a038316600090815260046020526040902054828101115b156105b057600160a060020a03808516600081815260046020818152604080842080548990039055600582528084203387168552825280842080548990039055948816808452918152918490208054870190558351868152935190937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92908290030190a35060016105b4565b5060005b5b9392505050565b601281565b600160a060020a0381166000908152600460205260409020545b919050565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104285780601f106103fd57610100808354040283529160200191610428565b820191906000526020600020905b81548152906001019060200180831161040b57829003601f168201915b505050505081565b600160a060020a0333166000908152600460205260408120548290108015906106975750600082115b80156106bc5750600160a060020a038316600090815260046020526040902054828101115b1561073057600160a060020a03338116600081815260046020908152604080832080548890039055938716808352918490208054870190558351868152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a3506001610495565b506000610495565b5b92915050565b60035433600160a060020a039081169116148015610778575060035474010000000000000000000000000000000000000000900460ff16155b1561080857815161079090600090602085019061083b565b5082516107a490600190602086019061083b565b50670de0b6b3a76400008102600281905560038054600160a060020a0316600090815260046020526040902091909155805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790555b5b505050565b600160a060020a038083166000908152600560209081526040808320938516835292905220545b92915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061087c57805160ff19168380011785556108a9565b828001600101855582156108a9579182015b828111156108a957825182559160200191906001019061088e565b5b506108b69291506108ba565b5090565b61049f91905b808211156108b657600081556001016108c0565b5090565b905600a165627a7a723058209d6ef1f481ef42049dd53d6f31f15f92c1532312114fb69b98813275b2fcc8940029"}