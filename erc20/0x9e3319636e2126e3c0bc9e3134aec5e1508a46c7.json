{"Runs": "200", "SwarmSource": "bzzr://664588c96d34e5a74eaad24b1388f142ca884acdcabe989c3f0cfe99ef788900", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBurner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_burner\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"grantBurner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.18+commit.9cf6e910", "ConstructorArguments": "", "SourceCode": "pragma solidity ^0.4.13;\r\n\r\n/**\r\n * @title UTN-P ERC20 token by Universa Blockchain.\r\n *\r\n * @dev Based on OpenZeppelin framework.\r\n *\r\n * Features:\r\n *\r\n * * ERC20 compatibility, with token details as properties.\r\n * * total supply: 4997891952 (initially given to the contract author).\r\n * * decimals: 18\r\n * * BurnableToken: some addresses are allowed to burn tokens.\r\n * * \u201cthird-party smart contract trading protection\u201d: transferFrom/approve/allowance methods are present but do nothing.\r\n * * TimeLock: implemented externally (in TokenTimelock contract), some tokens are time-locked for 3 months.\r\n * * Bulk send: implemented externally (in BulkSender contract), some tokens are time-locked for 3 months.\r\n */\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    require(newOwner != address(0));\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\ncontract ERC20Basic {\r\n  uint256 public totalSupply;\r\n  function balanceOf(address who) public view returns (uint256);\r\n  function transfer(address to, uint256 value) public returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract BasicToken is ERC20Basic {\r\n  using SafeMath for uint256;\r\n\r\n  mapping(address => uint256) balances;\r\n\r\n  /**\r\n  * @dev transfer token for a specified address\r\n  * @param _to The address to transfer to.\r\n  * @param _value The amount to be transferred.\r\n  */\r\n  function transfer(address _to, uint256 _value) public returns (bool) {\r\n    require(_to != address(0));\r\n    require(_value <= balances[msg.sender]);\r\n\r\n    // SafeMath.sub will throw if there is not enough balance.\r\n    balances[msg.sender] = balances[msg.sender].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    Transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n  * @dev Gets the balance of the specified address.\r\n  * @param _owner The address to query the the balance of.\r\n  * @return An uint256 representing the amount owned by the passed address.\r\n  */\r\n  function balanceOf(address _owner) public view returns (uint256 balance) {\r\n    return balances[_owner];\r\n  }\r\n\r\n}\r\n\r\ncontract BurnableToken is BasicToken {\r\n\r\n    event Burn(address indexed burner, uint256 value);\r\n\r\n    /**\r\n     * @dev Burns a specific amount of tokens.\r\n     * @param _value The amount of token to be burned.\r\n     */\r\n    function burn(uint256 _value) public {\r\n        require(_value <= balances[msg.sender]);\r\n        // no need to require value <= totalSupply, since that would imply the\r\n        // sender's balance is greater than the totalSupply, which *should* be an assertion failure\r\n\r\n        address burner = msg.sender;\r\n        balances[burner] = balances[burner].sub(_value);\r\n        totalSupply = totalSupply.sub(_value);\r\n        Burn(burner, _value);\r\n    }\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) public view returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) public returns (bool);\r\n  function approve(address spender, uint256 value) public returns (bool);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract UTNP is BasicToken, BurnableToken, ERC20, Ownable {\r\n\r\n    string public constant name = \"UTN-P: Universa Token\";\r\n    string public constant symbol = \"UTNP\";\r\n    uint8 public constant decimals = 18;\r\n    string public constant version = \"1.0\";\r\n\r\n    uint256 constant INITIAL_SUPPLY_UTN = 4997891952;\r\n\r\n    /// @dev whether an address is permitted to perform burn operations.\r\n    mapping(address => bool) public isBurner;\r\n\r\n    /**\r\n     * @dev Constructor that:\r\n     * * gives all of existing tokens to the message sender;\r\n     * * initializes the burners (also adding the message sender);\r\n     */\r\n    function UTNP() public {\r\n        totalSupply = INITIAL_SUPPLY_UTN * (10 ** uint256(decimals));\r\n        balances[msg.sender] = totalSupply;\r\n\r\n        isBurner[msg.sender] = true;\r\n    }\r\n\r\n    /**\r\n     * @dev Standard method to comply with ERC20 interface;\r\n     * prevents some Ethereum-contract-initiated operations.\r\n     */\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @dev Standard method to comply with ERC20 interface;\r\n     * prevents some Ethereum-contract-initiated operations.\r\n     */\r\n    function approve(address _spender, uint256 _value) public returns (bool) {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @dev Standard method to comply with ERC20 interface;\r\n     * prevents some Ethereum-contract-initiated operations.\r\n     */\r\n    function allowance(address _owner, address _spender) public view returns (uint256) {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Grant or remove burn permissions. Only owner can do that!\r\n     */\r\n    function grantBurner(address _burner, bool _value) public onlyOwner {\r\n        isBurner[_burner] = _value;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the burner.\r\n     */\r\n    modifier onlyBurner() {\r\n        require(isBurner[msg.sender]);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Burns a specific amount of tokens.\r\n     * Only an address listed in `isBurner` can do this.\r\n     * @param _value The amount of token to be burned.\r\n     */\r\n    function burn(uint256 _value) public onlyBurner {\r\n        super.burn(_value);\r\n    }\r\n}", "OptimizationUsed": "1", "ContractName": "UTNP", "ByteCode": "0x6060604052600436106100da5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100df578063095ea7b31461016957806318160ddd1461019f57806323b872dd146101c4578063313ce567146101ec57806342966c68146102155780634334614a1461022d57806354fd4d501461024c578063567a03a71461025f57806370a08231146102835780638da5cb5b146102a257806395d89b41146102d1578063a9059cbb146102e4578063dd62ed3e14610306578063f2fde38b1461032b575b600080fd5b34156100ea57600080fd5b6100f261034a565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561012e578082015183820152602001610116565b50505050905090810190601f16801561015b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561017457600080fd5b61018b600160a060020a0360043516602435610381565b604051901515815260200160405180910390f35b34156101aa57600080fd5b6101b2610389565b60405190815260200160405180910390f35b34156101cf57600080fd5b61018b600160a060020a036004358116906024351660443561038f565b34156101f757600080fd5b6101ff610398565b60405160ff909116815260200160405180910390f35b341561022057600080fd5b61022b60043561039d565b005b341561023857600080fd5b61018b600160a060020a03600435166103d0565b341561025757600080fd5b6100f26103e5565b341561026a57600080fd5b61022b600160a060020a0360043516602435151561041c565b341561028e57600080fd5b6101b2600160a060020a0360043516610462565b34156102ad57600080fd5b6102b561047d565b604051600160a060020a03909116815260200160405180910390f35b34156102dc57600080fd5b6100f261048c565b34156102ef57600080fd5b61018b600160a060020a03600435166024356104c3565b341561031157600080fd5b6101b2600160a060020a0360043581169060243516610381565b341561033657600080fd5b61022b600160a060020a03600435166105be565b60408051908101604052601581527f55544e2d503a20556e69766572736120546f6b656e0000000000000000000000602082015281565b600092915050565b60005481565b60009392505050565b601281565b600160a060020a03331660009081526003602052604090205460ff1615156103c457600080fd5b6103cd81610659565b50565b60036020526000908152604090205460ff1681565b60408051908101604052600381527f312e300000000000000000000000000000000000000000000000000000000000602082015281565b60025433600160a060020a0390811691161461043757600080fd5b600160a060020a03919091166000908152600360205260409020805460ff1916911515919091179055565b600160a060020a031660009081526001602052604090205490565b600254600160a060020a031681565b60408051908101604052600481527f55544e5000000000000000000000000000000000000000000000000000000000602082015281565b6000600160a060020a03831615156104da57600080fd5b600160a060020a0333166000908152600160205260409020548211156104ff57600080fd5b600160a060020a033316600090815260016020526040902054610528908363ffffffff61071416565b600160a060020a03338116600090815260016020526040808220939093559085168152205461055d908363ffffffff61072616565b600160a060020a0380851660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a350600192915050565b60025433600160a060020a039081169116146105d957600080fd5b600160a060020a03811615156105ee57600080fd5b600254600160a060020a0380831691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a03331660009081526001602052604081205482111561067e57600080fd5b5033600160a060020a0381166000908152600160205260409020546106a39083610714565b600160a060020a038216600090815260016020526040812091909155546106d0908363ffffffff61071416565b600055600160a060020a0381167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca58360405190815260200160405180910390a25050565b60008282111561072057fe5b50900390565b60008282018381101561073557fe5b93925050505600a165627a7a72305820664588c96d34e5a74eaad24b1388f142ca884acdcabe989c3f0cfe99ef7889000029"}