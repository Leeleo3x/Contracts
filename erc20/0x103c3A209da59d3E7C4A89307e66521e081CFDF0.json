{"Runs": "200", "SwarmSource": "bzzr://2c49f12155be3664a0f335285a4c862a018889caefeeb2e5d2d980edfc29dec0", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_master\",\"type\":\"address\"}],\"name\":\"setMigrationMaster\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isFrozen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"holder\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ico\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"migrationMaster\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unfreeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"setMigrationAgent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"migrationAgent\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalMigrated\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_ico\",\"type\":\"address\"},{\"name\":\"_migrationMaster\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Migrate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.16+commit.d7661dd9", "ConstructorArguments": "0000000000000000000000004e9547d1a1154ee0451f063c253ad8dc39d5384c000000000000000000000000b3b9adb05fd11db68ffcc036e3eb7ac476a17ee6", "SourceCode": "pragma solidity ^0.4.11;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/179\r\n */\r\ncontract ERC20Basic {\r\n  uint256 public totalSupply;\r\n  function balanceOf(address who) constant returns (uint256);\r\n  function transfer(address to, uint256 value) returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\n/**\r\n * @title Basic token\r\n * @dev Basic version of StandardToken, with no allowances. \r\n */\r\ncontract BasicToken is ERC20Basic {\r\n  using SafeMath for uint256;\r\n\r\n  mapping(address => uint256) balances;\r\n\r\n  /**\r\n  * @dev transfer token for a specified address\r\n  * @param _to The address to transfer to.\r\n  * @param _value The amount to be transferred.\r\n  */\r\n  function transfer(address _to, uint256 _value) returns (bool) {\r\n    balances[msg.sender] = balances[msg.sender].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    Transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n  * @dev Gets the balance of the specified address.\r\n  * @param _owner The address to query the the balance of. \r\n  * @return An uint256 representing the amount owned by the passed address.\r\n  */\r\n  function balanceOf(address _owner) constant returns (uint256 balance) {\r\n    return balances[_owner];\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) constant returns (uint256);\r\n  function transferFrom(address from, address to, uint256 value) returns (bool);\r\n  function approve(address spender, uint256 value) returns (bool);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n/**\r\n * @title Standard ERC20 token\r\n *\r\n * @dev Implementation of the basic standard token.\r\n * @dev https://github.com/ethereum/EIPs/issues/20\r\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\r\n */\r\ncontract StandardToken is ERC20, BasicToken {\r\n\r\n  mapping (address => mapping (address => uint256)) allowed;\r\n\r\n\r\n  /**\r\n   * @dev Transfer tokens from one address to another\r\n   * @param _from address The address which you want to send tokens from\r\n   * @param _to address The address which you want to transfer to\r\n   * @param _value uint256 the amout of tokens to be transfered\r\n   */\r\n  function transferFrom(address _from, address _to, uint256 _value) returns (bool) {\r\n    var _allowance = allowed[_from][msg.sender];\r\n\r\n    // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\r\n    // require (_value <= _allowance);\r\n\r\n    balances[_to] = balances[_to].add(_value);\r\n    balances[_from] = balances[_from].sub(_value);\r\n    allowed[_from][msg.sender] = _allowance.sub(_value);\r\n    Transfer(_from, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Aprove the passed address to spend the specified amount of tokens on behalf of msg.sender.\r\n   * @param _spender The address which will spend the funds.\r\n   * @param _value The amount of tokens to be spent.\r\n   */\r\n  function approve(address _spender, uint256 _value) returns (bool) {\r\n\r\n    // To change the approve amount you first have to reduce the addresses`\r\n    //  allowance to zero by calling `approve(_spender, 0)` if it is not\r\n    //  already 0 to mitigate the race condition described here:\r\n    //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n    require((_value == 0) || (allowed[msg.sender][_spender] == 0));\r\n\r\n    allowed[msg.sender][_spender] = _value;\r\n    Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\r\n   * @param _owner address The address which owns the funds.\r\n   * @param _spender address The address which will spend the funds.\r\n   * @return A uint256 specifing the amount of tokens still avaible for the spender.\r\n   */\r\n  function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n}\r\n\r\n\r\n// Migration Agent interface\r\ncontract MigrationAgent {\r\n    function migrateFrom(address _from, uint _value);\r\n}\r\n\r\ncontract GVToken is StandardToken {\r\n    \r\n    // Constants\r\n    string public constant name = \"Genesis Vision Token\";\r\n    string public constant symbol = \"GVT\";\r\n    uint   public constant decimals = 18;\r\n    uint   constant TOKEN_LIMIT = 44 * 1e6 * 1e18; \r\n    \r\n    address public ico;\r\n\r\n    // GVT transfers are blocked until ICO is finished.\r\n    bool public isFrozen = true;\r\n\r\n    // Token migration variables\r\n    address public migrationMaster;\r\n    address public migrationAgent;\r\n    uint public totalMigrated;\r\n\r\n    event Migrate(address indexed _from, address indexed _to, uint _value);\r\n\r\n    // Constructor\r\n    function GVToken(address _ico, address _migrationMaster) {\r\n        require(_ico != 0);\r\n        require(_migrationMaster != 0);\r\n        ico = _ico;\r\n        migrationMaster = _migrationMaster;\r\n    }\r\n\r\n    // Create tokens\r\n    function mint(address holder, uint value) {\r\n        require(msg.sender == ico);\r\n        require(value > 0);\r\n        require(totalSupply + value <= TOKEN_LIMIT);\r\n\r\n        balances[holder] += value;\r\n        totalSupply += value;\r\n        Transfer(0x0, holder, value);\r\n    }\r\n\r\n    // Allow token transfer.\r\n    function unfreeze() {\r\n        require(msg.sender == ico);\r\n        isFrozen = false;\r\n    }\r\n\r\n    // ERC20 functions\r\n    // =========================\r\n\r\n    function transfer(address _to, uint _value) public returns (bool) {\r\n        require(_to != address(0));\r\n        require(!isFrozen);\r\n        return super.transfer(_to, _value);\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint _value) public returns (bool) {\r\n        require(!isFrozen);\r\n        return super.transferFrom(_from, _to, _value);\r\n    }\r\n\r\n    function approve(address _spender, uint _value) public returns (bool) {\r\n        require(!isFrozen);\r\n        return super.approve(_spender, _value);\r\n    }\r\n\r\n    // Token migration\r\n    function migrate(uint value) external {\r\n        require(migrationAgent != 0);\r\n        require(value > 0);\r\n        require(value <= balances[msg.sender]);\r\n\r\n        balances[msg.sender] -= value;\r\n        totalSupply -= value;\r\n        totalMigrated += value;\r\n        MigrationAgent(migrationAgent).migrateFrom(msg.sender, value);\r\n        Migrate(msg.sender, migrationAgent, value);\r\n    }\r\n\r\n    // Set address of migration contract\r\n    function setMigrationAgent(address _agent) external {\r\n        require(migrationAgent == 0);\r\n        require(msg.sender == migrationMaster);\r\n        migrationAgent = _agent;\r\n    }\r\n\r\n    function setMigrationMaster(address _master) external {\r\n        require(msg.sender == migrationMaster);\r\n        require(_master != 0);\r\n        migrationMaster = _master;\r\n    }\r\n}", "OptimizationUsed": "1", "ContractName": "GVToken", "ByteCode": "0x606060405236156101045763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610109578063095ea7b31461019457806318160ddd146101ca57806323b872dd146101ef57806326316e581461022b578063313ce5671461024c57806333eeb1471461027157806340c10f1914610298578063454b0608146102bc5780635d452201146102d4578063676d2e62146103035780636a28f0001461033257806370a082311461034757806375e2ff65146103785780638328dbcd1461039957806395a0f5eb146103c857806395d89b41146103ed578063a9059cbb14610478578063dd62ed3e146104ae575b600080fd5b341561011457600080fd5b61011c6104e5565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101595780820151818401525b602001610140565b50505050905090810190601f1680156101865780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561019f57600080fd5b6101b6600160a060020a036004351660243561051c565b604051901515815260200160405180910390f35b34156101d557600080fd5b6101dd610549565b60405190815260200160405180910390f35b34156101fa57600080fd5b6101b6600160a060020a036004358116906024351660443561054f565b604051901515815260200160405180910390f35b341561023657600080fd5b61024a600160a060020a036004351661057e565b005b341561025757600080fd5b6101dd6105da565b60405190815260200160405180910390f35b341561027c57600080fd5b6101b66105df565b604051901515815260200160405180910390f35b34156102a357600080fd5b61024a600160a060020a03600435166024356105ef565b005b34156102c757600080fd5b61024a600435610691565b005b34156102df57600080fd5b6102e76107d1565b604051600160a060020a03909116815260200160405180910390f35b341561030e57600080fd5b6102e76107e0565b604051600160a060020a03909116815260200160405180910390f35b341561033d57600080fd5b61024a6107ef565b005b341561035257600080fd5b6101dd600160a060020a036004351661082b565b60405190815260200160405180910390f35b341561038357600080fd5b61024a600160a060020a036004351661084a565b005b34156103a457600080fd5b6102e76108a7565b604051600160a060020a03909116815260200160405180910390f35b34156103d357600080fd5b6101dd6108b6565b60405190815260200160405180910390f35b34156103f857600080fd5b61011c6108bc565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101595780820151818401525b602001610140565b50505050905090810190601f1680156101865780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561048357600080fd5b6101b6600160a060020a03600435166024356108f3565b604051901515815260200160405180910390f35b34156104b957600080fd5b6101dd600160a060020a0360043581169060243516610934565b60405190815260200160405180910390f35b60408051908101604052601481527f47656e6573697320566973696f6e20546f6b656e000000000000000000000000602082015281565b60035460009060a060020a900460ff161561053657600080fd5b6105408383610961565b90505b92915050565b60005481565b60035460009060a060020a900460ff161561056957600080fd5b610574848484610a08565b90505b9392505050565b60045433600160a060020a0390811691161461059957600080fd5b600160a060020a03811615156105ae57600080fd5b6004805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b601281565b60035460a060020a900460ff1681565b60035433600160a060020a0390811691161461060a57600080fd5b6000811161061757600080fd5b6000546a24655cc78b38d7ac000000908201111561063457600080fd5b600160a060020a0382166000818152600160205260408082208054850190558154840182557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9084905190815260200160405180910390a35b5050565b600554600160a060020a031615156106a857600080fd5b600081116106b557600080fd5b600160a060020a0333166000908152600160205260409020548111156106da57600080fd5b33600160a060020a03818116600090815260016020526040808220805486900390558154859003909155600680548501905560055490911691637a3130e3918490517c010000000000000000000000000000000000000000000000000000000063ffffffff8516028152600160a060020a0390921660048301526024820152604401600060405180830381600087803b151561077557600080fd5b6102c65a03f1151561078657600080fd5b5050600554600160a060020a03908116915033167f18df02dcc52b9c494f391df09661519c0069bd8540141946280399408205ca1a8360405190815260200160405180910390a35b50565b600354600160a060020a031681565b600454600160a060020a031681565b60035433600160a060020a0390811691161461080a57600080fd5b6003805474ff0000000000000000000000000000000000000000191690555b565b600160a060020a0381166000908152600160205260409020545b919050565b600554600160a060020a03161561086057600080fd5b60045433600160a060020a0390811691161461087b57600080fd5b6005805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b600554600160a060020a031681565b60065481565b60408051908101604052600381527f4756540000000000000000000000000000000000000000000000000000000000602082015281565b6000600160a060020a038316151561090a57600080fd5b60035460a060020a900460ff161561092157600080fd5b6105408383610b1d565b90505b92915050565b600160a060020a038083166000908152600260209081526040808320938516835292905220545b92915050565b60008115806109935750600160a060020a03338116600090815260026020908152604080832093871683529290522054155b151561099e57600080fd5b600160a060020a03338116600081815260026020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b600160a060020a038084166000908152600260209081526040808320338516845282528083205493861683526001909152812054909190610a4f908463ffffffff610bdd16565b600160a060020a038086166000908152600160205260408082209390935590871681522054610a84908463ffffffff610bf716565b600160a060020a038616600090815260016020526040902055610aad818463ffffffff610bf716565b600160a060020a03808716600081815260026020908152604080832033861684529091529081902093909355908616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9086905190815260200160405180910390a3600191505b509392505050565b600160a060020a033316600090815260016020526040812054610b46908363ffffffff610bf716565b600160a060020a033381166000908152600160205260408082209390935590851681522054610b7b908363ffffffff610bdd16565b600160a060020a0380851660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060015b92915050565b600082820183811015610bec57fe5b8091505b5092915050565b600082821115610c0357fe5b508082035b929150505600a165627a7a723058202c49f12155be3664a0f335285a4c862a018889caefeeb2e5d2d980edfc29dec00029"}