{"Runs": "200", "SwarmSource": "bzzr://9ef46bd45740884da000d48ebb6649a09ac16cb9755518b2b16a4981893d1561", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getBoosterRaiseValue\",\"outputs\":[{\"name\":\"raiseValue\",\"type\":\"uint24\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getBoosterAmount\",\"outputs\":[{\"name\":\"boosterAmount\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getBoosterStrength\",\"outputs\":[{\"name\":\"strength\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementsERC721\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"total\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_duration\",\"type\":\"uint32\"},{\"name\":\"_type\",\"type\":\"uint8\"},{\"name\":\"_strength\",\"type\":\"uint8\"},{\"name\":\"_amount\",\"type\":\"uint32\"},{\"name\":\"_raiseValue\",\"type\":\"uint24\"}],\"name\":\"mintBooster\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getBoosterType\",\"outputs\":[{\"name\":\"boosterType\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"boosters\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"duration\",\"type\":\"uint32\"},{\"name\":\"boosterType\",\"type\":\"uint8\"},{\"name\":\"raiseValue\",\"type\":\"uint24\"},{\"name\":\"strength\",\"type\":\"uint8\"},{\"name\":\"amount\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"chests\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"auction\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"takeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_auction\",\"type\":\"address\"}],\"name\":\"setAuction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getBoosterDuration\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_chests\",\"type\":\"address\"}],\"name\":\"setChests\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fishbank\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fishbank\",\"type\":\"address\"}],\"name\":\"setFishbank\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.21+commit.dfe3193c", "ConstructorArguments": "", "SourceCode": "pragma solidity ^0.4.18;\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n    /**\r\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n     * account.\r\n     */\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n     * @param newOwner The address to transfer ownership to.\r\n     */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\ncontract FishbankBoosters is Ownable {\r\n\r\n    struct Booster {\r\n        address owner;\r\n        uint32 duration;\r\n        uint8 boosterType;\r\n        uint24 raiseValue;\r\n        uint8 strength;\r\n        uint32 amount;\r\n    }\r\n\r\n    Booster[] public boosters;\r\n    bool public implementsERC721 = true;\r\n    string public name = \"Fishbank Boosters\";\r\n    string public symbol = \"FISHB\";\r\n    mapping(uint256 => address) public approved;\r\n    mapping(address => uint256) public balances;\r\n    address public fishbank;\r\n    address public chests;\r\n    address public auction;\r\n\r\n    modifier onlyBoosterOwner(uint256 _tokenId) {\r\n        require(boosters[_tokenId].owner == msg.sender);\r\n        _;\r\n    }\r\n\r\n    modifier onlyChest() {\r\n        require(chests == msg.sender);\r\n        _;\r\n    }\r\n\r\n    function FishbankBoosters() public {\r\n        //nothing yet\r\n    }\r\n\r\n    //mints the boosters can only be called by owner. could be a smart contract\r\n    function mintBooster(address _owner, uint32 _duration, uint8 _type, uint8 _strength, uint32 _amount, uint24 _raiseValue) onlyChest public {\r\n        boosters.length ++;\r\n\r\n        Booster storage tempBooster = boosters[boosters.length - 1];\r\n\r\n        tempBooster.owner = _owner;\r\n        tempBooster.duration = _duration;\r\n        tempBooster.boosterType = _type;\r\n        tempBooster.strength = _strength;\r\n        tempBooster.amount = _amount;\r\n        tempBooster.raiseValue = _raiseValue;\r\n\r\n        Transfer(address(0), _owner, boosters.length - 1);\r\n    }\r\n\r\n    function setFishbank(address _fishbank) onlyOwner public {\r\n        fishbank = _fishbank;\r\n    }\r\n\r\n    function setChests(address _chests) onlyOwner public {\r\n        if (chests != address(0)) {\r\n            revert();\r\n        }\r\n        chests = _chests;\r\n    }\r\n\r\n    function setAuction(address _auction) onlyOwner public {\r\n        auction = _auction;\r\n    }\r\n\r\n    function getBoosterType(uint256 _tokenId) view public returns (uint8 boosterType) {\r\n        boosterType = boosters[_tokenId].boosterType;\r\n    }\r\n\r\n    function getBoosterAmount(uint256 _tokenId) view public returns (uint32 boosterAmount) {\r\n        boosterAmount = boosters[_tokenId].amount;\r\n    }\r\n\r\n    function getBoosterDuration(uint256 _tokenId) view public returns (uint32) {\r\n        if (boosters[_tokenId].boosterType == 4 || boosters[_tokenId].boosterType == 2) {\r\n            return boosters[_tokenId].duration + boosters[_tokenId].raiseValue * 60;\r\n        }\r\n        return boosters[_tokenId].duration;\r\n    }\r\n\r\n    function getBoosterStrength(uint256 _tokenId) view public returns (uint8 strength) {\r\n        strength = boosters[_tokenId].strength;\r\n    }\r\n\r\n    function getBoosterRaiseValue(uint256 _tokenId) view public returns (uint24 raiseValue) {\r\n        raiseValue = boosters[_tokenId].raiseValue;\r\n    }\r\n\r\n    //ERC721 functionality\r\n    //could split this to a different contract but doesn't make it easier to read\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    function totalSupply() public view returns (uint256 total) {\r\n        total = boosters.length;\r\n    }\r\n\r\n    function balanceOf(address _owner) public view returns (uint256 balance){\r\n        balance = balances[_owner];\r\n    }\r\n\r\n    function ownerOf(uint256 _tokenId) public view returns (address owner){\r\n        owner = boosters[_tokenId].owner;\r\n    }\r\n\r\n    function _transfer(address _from, address _to, uint256 _tokenId) internal {\r\n        require(boosters[_tokenId].owner == _from);\r\n        //can only transfer if previous owner equals from\r\n        boosters[_tokenId].owner = _to;\r\n        approved[_tokenId] = address(0);\r\n        //reset approved of fish on every transfer\r\n        balances[_from] -= 1;\r\n        //underflow can only happen on 0x\r\n        balances[_to] += 1;\r\n        //overflows only with very very large amounts of fish\r\n        Transfer(_from, _to, _tokenId);\r\n    }\r\n\r\n    function transfer(address _to, uint256 _tokenId) public\r\n    onlyBoosterOwner(_tokenId) //check if msg.sender is the owner of this fish\r\n    returns (bool)\r\n    {\r\n        _transfer(msg.sender, _to, _tokenId);\r\n        //after master modifier invoke internal transfer\r\n        return true;\r\n    }\r\n\r\n    function approve(address _to, uint256 _tokenId) public\r\n    onlyBoosterOwner(_tokenId)\r\n    {\r\n        approved[_tokenId] = _to;\r\n        Approval(msg.sender, _to, _tokenId);\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _tokenId) public returns (bool) {\r\n        require(approved[_tokenId] == msg.sender || msg.sender == fishbank || msg.sender == auction);\r\n        //require msg.sender to be approved for this token or to be the fishbank contract\r\n        _transfer(_from, _to, _tokenId);\r\n        //handles event, balances and approval reset\r\n        return true;\r\n    }\r\n\r\n\r\n    function takeOwnership(uint256 _tokenId) public {\r\n        require(approved[_tokenId] == msg.sender);\r\n        _transfer(ownerOf(_tokenId), msg.sender, _tokenId);\r\n    }\r\n\r\n\r\n}", "OptimizationUsed": "0", "ContractName": "FishbankBoosters", "ByteCode": "0x60606040526004361061015f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde0314610164578063095ea7b3146101f25780630f8ef9f8146102345780630f99da4a146102755780631027e242146102b85780631051db34146102f557806318160ddd1461032257806323b872dd1461034b578063262bcb68146103c457806327e235e3146104415780636352211e1461048e57806365113528146104f157806370a082311461052e57806370cd22ae1461057b578063797f87ba1461062f5780637d4061e6146106845780637d9f6db5146106e75780638da5cb5b1461073c57806395d89b4114610791578063a9059cbb1461081f578063b2e6ceeb14610879578063b8c6f5791461089c578063e2a9ba05146108d5578063e620761114610918578063e7a2e28e14610951578063ee245b53146109a6578063f2fde38b146109df575b600080fd5b341561016f57600080fd5b610177610a18565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101b757808201518184015260208101905061019c565b50505050905090810190601f1680156101e45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101fd57600080fd5b610232600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610ab6565b005b341561023f57600080fd5b6102556004808035906020019091905050610be3565b604051808262ffffff1662ffffff16815260200191505060405180910390f35b341561028057600080fd5b6102966004808035906020019091905050610c1c565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34156102c357600080fd5b6102d96004808035906020019091905050610c56565b604051808260ff1660ff16815260200191505060405180910390f35b341561030057600080fd5b610308610c8d565b604051808215151515815260200191505060405180910390f35b341561032d57600080fd5b610335610ca0565b6040518082815260200191505060405180910390f35b341561035657600080fd5b6103aa600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610cad565b604051808215151515815260200191505060405180910390f35b34156103cf57600080fd5b61043f600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803563ffffffff1690602001909190803560ff1690602001909190803560ff1690602001909190803563ffffffff1690602001909190803562ffffff16906020019091905050610de2565b005b341561044c57600080fd5b610478600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610fca565b6040518082815260200191505060405180910390f35b341561049957600080fd5b6104af6004808035906020019091905050610fe2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156104fc57600080fd5b610512600480803590602001909190505061102c565b604051808260ff1660ff16815260200191505060405180910390f35b341561053957600080fd5b610565600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611063565b6040518082815260200191505060405180910390f35b341561058657600080fd5b61059c60048080359060200190919050506110ac565b604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018663ffffffff1663ffffffff1681526020018560ff1660ff1681526020018462ffffff1662ffffff1681526020018360ff1660ff1681526020018263ffffffff1663ffffffff168152602001965050505050505060405180910390f35b341561063a57600080fd5b610642611160565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561068f57600080fd5b6106a56004808035906020019091905050611186565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156106f257600080fd5b6106fa6111b9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561074757600080fd5b61074f6111df565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561079c57600080fd5b6107a4611204565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107e45780820151818401526020810190506107c9565b50505050905090810190601f1680156108115780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561082a57600080fd5b61085f600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506112a2565b604051808215151515815260200191505060405180910390f35b341561088457600080fd5b61089a6004808035906020019091905050611335565b005b34156108a757600080fd5b6108d3600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506113b8565b005b34156108e057600080fd5b6108f66004808035906020019091905050611457565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b341561092357600080fd5b61094f600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611577565b005b341561095c57600080fd5b610964611673565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156109b157600080fd5b6109dd600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611699565b005b34156109ea57600080fd5b610a16600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611738565b005b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610aae5780601f10610a8357610100808354040283529160200191610aae565b820191906000526020600020905b815481529060010190602001808311610a9157829003601f168201915b505050505081565b803373ffffffffffffffffffffffffffffffffffffffff16600182815481101515610add57fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610b3157600080fd5b826005600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600182815481101515610bf457fe5b906000526020600020906002020160000160199054906101000a900462ffffff169050919050565b6000600182815481101515610c2d57fe5b906000526020600020906002020160010160009054906101000a900463ffffffff169050919050565b6000600182815481101515610c6757fe5b9060005260206000209060020201600001601c9054906101000a900460ff169050919050565b600260009054906101000a900460ff1681565b6000600180549050905090565b60003373ffffffffffffffffffffffffffffffffffffffff166005600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610d695750600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b80610dc15750600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515610dcc57600080fd5b610dd784848461188d565b600190509392505050565b60003373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610e4057600080fd5b60018054809190600101610e549190611ab5565b50600180808054905003815481101515610e6a57fe5b90600052602060002090600202019050868160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550858160000160146101000a81548163ffffffff021916908363ffffffff160217905550848160000160186101000a81548160ff021916908360ff1602179055508381600001601c6101000a81548160ff021916908360ff160217905550828160010160006101000a81548163ffffffff021916908363ffffffff160217905550818160000160196101000a81548162ffffff021916908362ffffff16021790555060018080549050038773ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050505050565b60066020528060005260406000206000915090505481565b6000600182815481101515610ff357fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600060018281548110151561103d57fe5b906000526020600020906002020160000160189054906101000a900460ff169050919050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6001818154811015156110bb57fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900463ffffffff16908060000160189054906101000a900460ff16908060000160199054906101000a900462ffffff169080600001601c9054906101000a900460ff16908060010160009054906101000a900463ffffffff16905086565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561129a5780601f1061126f5761010080835404028352916020019161129a565b820191906000526020600020905b81548152906001019060200180831161127d57829003601f168201915b505050505081565b6000813373ffffffffffffffffffffffffffffffffffffffff166001828154811015156112cb57fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561131f57600080fd5b61132a33858561188d565b600191505092915050565b3373ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156113a257600080fd5b6113b56113ae82610fe2565b338361188d565b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561141357600080fd5b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600460018381548110151561146a57fe5b906000526020600020906002020160000160189054906101000a900460ff1660ff1614806114c8575060026001838154811015156114a457fe5b906000526020600020906002020160000160189054906101000a900460ff1660ff16145b1561153e57603c6001838154811015156114de57fe5b906000526020600020906002020160000160199054906101000a900462ffffff160262ffffff1660018381548110151561151457fe5b906000526020600020906002020160000160149054906101000a900463ffffffff16019050611572565b60018281548110151561154d57fe5b906000526020600020906002020160000160149054906101000a900463ffffffff1690505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156115d257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561162f57600080fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156116f457600080fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561179357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156117cf57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8273ffffffffffffffffffffffffffffffffffffffff166001828154811015156118b357fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561190757600080fd5b8160018281548110151561191757fe5b906000526020600020906002020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b815481835581811511611ae257600202816002028360005260206000209182019101611ae19190611ae7565b5b505050565b611b9691905b80821115611b9257600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549063ffffffff02191690556000820160186101000a81549060ff02191690556000820160196101000a81549062ffffff021916905560008201601c6101000a81549060ff02191690556001820160006101000a81549063ffffffff021916905550600201611aed565b5090565b905600a165627a7a723058209ef46bd45740884da000d48ebb6649a09ac16cb9755518b2b16a4981893d15610029"}