{"Runs": "200", "SwarmSource": "bzzr://50e6734d2e5bb8a18d6b1b029eb056a7d79606d1696897d0ed77f44ce8a8ce60", "ABI": "[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"disableLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SALE_END_TIME\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allowTransfers\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"limitedWallets\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"limitedWalletsManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"issuanceFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"LIMIT_TRANSFERS_PERIOD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"delLimitedWalletAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"limitEndDate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwners\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_listener\",\"type\":\"address\"}],\"name\":\"setListener\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enableTransfers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishIssuance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"eventListener\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isLimitEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_allowTransfers\",\"type\":\"bool\"}],\"name\":\"setAllowTransfers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownerByAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"addLimitedWalletAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owners\",\"type\":\"address[]\"}],\"name\":\"setOwners\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_listener\",\"type\":\"address\"},{\"name\":\"_owners\",\"type\":\"address[]\"},{\"name\":\"manager\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TransfersEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newState\",\"type\":\"bool\"}],\"name\":\"AllowTransfersChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Destroy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"IssuanceFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"owners\",\"type\":\"address[]\"}],\"name\":\"SetOwners\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.21+commit.dfe3193c", "ConstructorArguments": "00000000000000000000000049db6ee4507132d1fdac92318e0e6150bf78672800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005eaf0a37346ff992199fbc4480c9ccc4137d9c1f0000000000000000000000000000000000000000000000000000000000000000", "SourceCode": "pragma solidity ^0.4.21;\r\n\r\n// File: contracts/ownership/MultiOwnable.sol\r\n\r\n/**\r\n * @title MultiOwnable\r\n * @dev The MultiOwnable contract has owners addresses and provides basic authorization control\r\n * functions, this simplifies the implementation of \"users permissions\".\r\n */\r\ncontract MultiOwnable {\r\n    address public manager; // address used to set owners\r\n    address[] public owners;\r\n    mapping(address => bool) public ownerByAddress;\r\n\r\n    event SetOwners(address[] owners);\r\n\r\n    modifier onlyOwner() {\r\n        require(ownerByAddress[msg.sender] == true);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev MultiOwnable constructor sets the manager\r\n     */\r\n    function MultiOwnable() public {\r\n        manager = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * @dev Function to set owners addresses\r\n     */\r\n    function setOwners(address[] _owners) public {\r\n        require(msg.sender == manager);\r\n        _setOwners(_owners);\r\n\r\n    }\r\n\r\n    function _setOwners(address[] _owners) internal {\r\n        for(uint256 i = 0; i < owners.length; i++) {\r\n            ownerByAddress[owners[i]] = false;\r\n        }\r\n\r\n\r\n        for(uint256 j = 0; j < _owners.length; j++) {\r\n            ownerByAddress[_owners[j]] = true;\r\n        }\r\n        owners = _owners;\r\n        SetOwners(_owners);\r\n    }\r\n\r\n    function getOwners() public constant returns (address[]) {\r\n        return owners;\r\n    }\r\n}\r\n\r\n// File: contracts/math/SafeMath.sol\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\ncontract SafeMath {\r\n    /**\r\n    * @dev constructor\r\n    */\r\n    function SafeMath() public {\r\n    }\r\n\r\n    function safeMul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function safeDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(a >= b);\r\n        return a - b;\r\n    }\r\n\r\n    function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\n// File: contracts/token/IERC20Token.sol\r\n\r\n/**\r\n * @title IERC20Token - ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract IERC20Token {\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    uint256 public totalSupply;\r\n\r\n    function balanceOf(address _owner) public constant returns (uint256 balance);\r\n    function transfer(address _to, uint256 _value)  public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint256 _value)  public returns (bool success);\r\n    function approve(address _spender, uint256 _value)  public returns (bool success);\r\n    function allowance(address _owner, address _spender)  public constant returns (uint256 remaining);\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\n// File: contracts/token/ERC20Token.sol\r\n\r\n/**\r\n * @title ERC20Token - ERC20 base implementation\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20Token is IERC20Token, SafeMath {\r\n    mapping (address => uint256) public balances;\r\n    mapping (address => mapping (address => uint256)) public allowed;\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool) {\r\n        require(_to != address(0));\r\n        require(balances[msg.sender] >= _value);\r\n\r\n        balances[msg.sender] = safeSub(balances[msg.sender], _value);\r\n        balances[_to] = safeAdd(balances[_to], _value);\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n        require(_to != address(0));\r\n        require(balances[_from] >= _value && allowed[_from][msg.sender] >= _value);\r\n\r\n        balances[_to] = safeAdd(balances[_to], _value);\r\n        balances[_from] = safeSub(balances[_from], _value);\r\n        allowed[_from][msg.sender] = safeSub(allowed[_from][msg.sender], _value);\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function balanceOf(address _owner) public constant returns (uint256) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public constant returns (uint256) {\r\n      return allowed[_owner][_spender];\r\n    }\r\n}\r\n\r\n// File: contracts/token/ITokenEventListener.sol\r\n\r\n/**\r\n * @title ITokenEventListener\r\n * @dev Interface which should be implemented by token listener\r\n */\r\ninterface ITokenEventListener {\r\n    /**\r\n     * @dev Function is called after token transfer/transferFrom\r\n     * @param _from Sender address\r\n     * @param _to Receiver address\r\n     * @param _value Amount of tokens\r\n     */\r\n    function onTokenTransfer(address _from, address _to, uint256 _value) external;\r\n}\r\n\r\n// File: contracts/token/ManagedToken.sol\r\n\r\n/**\r\n * @title ManagedToken\r\n * @dev ERC20 compatible token with issue and destroy facilities\r\n * @dev All transfers can be monitored by token event listener\r\n */\r\ncontract ManagedToken is ERC20Token, MultiOwnable {\r\n    bool public allowTransfers = false;\r\n    bool public issuanceFinished = false;\r\n\r\n    ITokenEventListener public eventListener;\r\n\r\n    event AllowTransfersChanged(bool _newState);\r\n    event Issue(address indexed _to, uint256 _value);\r\n    event Destroy(address indexed _from, uint256 _value);\r\n    event IssuanceFinished();\r\n\r\n    modifier transfersAllowed() {\r\n        require(allowTransfers);\r\n        _;\r\n    }\r\n\r\n    modifier canIssue() {\r\n        require(!issuanceFinished);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev ManagedToken constructor\r\n     * @param _listener Token listener(address can be 0x0)\r\n     * @param _owners Owners list\r\n     */\r\n    function ManagedToken(address _listener, address[] _owners) public {\r\n        if(_listener != address(0)) {\r\n            eventListener = ITokenEventListener(_listener);\r\n        }\r\n        _setOwners(_owners);\r\n    }\r\n\r\n    /**\r\n     * @dev Enable/disable token transfers. Can be called only by owners\r\n     * @param _allowTransfers True - allow False - disable\r\n     */\r\n    function setAllowTransfers(bool _allowTransfers) external onlyOwner {\r\n        allowTransfers = _allowTransfers;\r\n        AllowTransfersChanged(_allowTransfers);\r\n    }\r\n\r\n    /**\r\n     * @dev Set/remove token event listener\r\n     * @param _listener Listener address (Contract must implement ITokenEventListener interface)\r\n     */\r\n    function setListener(address _listener) public onlyOwner {\r\n        if(_listener != address(0)) {\r\n            eventListener = ITokenEventListener(_listener);\r\n        } else {\r\n            delete eventListener;\r\n        }\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public transfersAllowed returns (bool) {\r\n        bool success = super.transfer(_to, _value);\r\n        if(hasListener() && success) {\r\n            eventListener.onTokenTransfer(msg.sender, _to, _value);\r\n        }\r\n        return success;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public transfersAllowed returns (bool) {\r\n        bool success = super.transferFrom(_from, _to, _value);\r\n        if(hasListener() && success) {\r\n            eventListener.onTokenTransfer(_from, _to, _value);\r\n        }\r\n        return success;\r\n    }\r\n\r\n    function hasListener() internal view returns(bool) {\r\n        if(eventListener == address(0)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Issue tokens to specified wallet\r\n     * @param _to Wallet address\r\n     * @param _value Amount of tokens\r\n     */\r\n    function issue(address _to, uint256 _value) external onlyOwner canIssue {\r\n        totalSupply = safeAdd(totalSupply, _value);\r\n        balances[_to] = safeAdd(balances[_to], _value);\r\n        Issue(_to, _value);\r\n        Transfer(address(0), _to, _value);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroy tokens on specified address (Called by owner or token holder)\r\n     * @dev Fund contract address must be in the list of owners to burn token during refund\r\n     * @param _from Wallet address\r\n     * @param _value Amount of tokens to destroy\r\n     */\r\n    function destroy(address _from, uint256 _value) external {\r\n        require(ownerByAddress[msg.sender] || msg.sender == _from);\r\n        require(balances[_from] >= _value);\r\n        totalSupply = safeSub(totalSupply, _value);\r\n        balances[_from] = safeSub(balances[_from], _value);\r\n        Transfer(_from, address(0), _value);\r\n        Destroy(_from, _value);\r\n    }\r\n\r\n    /**\r\n     * @dev Increase the amount of tokens that an owner allowed to a spender.\r\n     *\r\n     * approve should be called when allowed[_spender] == 0. To increment\r\n     * allowed value is better to use this function to avoid 2 calls (and wait until\r\n     * the first transaction is mined)\r\n     * From OpenZeppelin StandardToken.sol\r\n     * @param _spender The address which will spend the funds.\r\n     * @param _addedValue The amount of tokens to increase the allowance by.\r\n     */\r\n    function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\r\n        allowed[msg.sender][_spender] = safeAdd(allowed[msg.sender][_spender], _addedValue);\r\n        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Decrease the amount of tokens that an owner allowed to a spender.\r\n     *\r\n     * approve should be called when allowed[_spender] == 0. To decrement\r\n     * allowed value is better to use this function to avoid 2 calls (and wait until\r\n     * the first transaction is mined)\r\n     * From OpenZeppelin StandardToken.sol\r\n     * @param _spender The address which will spend the funds.\r\n     * @param _subtractedValue The amount of tokens to decrease the allowance by.\r\n     */\r\n    function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\r\n        uint oldValue = allowed[msg.sender][_spender];\r\n        if (_subtractedValue > oldValue) {\r\n            allowed[msg.sender][_spender] = 0;\r\n        } else {\r\n            allowed[msg.sender][_spender] = safeSub(oldValue, _subtractedValue);\r\n        }\r\n        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Finish token issuance\r\n     * @return True if success\r\n     */\r\n    function finishIssuance() public onlyOwner returns (bool) {\r\n        issuanceFinished = true;\r\n        IssuanceFinished();\r\n        return true;\r\n    }\r\n}\r\n\r\n// File: contracts/token/TransferLimitedToken.sol\r\n\r\n/**\r\n * @title TransferLimitedToken\r\n * @dev Token with ability to limit transfers within wallets included in limitedWallets list for certain period of time\r\n */\r\ncontract TransferLimitedToken is ManagedToken {\r\n    uint256 public constant LIMIT_TRANSFERS_PERIOD = 365 days;\r\n\r\n    mapping(address => bool) public limitedWallets;\r\n    uint256 public limitEndDate;\r\n    address public limitedWalletsManager;\r\n    bool public isLimitEnabled;\r\n\r\n    event TransfersEnabled();\r\n\r\n    modifier onlyManager() {\r\n        require(msg.sender == limitedWalletsManager);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Check if transfer between addresses is available\r\n     * @param _from From address\r\n     * @param _to To address\r\n     */\r\n    modifier canTransfer(address _from, address _to)  {\r\n        require(now >= limitEndDate || !isLimitEnabled || (!limitedWallets[_from] && !limitedWallets[_to]));\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev TransferLimitedToken constructor\r\n     * @param _limitStartDate Limit start date\r\n     * @param _listener Token listener(address can be 0x0)\r\n     * @param _owners Owners list\r\n     * @param _limitedWalletsManager Address used to add/del wallets from limitedWallets\r\n     */\r\n    function TransferLimitedToken(\r\n        uint256 _limitStartDate,\r\n        address _listener,\r\n        address[] _owners,\r\n        address _limitedWalletsManager\r\n    ) public ManagedToken(_listener, _owners)\r\n    {\r\n        limitEndDate = _limitStartDate + LIMIT_TRANSFERS_PERIOD;\r\n        isLimitEnabled = true;\r\n        limitedWalletsManager = _limitedWalletsManager;\r\n    }\r\n\r\n    /**\r\n     * @dev Enable token transfers\r\n     */\r\n    function enableTransfers() public {\r\n        require(msg.sender == limitedWalletsManager);\r\n        allowTransfers = true;\r\n        TransfersEnabled();\r\n    }\r\n\r\n    /**\r\n     * @dev Add address to limitedWallets\r\n     * @dev Can be called only by manager\r\n     */\r\n    function addLimitedWalletAddress(address _wallet) public {\r\n        require(msg.sender == limitedWalletsManager || ownerByAddress[msg.sender]);\r\n        limitedWallets[_wallet] = true;\r\n    }\r\n\r\n    /**\r\n     * @dev Del address from limitedWallets\r\n     * @dev Can be called only by manager\r\n     */\r\n    function delLimitedWalletAddress(address _wallet) public onlyManager {\r\n        limitedWallets[_wallet] = false;\r\n    }\r\n\r\n    /**\r\n     * @dev Disable transfer limit manually. Can be called only by manager\r\n     */\r\n    function disableLimit() public onlyManager {\r\n        isLimitEnabled = false;\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public canTransfer(msg.sender, _to) returns (bool) {\r\n        return super.transfer(_to, _value);\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public canTransfer(_from, _to) returns (bool) {\r\n        return super.transferFrom(_from, _to, _value);\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public canTransfer(msg.sender, _spender) returns (bool) {\r\n        return super.approve(_spender,_value);\r\n    }\r\n}\r\n\r\n// File: contracts/AbyssToken.sol\r\n\r\ncontract ABYSS is TransferLimitedToken {\r\n    uint256 public constant SALE_END_TIME = 1526479200; // 16.05.2018 14:00:00 UTC\r\n\r\n    function ABYSS(address _listener, address[] _owners, address manager) public\r\n        TransferLimitedToken(SALE_END_TIME, _listener, _owners, manager)\r\n    {\r\n        name = \"ABYSS\";\r\n        symbol = \"ABYSS\";\r\n        decimals = 18;\r\n    }\r\n}", "OptimizationUsed": "1", "ContractName": "ABYSS", "ByteCode": "0x6060604052600436106101a85763ffffffff60e060020a600035041663025e7c2781146101ad57806306fdde03146101df578063095ea7b31461026957806318160ddd1461029f5780631acc26bc146102c457806320a0045a146102d95780632185810b146102ec57806323b872dd146102ff57806327e235e3146103275780632e21740514610346578063313ce5671461036557806344e7faa41461038e5780634662299a146103a1578063481c6a75146103b45780635c658165146103c757806366188463146103ec57806367f046881461040e57806370a08231146104215780637d80265514610440578063867904b41461045f5780638d0899301461048157806395d89b4114610494578063a0e67e2b146104a7578063a24835d11461050d578063a9059cbb1461052f578063adcd905b14610551578063af35c6c714610570578063c422293b14610583578063cd9217f714610596578063d73dd623146105a9578063daf4f66e146105cb578063dd62ed3e146105de578063df50afa414610603578063eb6b192f1461061b578063ee8cbc9d1461063a578063fa4d369814610659575b600080fd5b34156101b857600080fd5b6101c36004356106a8565b604051600160a060020a03909116815260200160405180910390f35b34156101ea57600080fd5b6101f26106d0565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561022e578082015183820152602001610216565b50505050905090810190601f16801561025b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561027457600080fd5b61028b600160a060020a036004351660243561076e565b604051901515815260200160405180910390f35b34156102aa57600080fd5b6102b2610804565b60405190815260200160405180910390f35b34156102cf57600080fd5b6102d761080a565b005b34156102e457600080fd5b6102b2610845565b34156102f757600080fd5b61028b61084d565b341561030a57600080fd5b61028b600160a060020a0360043581169060243516604435610856565b341561033257600080fd5b6102b2600160a060020a03600435166108ee565b341561035157600080fd5b61028b600160a060020a0360043516610900565b341561037057600080fd5b610378610915565b60405160ff909116815260200160405180910390f35b341561039957600080fd5b6101c361091e565b34156103ac57600080fd5b61028b61092d565b34156103bf57600080fd5b6101c361093b565b34156103d257600080fd5b6102b2600160a060020a036004358116906024351661094a565b34156103f757600080fd5b61028b600160a060020a0360043516602435610967565b341561041957600080fd5b6102b2610a5b565b341561042c57600080fd5b6102b2600160a060020a0360043516610a63565b341561044b57600080fd5b6102d7600160a060020a0360043516610a7e565b341561046a57600080fd5b6102d7600160a060020a0360043516602435610aba565b341561048c57600080fd5b6102b2610bae565b341561049f57600080fd5b6101f2610bb4565b34156104b257600080fd5b6104ba610c1f565b60405160208082528190810183818151815260200191508051906020019060200280838360005b838110156104f95780820151838201526020016104e1565b505050509050019250505060405180910390f35b341561051857600080fd5b6102d7600160a060020a0360043516602435610c88565b341561053a57600080fd5b61028b600160a060020a0360043516602435610da3565b341561055c57600080fd5b6102d7600160a060020a0360043516610e30565b341561057b57600080fd5b6102d7610ec0565b341561058e57600080fd5b61028b610f16565b34156105a157600080fd5b6101c3610f81565b34156105b457600080fd5b61028b600160a060020a0360043516602435610f96565b34156105d657600080fd5b61028b611034565b34156105e957600080fd5b6102b2600160a060020a0360043581169060243516611055565b341561060e57600080fd5b6102d76004351515611080565b341561062657600080fd5b61028b600160a060020a03600435166110f0565b341561064557600080fd5b6102d7600160a060020a0360043516611105565b341561066457600080fd5b6102d7600460248135818101908301358060208181020160405190810160405280939291908181526020018383602002808284375094965061116995505050505050565b60078054829081106106b657fe5b600091825260209091200154600160a060020a0316905081565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107665780601f1061073b57610100808354040283529160200191610766565b820191906000526020600020905b81548152906001019060200180831161074957829003601f168201915b505050505081565b60003383600b544210158061079e5750600c5474010000000000000000000000000000000000000000900460ff16155b806107e65750600160a060020a0382166000908152600a602052604090205460ff161580156107e65750600160a060020a0381166000908152600a602052604090205460ff16155b15156107f157600080fd5b6107fb858561118d565b95945050505050565b60035481565b600c5433600160a060020a0390811691161461082557600080fd5b600c805474ff000000000000000000000000000000000000000019169055565b635afc396081565b60095460ff1681565b60008383600b54421015806108865750600c5474010000000000000000000000000000000000000000900460ff16155b806108ce5750600160a060020a0382166000908152600a602052604090205460ff161580156108ce5750600160a060020a0381166000908152600a602052604090205460ff16155b15156108d957600080fd5b6108e48686866111f9565b9695505050505050565b60046020526000908152604090205481565b600a6020526000908152604090205460ff1681565b60025460ff1681565b600c54600160a060020a031681565b600954610100900460ff1681565b600654600160a060020a031681565b600560209081526000928352604080842090915290825290205481565b600160a060020a033381166000908152600560209081526040808320938616835292905290812054808311156109c457600160a060020a0333811660009081526005602090815260408083209388168352929052908120556109f5565b6109ce81846112b4565b600160a060020a033381166000908152600560209081526040808320938916835292905220555b600160a060020a0333811660008181526005602090815260408083209489168084529490915290819020547f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925915190815260200160405180910390a35060019392505050565b6301e1338081565b600160a060020a031660009081526004602052604090205490565b600c5433600160a060020a03908116911614610a9957600080fd5b600160a060020a03166000908152600a60205260409020805460ff19169055565b600160a060020a03331660009081526008602052604090205460ff161515600114610ae457600080fd5b600954610100900460ff1615610af957600080fd5b610b05600354826112c6565b600355600160a060020a038216600090815260046020526040902054610b2b90826112c6565b600160a060020a0383166000818152600460205260409081902092909255907fc65a3f767206d2fdcede0b094a4840e01c0dd0be1888b5ba800346eaa0123c169083905190815260200160405180910390a2600160a060020a03821660006000805160206117f98339815191528360405190815260200160405180910390a35050565b600b5481565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107665780601f1061073b57610100808354040283529160200191610766565b610c27611741565b6007805480602002602001604051908101604052809291908181526020018280548015610c7d57602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610c5f575b505050505090505b90565b600160a060020a03331660009081526008602052604090205460ff1680610cc0575081600160a060020a031633600160a060020a0316145b1515610ccb57600080fd5b600160a060020a03821660009081526004602052604090205481901015610cf157600080fd5b610cfd600354826112b4565b600355600160a060020a038216600090815260046020526040902054610d2390826112b4565b600160a060020a03831660008181526004602052604080822093909355916000805160206117f98339815191529084905190815260200160405180910390a381600160a060020a03167f81325e2a6c442af9d36e4ee9697f38d5f4bf0837ade0f6c411c6a40af7c057ee8260405190815260200160405180910390a25050565b60003383600b5442101580610dd35750600c5474010000000000000000000000000000000000000000900460ff16155b80610e1b5750600160a060020a0382166000908152600a602052604090205460ff16158015610e1b5750600160a060020a0381166000908152600a602052604090205460ff16155b1515610e2657600080fd5b6107fb85856112dc565b600160a060020a03331660009081526008602052604090205460ff161515600114610e5a57600080fd5b600160a060020a03811615610e9d576009805475ffffffffffffffffffffffffffffffffffffffff0000191662010000600160a060020a03841602179055610ebd565b6009805475ffffffffffffffffffffffffffffffffffffffff0000191690555b50565b600c5433600160a060020a03908116911614610edb57600080fd5b6009805460ff191660011790557feadb24812ab3c9a55c774958184293ebdb6c7f6a2dbab11f397d80c86feb65d360405160405180910390a1565b600160a060020a03331660009081526008602052604081205460ff161515600114610f4057600080fd5b6009805461ff0019166101001790557f29fe76cc5ca143e91eadf7242fda487fcef09318c1237900f958abe1e2c5beff60405160405180910390a150600190565b600954620100009004600160a060020a031681565b600160a060020a033381166000908152600560209081526040808320938616835292905290812054610fc890836112c6565b600160a060020a0333811660008181526005602090815260408083209489168084529490915290819020849055919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591905190815260200160405180910390a350600192915050565b600c5474010000000000000000000000000000000000000000900460ff1681565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b600160a060020a03331660009081526008602052604090205460ff1615156001146110aa57600080fd5b6009805460ff19168215151790557fbac956a1816a25b65e25a2449379c8409891b96663ce5f0b3475c196ec4bfa0f81604051901515815260200160405180910390a150565b60086020526000908152604090205460ff1681565b600c5433600160a060020a039081169116148061113a5750600160a060020a03331660009081526008602052604090205460ff165b151561114557600080fd5b600160a060020a03166000908152600a60205260409020805460ff19166001179055565b60065433600160a060020a0390811691161461118457600080fd5b610ebd81611395565b600160a060020a03338116600081815260056020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b600954600090819060ff16151561120f57600080fd5b61121a8585856114de565b905061122461163a565b801561122d5750805b156112ac57600954620100009004600160a060020a031663677ba3d386868660405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401600060405180830381600087803b151561129b57600080fd5b5af115156112a857600080fd5b5050505b949350505050565b6000818310156112c057fe5b50900390565b6000828201838110156112d557fe5b9392505050565b600954600090819060ff1615156112f257600080fd5b6112fc8484611663565b905061130661163a565b801561130f5750805b156112d557600954620100009004600160a060020a031663677ba3d333868660405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401600060405180830381600087803b151561137d57600080fd5b5af1151561138a57600080fd5b509195945050505050565b6000805b6007548210156113f8576000600860006007858154811015156113b857fe5b600091825260208083209190910154600160a060020a031683528201929092526040019020805460ff191691151591909117905560019190910190611399565b5060005b82518110156114515760016008600085848151811061141757fe5b90602001906020020151600160a060020a031681526020810191909152604001600020805460ff19169115159190911790556001016113fc565b6007838051611464929160200190611753565b507f9465cd279c2de393c5568ae444599e3644e3d1864ca2c05ced8a654df2aea3cb8360405160208082528190810183818151815260200191508051906020019060200280838360005b838110156114c65780820151838201526020016114ae565b505050509050019250505060405180910390a1505050565b6000600160a060020a03831615156114f557600080fd5b600160a060020a0384166000908152600460205260409020548290108015906115455750600160a060020a0380851660009081526005602090815260408083203390941683529290522054829010155b151561155057600080fd5b600160a060020a03831660009081526004602052604090205461157390836112c6565b600160a060020a0380851660009081526004602052604080822093909355908616815220546115a290836112b4565b600160a060020a03808616600090815260046020908152604080832094909455600581528382203390931682529190915220546115df90836112b4565b600160a060020a03808616600081815260056020908152604080832033861684529091529081902093909355908516916000805160206117f98339815191529085905190815260200160405180910390a35060019392505050565b600954600090620100009004600160a060020a0316151561165d57506000610c85565b50600190565b6000600160a060020a038316151561167a57600080fd5b600160a060020a033316600090815260046020526040902054829010156116a057600080fd5b600160a060020a0333166000908152600460205260409020546116c390836112b4565b600160a060020a0333811660009081526004602052604080822093909355908516815220546116f290836112c6565b600160a060020a0380851660008181526004602052604090819020939093559133909116906000805160206117f98339815191529085905190815260200160405180910390a350600192915050565b60206040519081016040526000815290565b8280548282559060005260206000209081019282156117b7579160200282015b828111156117b7578251825473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039190911617825560209290920191600190910190611773565b506117c39291506117c7565b5090565b610c8591905b808211156117c357805473ffffffffffffffffffffffffffffffffffffffff191681556001016117cd5600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a7230582050e6734d2e5bb8a18d6b1b029eb056a7d79606d1696897d0ed77f44ce8a8ce600029"}