{"Runs": "200", "SwarmSource": "bzzr://95324ff6837ee8cf7c1e12c298d671b530d13b8ca4f732c8ecd9da24aa7d13ca", "ABI": "[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedBalances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"LOCK_START_TIME\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creationBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OPTION_POOL_PERIOD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenBurner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"optionPool\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newController\",\"type\":\"address\"}],\"name\":\"changeController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MANAGEMENT_LOCKED_ALLOC\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"spectreTeam\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cloneTokenName\",\"type\":\"string\"},{\"name\":\"_cloneDecimalUnits\",\"type\":\"uint8\"},{\"name\":\"_cloneTokenSymbol\",\"type\":\"string\"},{\"name\":\"_snapshotBlock\",\"type\":\"uint256\"},{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"name\":\"createCloneToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OPTION_POOL_ALLOC\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"generateTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MANAGEMENT_LOCKED_PERIOD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"walletAddressesSet\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_holder\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"checkLockedBalance\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"managementLocked\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenBurner\",\"type\":\"address\"}],\"name\":\"setTokenBurner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SPECTRE_BOUNTY_ADVISORY_DEV_TEAM_ALLOC\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transfersEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentSnapShotBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"destroyTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenFactory\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"name\":\"enableTransfers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spectreTeam\",\"type\":\"address\"},{\"name\":\"_managementLocked\",\"type\":\"address\"},{\"name\":\"_optionPool\",\"type\":\"address\"}],\"name\":\"setWalletAddresses\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenFactory\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_spectreTeam\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_managementLocked\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_optionPool\",\"type\":\"address\"}],\"name\":\"WalletAddressesSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_controller\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ClaimedTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_cloneToken\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_snapshotBlock\",\"type\":\"uint256\"}],\"name\":\"NewCloneToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.18+commit.9cf6e910", "ConstructorArguments": "00000000000000000000000020867f59e8ccb2fa8fadfbfd4175aca4a42d0834", "SourceCode": "pragma solidity ^0.4.15;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n  /**\r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(address newOwner) onlyOwner public {\r\n    require(newOwner != address(0));\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n/*\r\n * Contract that is working with ERC223 tokens\r\n * This is an implementation of ContractReceiver provided here:\r\n * https://github.com/Dexaran/ERC223-token-standard/blob/Recommended/Receiver_Interface.sol\r\n */\r\n\r\n contract ContractReceiver {\r\n\r\n    function tokenFallback(address _from, uint _value, bytes _data);\r\n\r\n}\r\n/*\r\n    Copyright 2016, Jordi Baylina\r\n\r\n    This program is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    This program is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License\r\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\n/// @title MiniMeToken Contract\r\n/// @author Jordi Baylina\r\n/// @dev This token contract's goal is to make it easy for anyone to clone this\r\n///  token using the token distribution at a given block, this will allow DAO's\r\n///  and DApps to upgrade their features in a decentralized manner without\r\n///  affecting the original token\r\n/// @dev It is ERC20 compliant, but still needs to under go further testing.\r\n\r\n\r\n/// @dev The token controller contract must implement these functions\r\ncontract TokenController {\r\n    /// @notice Called when `_owner` sends ether to the MiniMe Token contract\r\n    /// @param _owner The address that sent the ether to create tokens\r\n    /// @return True if the ether is accepted, false if it throws\r\n    function proxyPayment(address _owner) payable returns(bool);\r\n\r\n    /// @notice Notifies the controller about a token transfer allowing the\r\n    ///  controller to react if desired\r\n    /// @param _from The origin of the transfer\r\n    /// @param _to The destination of the transfer\r\n    /// @param _amount The amount of the transfer\r\n    /// @return False if the controller does not authorize the transfer\r\n    function onTransfer(address _from, address _to, uint _amount) returns(bool);\r\n\r\n    /// @notice Notifies the controller about an approval allowing the\r\n    ///  controller to react if desired\r\n    /// @param _owner The address that calls `approve()`\r\n    /// @param _spender The spender in the `approve()` call\r\n    /// @param _amount The amount in the `approve()` call\r\n    /// @return False if the controller does not authorize the approval\r\n    function onApprove(address _owner, address _spender, uint _amount)\r\n        returns(bool);\r\n}\r\n\r\ncontract Controlled {\r\n    /// @notice The address of the controller is the only address that can call\r\n    ///  a function with this modifier\r\n    modifier onlyController { require(msg.sender == controller); _; }\r\n\r\n    address public controller;\r\n\r\n    function Controlled() { controller = msg.sender;}\r\n\r\n    /// @notice Changes the controller of the contract\r\n    /// @param _newController The new controller of the contract\r\n    function changeController(address _newController) onlyController {\r\n        controller = _newController;\r\n    }\r\n}\r\n\r\ncontract ApproveAndCallFallBack {\r\n    function receiveApproval(address from, uint256 _amount, address _token, bytes _data);\r\n}\r\n\r\n/// @dev The actual token contract, the default controller is the msg.sender\r\n///  that deploys the contract, so usually this token will be deployed by a\r\n///  token controller contract, which Giveth will call a \"Campaign\"\r\ncontract MiniMeToken is Controlled {\r\n\r\n    string public name;                //The Token's name: e.g. DigixDAO Tokens\r\n    uint8 public decimals;             //Number of decimals of the smallest unit\r\n    string public symbol;              //An identifier: e.g. REP\r\n    string public version = 'MMT_0.1'; //An arbitrary versioning scheme\r\n\r\n\r\n    /// @dev `Checkpoint` is the structure that attaches a block number to a\r\n    ///  given value, the block number attached is the one that last changed the\r\n    ///  value\r\n    struct  Checkpoint {\r\n\r\n        // `fromBlock` is the block number that the value was generated from\r\n        uint128 fromBlock;\r\n\r\n        // `value` is the amount of tokens at a specific block number\r\n        uint128 value;\r\n    }\r\n\r\n    // `parentToken` is the Token address that was cloned to produce this token;\r\n    //  it will be 0x0 for a token that was not cloned\r\n    MiniMeToken public parentToken;\r\n\r\n    // `parentSnapShotBlock` is the block number from the Parent Token that was\r\n    //  used to determine the initial distribution of the Clone Token\r\n    uint public parentSnapShotBlock;\r\n\r\n    // `creationBlock` is the block number that the Clone Token was created\r\n    uint public creationBlock;\r\n\r\n    // `balances` is the map that tracks the balance of each address, in this\r\n    //  contract when the balance changes the block number that the change\r\n    //  occurred is also included in the map\r\n    mapping (address => Checkpoint[]) balances;\r\n\r\n    // `allowed` tracks any extra transfer rights as in all ERC20 tokens\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n\r\n    // Tracks the history of the `totalSupply` of the token\r\n    Checkpoint[] totalSupplyHistory;\r\n\r\n    // Flag that determines if the token is transferable or not.\r\n    bool public transfersEnabled;\r\n\r\n    // The factory used to create new clone tokens\r\n    MiniMeTokenFactory public tokenFactory;\r\n\r\n////////////////\r\n// Constructor\r\n////////////////\r\n\r\n    /// @notice Constructor to create a MiniMeToken\r\n    /// @param _tokenFactory The address of the MiniMeTokenFactory contract that\r\n    ///  will create the Clone token contracts, the token factory needs to be\r\n    ///  deployed first\r\n    /// @param _parentToken Address of the parent token, set to 0x0 if it is a\r\n    ///  new token\r\n    /// @param _parentSnapShotBlock Block of the parent token that will\r\n    ///  determine the initial distribution of the clone token, set to 0 if it\r\n    ///  is a new token\r\n    /// @param _tokenName Name of the new token\r\n    /// @param _decimalUnits Number of decimals of the new token\r\n    /// @param _tokenSymbol Token Symbol for the new token\r\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\r\n    function MiniMeToken(\r\n        address _tokenFactory,\r\n        address _parentToken,\r\n        uint _parentSnapShotBlock,\r\n        string _tokenName,\r\n        uint8 _decimalUnits,\r\n        string _tokenSymbol,\r\n        bool _transfersEnabled\r\n    ) {\r\n        tokenFactory = MiniMeTokenFactory(_tokenFactory);\r\n        name = _tokenName;                                 // Set the name\r\n        decimals = _decimalUnits;                          // Set the decimals\r\n        symbol = _tokenSymbol;                             // Set the symbol\r\n        parentToken = MiniMeToken(_parentToken);\r\n        parentSnapShotBlock = _parentSnapShotBlock;\r\n        transfersEnabled = _transfersEnabled;\r\n        creationBlock = block.number;\r\n    }\r\n\r\n\r\n///////////////////\r\n// ERC20 Methods\r\n///////////////////\r\n\r\n    /// @notice Send `_amount` tokens to `_to` from `msg.sender`\r\n    /// @param _to The address of the recipient\r\n    /// @param _amount The amount of tokens to be transferred\r\n    /// @return Whether the transfer was successful or not\r\n    function transfer(address _to, uint256 _amount) returns (bool success) {\r\n        require(transfersEnabled);\r\n        return doTransfer(msg.sender, _to, _amount);\r\n    }\r\n\r\n    /// @notice Send `_amount` tokens to `_to` from `_from` on the condition it\r\n    ///  is approved by `_from`\r\n    /// @param _from The address holding the tokens being transferred\r\n    /// @param _to The address of the recipient\r\n    /// @param _amount The amount of tokens to be transferred\r\n    /// @return True if the transfer was successful\r\n    function transferFrom(address _from, address _to, uint256 _amount\r\n    ) returns (bool success) {\r\n\r\n        // The controller of this contract can move tokens around at will,\r\n        //  this is important to recognize! Confirm that you trust the\r\n        //  controller of this contract, which in most situations should be\r\n        //  another open source smart contract or 0x0\r\n        if (msg.sender != controller) {\r\n            require(transfersEnabled);\r\n\r\n            // The standard ERC 20 transferFrom functionality\r\n            if (allowed[_from][msg.sender] < _amount) return false;\r\n            allowed[_from][msg.sender] -= _amount;\r\n        }\r\n        return doTransfer(_from, _to, _amount);\r\n    }\r\n\r\n    /// @dev This is the actual transfer function in the token contract, it can\r\n    ///  only be called by other functions in this contract.\r\n    /// @param _from The address holding the tokens being transferred\r\n    /// @param _to The address of the recipient\r\n    /// @param _amount The amount of tokens to be transferred\r\n    /// @return True if the transfer was successful\r\n    function doTransfer(address _from, address _to, uint _amount\r\n    ) internal returns(bool) {\r\n\r\n           if (_amount == 0) {\r\n               return true;\r\n           }\r\n\r\n           require(parentSnapShotBlock < block.number);\r\n\r\n           // Do not allow transfer to 0x0 or the token contract itself\r\n           require((_to != 0) && (_to != address(this)));\r\n\r\n           // If the amount being transfered is more than the balance of the\r\n           //  account the transfer returns false\r\n           var previousBalanceFrom = balanceOfAt(_from, block.number);\r\n           if (previousBalanceFrom < _amount) {\r\n               return false;\r\n           }\r\n\r\n           // Alerts the token controller of the transfer\r\n           if (isContract(controller)) {\r\n               require(TokenController(controller).onTransfer(_from, _to, _amount));\r\n           }\r\n\r\n           // First update the balance array with the new value for the address\r\n           //  sending the tokens\r\n           updateValueAtNow(balances[_from], previousBalanceFrom - _amount);\r\n\r\n           // Then update the balance array with the new value for the address\r\n           //  receiving the tokens\r\n           var previousBalanceTo = balanceOfAt(_to, block.number);\r\n           require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\r\n           updateValueAtNow(balances[_to], previousBalanceTo + _amount);\r\n\r\n           // An event to make the transfer easy to find on the blockchain\r\n           Transfer(_from, _to, _amount);\r\n\r\n           return true;\r\n    }\r\n\r\n    /// @param _owner The address that's balance is being requested\r\n    /// @return The balance of `_owner` at the current block\r\n    function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return balanceOfAt(_owner, block.number);\r\n    }\r\n\r\n    /// @notice `msg.sender` approves `_spender` to spend `_amount` tokens on\r\n    ///  its behalf. This is a modified version of the ERC20 approve function\r\n    ///  to be a little bit safer\r\n    /// @param _spender The address of the account able to transfer the tokens\r\n    /// @param _amount The amount of tokens to be approved for transfer\r\n    /// @return True if the approval was successful\r\n    function approve(address _spender, uint256 _amount) returns (bool success) {\r\n        require(transfersEnabled);\r\n\r\n        // To change the approve amount you first have to reduce the addresses`\r\n        //  allowance to zero by calling `approve(_spender,0)` if it is not\r\n        //  already 0 to mitigate the race condition described here:\r\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n        require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\r\n\r\n        // Alerts the token controller of the approve function call\r\n        if (isContract(controller)) {\r\n            require(TokenController(controller).onApprove(msg.sender, _spender, _amount));\r\n        }\r\n\r\n        allowed[msg.sender][_spender] = _amount;\r\n        Approval(msg.sender, _spender, _amount);\r\n        return true;\r\n    }\r\n\r\n    /// @dev This function makes it easy to read the `allowed[]` map\r\n    /// @param _owner The address of the account that owns the token\r\n    /// @param _spender The address of the account able to transfer the tokens\r\n    /// @return Amount of remaining tokens of _owner that _spender is allowed\r\n    ///  to spend\r\n    function allowance(address _owner, address _spender\r\n    ) constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    /// @notice `msg.sender` approves `_spender` to send `_amount` tokens on\r\n    ///  its behalf, and then a function is triggered in the contract that is\r\n    ///  being approved, `_spender`. This allows users to use their tokens to\r\n    ///  interact with contracts in one function call instead of two\r\n    /// @param _spender The address of the contract able to transfer the tokens\r\n    /// @param _amount The amount of tokens to be approved for transfer\r\n    /// @return True if the function call was successful\r\n    function approveAndCall(address _spender, uint256 _amount, bytes _extraData\r\n    ) returns (bool success) {\r\n        require(approve(_spender, _amount));\r\n\r\n        ApproveAndCallFallBack(_spender).receiveApproval(\r\n            msg.sender,\r\n            _amount,\r\n            this,\r\n            _extraData\r\n        );\r\n\r\n        return true;\r\n    }\r\n\r\n    /// @dev This function makes it easy to get the total number of tokens\r\n    /// @return The total number of tokens\r\n    function totalSupply() constant returns (uint) {\r\n        return totalSupplyAt(block.number);\r\n    }\r\n\r\n\r\n////////////////\r\n// Query balance and totalSupply in History\r\n////////////////\r\n\r\n    /// @dev Queries the balance of `_owner` at a specific `_blockNumber`\r\n    /// @param _owner The address from which the balance will be retrieved\r\n    /// @param _blockNumber The block number when the balance is queried\r\n    /// @return The balance at `_blockNumber`\r\n    function balanceOfAt(address _owner, uint _blockNumber) constant\r\n        returns (uint) {\r\n\r\n        // These next few lines are used when the balance of the token is\r\n        //  requested before a check point was ever created for this token, it\r\n        //  requires that the `parentToken.balanceOfAt` be queried at the\r\n        //  genesis block for that token as this contains initial balance of\r\n        //  this token\r\n        if ((balances[_owner].length == 0)\r\n            || (balances[_owner][0].fromBlock > _blockNumber)) {\r\n            if (address(parentToken) != 0) {\r\n                return parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock));\r\n            } else {\r\n                // Has no parent\r\n                return 0;\r\n            }\r\n\r\n        // This will return the expected balance during normal situations\r\n        } else {\r\n            return getValueAt(balances[_owner], _blockNumber);\r\n        }\r\n    }\r\n\r\n    /// @notice Total amount of tokens at a specific `_blockNumber`.\r\n    /// @param _blockNumber The block number when the totalSupply is queried\r\n    /// @return The total amount of tokens at `_blockNumber`\r\n    function totalSupplyAt(uint _blockNumber) constant returns(uint) {\r\n\r\n        // These next few lines are used when the totalSupply of the token is\r\n        //  requested before a check point was ever created for this token, it\r\n        //  requires that the `parentToken.totalSupplyAt` be queried at the\r\n        //  genesis block for this token as that contains totalSupply of this\r\n        //  token at this block number.\r\n        if ((totalSupplyHistory.length == 0)\r\n            || (totalSupplyHistory[0].fromBlock > _blockNumber)) {\r\n            if (address(parentToken) != 0) {\r\n                return parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock));\r\n            } else {\r\n                return 0;\r\n            }\r\n\r\n        // This will return the expected totalSupply during normal situations\r\n        } else {\r\n            return getValueAt(totalSupplyHistory, _blockNumber);\r\n        }\r\n    }\r\n\r\n////////////////\r\n// Clone Token Method\r\n////////////////\r\n\r\n    /// @notice Creates a new clone token with the initial distribution being\r\n    ///  this token at `_snapshotBlock`\r\n    /// @param _cloneTokenName Name of the clone token\r\n    /// @param _cloneDecimalUnits Number of decimals of the smallest unit\r\n    /// @param _cloneTokenSymbol Symbol of the clone token\r\n    /// @param _snapshotBlock Block when the distribution of the parent token is\r\n    ///  copied to set the initial distribution of the new clone token;\r\n    ///  if the block is zero than the actual block, the current block is used\r\n    /// @param _transfersEnabled True if transfers are allowed in the clone\r\n    /// @return The address of the new MiniMeToken Contract\r\n    function createCloneToken(\r\n        string _cloneTokenName,\r\n        uint8 _cloneDecimalUnits,\r\n        string _cloneTokenSymbol,\r\n        uint _snapshotBlock,\r\n        bool _transfersEnabled\r\n        ) returns(address) {\r\n        if (_snapshotBlock == 0) _snapshotBlock = block.number;\r\n        MiniMeToken cloneToken = tokenFactory.createCloneToken(\r\n            this,\r\n            _snapshotBlock,\r\n            _cloneTokenName,\r\n            _cloneDecimalUnits,\r\n            _cloneTokenSymbol,\r\n            _transfersEnabled\r\n            );\r\n\r\n        cloneToken.changeController(msg.sender);\r\n\r\n        // An event to make the token easy to find on the blockchain\r\n        NewCloneToken(address(cloneToken), _snapshotBlock);\r\n        return address(cloneToken);\r\n    }\r\n\r\n////////////////\r\n// Generate and destroy tokens\r\n////////////////\r\n\r\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\r\n    /// @param _owner The address that will be assigned the new tokens\r\n    /// @param _amount The quantity of tokens generated\r\n    /// @return True if the tokens are generated correctly\r\n    function generateTokens(address _owner, uint _amount\r\n    ) onlyController returns (bool) {\r\n        uint curTotalSupply = totalSupply();\r\n        require(curTotalSupply + _amount >= curTotalSupply); // Check for overflow\r\n        uint previousBalanceTo = balanceOf(_owner);\r\n        require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\r\n        updateValueAtNow(totalSupplyHistory, curTotalSupply + _amount);\r\n        updateValueAtNow(balances[_owner], previousBalanceTo + _amount);\r\n        Transfer(0, _owner, _amount);\r\n        return true;\r\n    }\r\n\r\n\r\n    /// @notice Burns `_amount` tokens from `_owner`\r\n    /// @param _owner The address that will lose the tokens\r\n    /// @param _amount The quantity of tokens to burn\r\n    /// @return True if the tokens are burned correctly\r\n    function destroyTokens(address _owner, uint _amount\r\n    ) onlyController returns (bool) {\r\n        uint curTotalSupply = totalSupply();\r\n        require(curTotalSupply >= _amount);\r\n        uint previousBalanceFrom = balanceOf(_owner);\r\n        require(previousBalanceFrom >= _amount);\r\n        updateValueAtNow(totalSupplyHistory, curTotalSupply - _amount);\r\n        updateValueAtNow(balances[_owner], previousBalanceFrom - _amount);\r\n        Transfer(_owner, 0, _amount);\r\n        return true;\r\n    }\r\n\r\n////////////////\r\n// Enable tokens transfers\r\n////////////////\r\n\r\n\r\n    /// @notice Enables token holders to transfer their tokens freely if true\r\n    /// @param _transfersEnabled True if transfers are allowed in the clone\r\n    function enableTransfers(bool _transfersEnabled) onlyController {\r\n        transfersEnabled = _transfersEnabled;\r\n    }\r\n\r\n////////////////\r\n// Internal helper functions to query and set a value in a snapshot array\r\n////////////////\r\n\r\n    /// @dev `getValueAt` retrieves the number of tokens at a given block number\r\n    /// @param checkpoints The history of values being queried\r\n    /// @param _block The block number to retrieve the value at\r\n    /// @return The number of tokens being queried\r\n    function getValueAt(Checkpoint[] storage checkpoints, uint _block\r\n    ) constant internal returns (uint) {\r\n        if (checkpoints.length == 0) return 0;\r\n\r\n        // Shortcut for the actual value\r\n        if (_block >= checkpoints[checkpoints.length-1].fromBlock)\r\n            return checkpoints[checkpoints.length-1].value;\r\n        if (_block < checkpoints[0].fromBlock) return 0;\r\n\r\n        // Binary search of the value in the array\r\n        uint min = 0;\r\n        uint max = checkpoints.length-1;\r\n        while (max > min) {\r\n            uint mid = (max + min + 1)/ 2;\r\n            if (checkpoints[mid].fromBlock<=_block) {\r\n                min = mid;\r\n            } else {\r\n                max = mid-1;\r\n            }\r\n        }\r\n        return checkpoints[min].value;\r\n    }\r\n\r\n    /// @dev `updateValueAtNow` used to update the `balances` map and the\r\n    ///  `totalSupplyHistory`\r\n    /// @param checkpoints The history of data being updated\r\n    /// @param _value The new number of tokens\r\n    function updateValueAtNow(Checkpoint[] storage checkpoints, uint _value\r\n    ) internal  {\r\n        if ((checkpoints.length == 0)\r\n        || (checkpoints[checkpoints.length -1].fromBlock < block.number)) {\r\n               Checkpoint storage newCheckPoint = checkpoints[ checkpoints.length++ ];\r\n               newCheckPoint.fromBlock =  uint128(block.number);\r\n               newCheckPoint.value = uint128(_value);\r\n           } else {\r\n               Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length-1];\r\n               oldCheckPoint.value = uint128(_value);\r\n           }\r\n    }\r\n\r\n    /// @dev Internal function to determine if an address is a contract\r\n    /// @param _addr The address being queried\r\n    /// @return True if `_addr` is a contract\r\n    function isContract(address _addr) constant internal returns(bool) {\r\n        uint size;\r\n        if (_addr == 0) return false;\r\n        assembly {\r\n            size := extcodesize(_addr)\r\n        }\r\n        return size>0;\r\n    }\r\n\r\n    /// @dev Helper function to return a min betwen the two uints\r\n    function min(uint a, uint b) internal returns (uint) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /// @notice The fallback function: If the contract's controller has not been\r\n    ///  set to 0, then the `proxyPayment` method is called which relays the\r\n    ///  ether and creates tokens as described in the token controller contract\r\n    function ()  payable {\r\n        require(isContract(controller));\r\n        require(TokenController(controller).proxyPayment.value(msg.value)(msg.sender));\r\n    }\r\n\r\n//////////\r\n// Safety Methods\r\n//////////\r\n\r\n    /// @notice This method can be used by the controller to extract mistakenly\r\n    ///  sent tokens to this contract.\r\n    /// @param _token The address of the token contract that you want to recover\r\n    ///  set to 0 in case you want to extract ether.\r\n    function claimTokens(address _token) onlyController {\r\n        if (_token == 0x0) {\r\n            controller.transfer(this.balance);\r\n            return;\r\n        }\r\n\r\n        MiniMeToken token = MiniMeToken(_token);\r\n        uint balance = token.balanceOf(this);\r\n        token.transfer(controller, balance);\r\n        ClaimedTokens(_token, controller, balance);\r\n    }\r\n\r\n////////////////\r\n// Events\r\n////////////////\r\n    event ClaimedTokens(address indexed _token, address indexed _controller, uint _amount);\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _amount);\r\n    event NewCloneToken(address indexed _cloneToken, uint _snapshotBlock);\r\n    event Approval(\r\n        address indexed _owner,\r\n        address indexed _spender,\r\n        uint256 _amount\r\n        );\r\n\r\n}\r\n\r\n\r\n////////////////\r\n// MiniMeTokenFactory\r\n////////////////\r\n\r\n/// @dev This contract is used to generate clone contracts from a contract.\r\n///  In solidity this is the way to create a contract from a contract of the\r\n///  same class\r\ncontract MiniMeTokenFactory {\r\n\r\n    /// @notice Update the DApp by creating a new token with new functionalities\r\n    ///  the msg.sender becomes the controller of this clone token\r\n    /// @param _parentToken Address of the token being cloned\r\n    /// @param _snapshotBlock Block of the parent token that will\r\n    ///  determine the initial distribution of the clone token\r\n    /// @param _tokenName Name of the new token\r\n    /// @param _decimalUnits Number of decimals of the new token\r\n    /// @param _tokenSymbol Token Symbol for the new token\r\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\r\n    /// @return The address of the new token contract\r\n    function createCloneToken(\r\n        address _parentToken,\r\n        uint _snapshotBlock,\r\n        string _tokenName,\r\n        uint8 _decimalUnits,\r\n        string _tokenSymbol,\r\n        bool _transfersEnabled\r\n    ) returns (MiniMeToken) {\r\n        MiniMeToken newToken = new MiniMeToken(\r\n            this,\r\n            _parentToken,\r\n            _snapshotBlock,\r\n            _tokenName,\r\n            _decimalUnits,\r\n            _tokenSymbol,\r\n            _transfersEnabled\r\n            );\r\n\r\n        newToken.changeController(msg.sender);\r\n        return newToken;\r\n    }\r\n}\r\ncontract TokenBurner {\r\n    function burn(address , uint )\r\n    returns (bool result) {\r\n        return false;\r\n    }\r\n}\r\n\r\ncontract SpectreToken is MiniMeToken, Ownable, ContractReceiver {\r\n\r\n    event WalletAddressesSet(address _spectreTeam, address _managementLocked, address _optionPool);\r\n\r\n    TokenBurner public tokenBurner;\r\n\r\n    //Spectre addresses\r\n    address public spectreTeam;\r\n    address public managementLocked;\r\n    address public optionPool;\r\n    bool public walletAddressesSet;\r\n\r\n    //In percentages of tokens allocated to Spectre\r\n    uint256 public SPECTRE_BOUNTY_ADVISORY_DEV_TEAM_ALLOC = 42;\r\n    uint256 public MANAGEMENT_LOCKED_ALLOC = 18;\r\n    uint256 public OPTION_POOL_ALLOC = 40;\r\n\r\n    //Lock up periods\r\n    uint256 public LOCK_START_TIME = 1512896400;\r\n    uint256 public MANAGEMENT_LOCKED_PERIOD = LOCK_START_TIME + 180 days;\r\n    uint256 public OPTION_POOL_PERIOD = LOCK_START_TIME + 365 days;\r\n    mapping (address => uint) public lockedBalances;\r\n\r\n    function setTokenBurner(address _tokenBurner) onlyOwner public {\r\n      tokenBurner = TokenBurner(_tokenBurner);\r\n    }\r\n\r\n    function setWalletAddresses(address _spectreTeam, address _managementLocked, address _optionPool) onlyOwner public {\r\n      require(!walletAddressesSet);\r\n      require(_spectreTeam != address(0));\r\n      require(_managementLocked != address(0));\r\n      require(_optionPool != address(0));\r\n      spectreTeam = _spectreTeam;\r\n      managementLocked = _managementLocked;\r\n      optionPool = _optionPool;\r\n      walletAddressesSet = true;\r\n      WalletAddressesSet(spectreTeam, managementLocked, optionPool);\r\n    }\r\n\r\n    // allows a token holder to burn tokens\r\n    // requires tokenBurner to be set to a valid contract address\r\n    // tokenBurner can take any appropriate action\r\n    function burn(uint256 _amount) public {\r\n      uint curTotalSupply = totalSupply();\r\n      require(curTotalSupply >= _amount);\r\n      uint previousBalanceFrom = balanceOf(msg.sender);\r\n      require(previousBalanceFrom >= _amount);\r\n      updateValueAtNow(totalSupplyHistory, curTotalSupply - _amount);\r\n      updateValueAtNow(balances[msg.sender], previousBalanceFrom - _amount);\r\n      assert(tokenBurner.burn(msg.sender, _amount));\r\n      Transfer(msg.sender, 0, _amount);\r\n    }\r\n\r\n    //@notice function to accept incoming token transfers from SPECT\r\n    //@notice _from - address that is transferring tokens\r\n    //@notice _value - amount of tokens being transferred\r\n    //@notice _data - ignored - no data is expected\r\n    function tokenFallback(address _from, uint _value, bytes _data) public {\r\n      require(walletAddressesSet);\r\n      //First we generate tokens for user that is transferring\r\n      generateTokens(_from, _value);\r\n      //Then we generate Spectre team tokens\r\n      generateSpectreTokens(_value);\r\n    }\r\n\r\n    function generateSpectreTokens(uint256 _value) internal {\r\n      //Calculate amounts for each Spectre Wallet\r\n      uint256 managementLockedAlloc = SafeMath.div(SafeMath.mul(_value, percent(MANAGEMENT_LOCKED_ALLOC)), percent(100));\r\n      uint256 optionPoolAlloc = SafeMath.div(SafeMath.mul(_value, percent(OPTION_POOL_ALLOC)), percent(100));\r\n      //Account for any rounding errors by using subtraction rather than allocation\r\n      //spectreTeam allocation is for bounty, dev, and advisory allocations\r\n      //quantity should correspond to SPECTRE_BOUNTY_ADVISORY_DEV_TEAM_ALLOC percentage\r\n      uint256 spectreTeamAlloc = SafeMath.sub(_value, SafeMath.add(managementLockedAlloc, optionPoolAlloc));\r\n      //Assert invariant\r\n      assert(SafeMath.add(SafeMath.add(managementLockedAlloc, optionPoolAlloc), spectreTeamAlloc) == _value);\r\n      //Generate team tokens\r\n      generateTokens(spectreTeam, spectreTeamAlloc);\r\n      generateTokens(managementLocked, managementLockedAlloc);\r\n      generateTokens(optionPool, optionPoolAlloc);\r\n      //Lock balances - no locks for spectreTeam\r\n      lockedBalances[managementLocked] = SafeMath.add(managementLockedAlloc, lockedBalances[managementLocked]);\r\n      lockedBalances[optionPool] = SafeMath.add(optionPoolAlloc, lockedBalances[optionPool]);\r\n    }\r\n\r\n    // Check token locks before transferring\r\n    function transfer(address _to, uint _value) returns (bool success) {\r\n      require(checkLockedBalance(msg.sender, _value));\r\n      require(super.transfer(_to, _value));\r\n      return true;\r\n    }\r\n\r\n    // Override this to enforce locking periods\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n      require(checkLockedBalance(_from, _value));\r\n      require(super.transferFrom(_from, _to, _value));\r\n      return true;\r\n    }\r\n\r\n    //Check whether transfer is valid for locked tokens\r\n    function checkLockedBalance(address _holder, uint256 _value) public constant returns (bool success) {\r\n      if ((_holder != managementLocked) && (_holder != optionPool)) {\r\n        return true;\r\n      }\r\n      if ((_holder == managementLocked) && (getNow() > MANAGEMENT_LOCKED_PERIOD)) {\r\n        return true;\r\n      }\r\n      if ((_holder == optionPool) && (getNow() > OPTION_POOL_PERIOD)) {\r\n        return true;\r\n      }\r\n      return (SafeMath.sub(balanceOf(_holder), _value) >= lockedBalances[_holder]);\r\n    }\r\n\r\n    function percent(uint256 p) constant internal returns (uint256) {\r\n      return SafeMath.mul(p, 10**16);\r\n    }\r\n\r\n    function getNow() internal constant returns (uint256) {\r\n      return now;\r\n    }\r\n}\r\n\r\ncontract SpectreDividendToken is SpectreToken {\r\n\r\n    function SpectreDividendToken(address _tokenFactory)\r\n      MiniMeToken(\r\n        _tokenFactory,\r\n        0x0,                     // no parent token\r\n        0,                       // no snapshot block number from parent\r\n        \"Spectre.ai D-Token\",           // Token name\r\n        18,                       // Decimals\r\n        \"SXDT\",                   // Symbol\r\n        true                    // Enable transfers\r\n      )\r\n    {}\r\n\r\n}", "OptimizationUsed": "1", "ContractName": "SpectreDividendToken", "ByteCode": "0x6060604052600436106102005763ffffffff60e060020a6000350416630483a7f681146102a557806306fdde03146102d6578063095ea7b31461036057806315f2e2f71461039657806317634514146103a957806318160ddd146103bc5780631d87614a146103cf57806323b872dd146103e25780632996f9721461040a5780632aab80dd14610439578063313ce5671461044c5780633cebb823146104755780633fd76a981461049457806340523946146104a757806342966c68146104ba5780634ee2cd7e146104d057806354fd4d50146104f25780636638c0871461050557806370a08231146105ad578063793e9b0b146105cc57806380a54001146105df578063827f32c0146105f257806383e19a95146106145780638da5cb5b146106275780638f50fdd61461063a57806395d89b411461064d578063981b24d0146106605780639ab2cf0d14610676578063a50776dd14610698578063a9059cbb146106ab578063b0af768b146106cd578063b2bf731d146106ec578063bef97c87146106ff578063c0ee0b8a14610712578063c5bcc4f114610777578063cae9ca511461078a578063d3ce77fe146107ef578063dd62ed3e14610811578063df8de3e714610836578063e77772fe14610855578063f2fde38b14610868578063f41e60c514610887578063f77c47911461089f578063fb6287d2146108b2575b60005461021590600160a060020a03166108dd565b151561022057600080fd5b60008054600160a060020a03169063f48c305490349033906040516020015260405160e060020a63ffffffff8516028152600160a060020a0390911660048201526024016020604051808303818588803b151561027c57600080fd5b6125ee5a03f1151561028d57600080fd5b505050506040518051905015156102a357600080fd5b005b34156102b057600080fd5b6102c4600160a060020a036004351661090a565b60405190815260200160405180910390f35b34156102e157600080fd5b6102e961091c565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561032557808201518382015260200161030d565b50505050905090810190601f1680156103525780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561036b57600080fd5b610382600160a060020a03600435166024356109ba565b604051901515815260200160405180910390f35b34156103a157600080fd5b6102c4610b23565b34156103b457600080fd5b6102c4610b29565b34156103c757600080fd5b6102c4610b2f565b34156103da57600080fd5b6102c4610b40565b34156103ed57600080fd5b610382600160a060020a0360043581169060243516604435610b46565b341561041557600080fd5b61041d610b7e565b604051600160a060020a03909116815260200160405180910390f35b341561044457600080fd5b61041d610b8d565b341561045757600080fd5b61045f610b9c565b60405160ff909116815260200160405180910390f35b341561048057600080fd5b6102a3600160a060020a0360043516610ba5565b341561049f57600080fd5b6102c4610bef565b34156104b257600080fd5b61041d610bf5565b34156104c557600080fd5b6102a3600435610c04565b34156104db57600080fd5b6102c4600160a060020a0360043516602435610d1b565b34156104fd57600080fd5b6102e9610e51565b341561051057600080fd5b61041d60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803560ff1690602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650508435946020013515159350610ebc92505050565b34156105b857600080fd5b6102c4600160a060020a03600435166110e6565b34156105d757600080fd5b6102c46110fa565b34156105ea57600080fd5b61041d611100565b34156105fd57600080fd5b610382600160a060020a036004351660243561110f565b341561061f57600080fd5b6102c46111cd565b341561063257600080fd5b61041d6111d3565b341561064557600080fd5b6103826111e2565b341561065857600080fd5b6102e96111f2565b341561066b57600080fd5b6102c460043561125d565b341561068157600080fd5b610382600160a060020a0360043516602435611346565b34156106a357600080fd5b61041d61141a565b34156106b657600080fd5b610382600160a060020a0360043516602435611429565b34156106d857600080fd5b6102a3600160a060020a036004351661145e565b34156106f757600080fd5b6102c46114a8565b341561070a57600080fd5b6103826114ae565b341561071d57600080fd5b6102a360048035600160a060020a03169060248035919060649060443590810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496506114b795505050505050565b341561078257600080fd5b6102c46114e8565b341561079557600080fd5b61038260048035600160a060020a03169060248035919060649060443590810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496506114ee95505050505050565b34156107fa57600080fd5b610382600160a060020a0360043516602435611609565b341561081c57600080fd5b6102c4600160a060020a03600435811690602435166116c1565b341561084157600080fd5b6102a3600160a060020a03600435166116ec565b341561086057600080fd5b61041d611897565b341561087357600080fd5b6102a3600160a060020a03600435166118ab565b341561089257600080fd5b6102a36004351515611946565b34156108aa57600080fd5b61041d611974565b34156108bd57600080fd5b6102a3600160a060020a0360043581169060243581169060443516611983565b600080600160a060020a03831615156108f95760009150610904565b823b90506000811191505b50919050565b60176020526000908152604090205481565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109b25780601f10610987576101008083540402835291602001916109b2565b820191906000526020600020905b81548152906001019060200180831161099557829003601f168201915b505050505081565b600b5460009060ff1615156109ce57600080fd5b8115806109fe5750600160a060020a03338116600090815260096020908152604080832093871683529290522054155b1515610a0957600080fd5b600054610a1e90600160a060020a03166108dd565b15610ab95760008054600160a060020a03169063da682aeb903390869086906040516020015260405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b1515610a9357600080fd5b6102c65a03f11515610aa457600080fd5b505050604051805190501515610ab957600080fd5b600160a060020a03338116600081815260096020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b60145481565b60075481565b6000610b3a4361125d565b90505b90565b60165481565b6000610b528483611346565b1515610b5d57600080fd5b610b68848484611ac0565b1515610b7357600080fd5b5060015b9392505050565b600d54600160a060020a031681565b601054600160a060020a031681565b60025460ff1681565b60005433600160a060020a03908116911614610bc057600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60125481565b600e54600160a060020a031681565b600080610c0f610b2f565b915082821015610c1e57600080fd5b610c27336110e6565b905082811015610c3657600080fd5b610c43600a848403611b60565b600160a060020a0333166000908152600860205260409020610c6790848303611b60565b600d54600160a060020a0316639dc29fac338560006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b1515610cc657600080fd5b6102c65a03f11515610cd757600080fd5b505050604051805190501515610ce957fe5b600033600160a060020a03166000805160206121968339815191528560405190815260200160405180910390a3505050565b600160a060020a0382166000908152600860205260408120541580610d775750600160a060020a038316600090815260086020526040812080548492908110610d6057fe5b6000918252602090912001546001608060020a0316115b15610e2857600554600160a060020a031615610e2057600554600654600160a060020a0390911690634ee2cd7e908590610db2908690611c56565b60006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b1515610dfe57600080fd5b6102c65a03f11515610e0f57600080fd5b505050604051805190509050610b1d565b506000610b1d565b600160a060020a0383166000908152600860205260409020610e4a9083611c6c565b9050610b1d565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109b25780601f10610987576101008083540402835291602001916109b2565b600080831515610eca574393505b600b546101009004600160a060020a0316635b7b72c130868a8a8a8960006040516020015260405160e060020a63ffffffff8916028152600160a060020a038716600482019081526024820187905260ff8516606483015282151560a483015260c0604483019081529091608481019060c40187818151815260200191508051906020019080838360005b83811015610f6d578082015183820152602001610f55565b50505050905090810190601f168015610f9a5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015610fd0578082015183820152602001610fb8565b50505050905090810190601f168015610ffd5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b151561102157600080fd5b6102c65a03f1151561103257600080fd5b5050506040518051915050600160a060020a038116633cebb8233360405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401600060405180830381600087803b151561108b57600080fd5b6102c65a03f1151561109c57600080fd5b50505080600160a060020a03167f086c875b377f900b07ce03575813022f05dd10ed7640b5282cf6d3c3fc352ade8560405190815260200160405180910390a29695505050505050565b60006110f28243610d1b565b90505b919050565b60135481565b600554600160a060020a031681565b600080548190819033600160a060020a0390811691161461112f57600080fd5b611137610b2f565b91508382018290101561114957600080fd5b611152856110e6565b90508381018190101561116457600080fd5b611171600a858401611b60565b600160a060020a038516600090815260086020526040902061119590828601611b60565b84600160a060020a031660006000805160206121968339815191528660405190815260200160405180910390a3506001949350505050565b60155481565b600c54600160a060020a031681565b60105460a060020a900460ff1681565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109b25780601f10610987576101008083540402835291602001916109b2565b600a546000901580611292575081600a600081548110151561127b57fe5b6000918252602090912001546001608060020a0316115b1561133457600554600160a060020a03161561132c57600554600654600160a060020a039091169063981b24d0906112cb908590611c56565b60006040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b151561130a57600080fd5b6102c65a03f1151561131b57600080fd5b5050506040518051905090506110f5565b5060006110f5565b61133f600a83611c6c565b90506110f5565b600f54600090600160a060020a038481169116148015906113755750601054600160a060020a03848116911614155b1561138257506001610b1d565b600f54600160a060020a0384811691161480156113a757506015546113a5611dcb565b115b156113b457506001610b1d565b601054600160a060020a0384811691161480156113d957506016546113d7611dcb565b115b156113e657506001610b1d565b600160a060020a03831660009081526017602052604090205461141161140b856110e6565b84611dcf565b10159392505050565b600f54600160a060020a031681565b60006114353383611346565b151561144057600080fd5b61144a8383611de1565b151561145557600080fd5b50600192915050565b600c5433600160a060020a0390811691161461147957600080fd5b600d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60115481565b600b5460ff1681565b60105460a060020a900460ff1615156114cf57600080fd5b6114d9838361110f565b506114e382611e00565b505050565b60065481565b60006114fa84846109ba565b151561150557600080fd5b83600160a060020a0316638f4ffcb1338530866040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184815260200183600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561159d578082015183820152602001611585565b50505050905090810190601f1680156115ca5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15156115eb57600080fd5b6102c65a03f115156115fc57600080fd5b5060019695505050505050565b600080548190819033600160a060020a0390811691161461162957600080fd5b611631610b2f565b91508382101561164057600080fd5b611649856110e6565b90508381101561165857600080fd5b611665600a858403611b60565b600160a060020a038516600090815260086020526040902061168990858303611b60565b600085600160a060020a03166000805160206121968339815191528660405190815260200160405180910390a3506001949350505050565b600160a060020a03918216600090815260096020908152604080832093909416825291909152205490565b60008054819033600160a060020a0390811691161461170a57600080fd5b600160a060020a038316151561175857600054600160a060020a039081169030163180156108fc0290604051600060405180830381858888f19350505050151561175357600080fd5b6114e3565b82915081600160a060020a03166370a082313060006040516020015260405160e060020a63ffffffff8416028152600160a060020a039091166004820152602401602060405180830381600087803b15156117b257600080fd5b6102c65a03f115156117c357600080fd5b505050604051805160008054919350600160a060020a03808616935063a9059cbb92169084906040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561183357600080fd5b6102c65a03f1151561184457600080fd5b50505060405180515050600054600160a060020a039081169084167ff931edb47c50b4b4104c187b5814a9aef5f709e17e2ecf9617e860cacade929c8360405190815260200160405180910390a3505050565b600b546101009004600160a060020a031681565b600c5433600160a060020a039081169116146118c657600080fd5b600160a060020a03811615156118db57600080fd5b600c54600160a060020a0380831691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600c805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60005433600160a060020a0390811691161461196157600080fd5b600b805460ff1916911515919091179055565b600054600160a060020a031681565b600c5433600160a060020a0390811691161461199e57600080fd5b60105460a060020a900460ff16156119b557600080fd5b600160a060020a03831615156119ca57600080fd5b600160a060020a03821615156119df57600080fd5b600160a060020a03811615156119f457600080fd5b600e8054600160a060020a0380861673ffffffffffffffffffffffffffffffffffffffff199283161792839055600f805486831690841617908190556010805474ff00000000000000000000000000000000000000001987851691909516179390931660a060020a17928390557f0bc2390103cdcea68787f9f22f8be92ccf20f5eae0bb850fbb70af78e366e4dd938216929082169116604051600160a060020a03938416815291831660208301529091166040808301919091526060909101905180910390a1505050565b6000805433600160a060020a03908116911614611b4d57600b5460ff161515611ae857600080fd5b600160a060020a038085166000908152600960209081526040808320339094168352929052205482901015611b1f57506000610b77565b600160a060020a03808516600090815260096020908152604080832033909416835292905220805483900390555b611b58848484611f33565b949350505050565b815460009081901580611b9957508354439085906000198101908110611b8257fe5b6000918252602090912001546001608060020a0316105b15611c0b5783548490611baf8260018301612158565b81548110611bb957fe5b600091825260209091200180546001608060020a03858116700100000000000000000000000000000000024382166fffffffffffffffffffffffffffffffff1990931692909217161781559150611c50565b835484906000198101908110611c1d57fe5b600091825260209091200180546001608060020a0380861670010000000000000000000000000000000002911617815590505b50505050565b6000818310611c655781610b77565b5090919050565b600080600080858054905060001415611c885760009350611dc2565b855486906000198101908110611c9a57fe5b6000918252602090912001546001608060020a03168510611cf757855486906000198101908110611cc757fe5b60009182526020909120015470010000000000000000000000000000000090046001608060020a03169350611dc2565b856000815481101515611d0657fe5b6000918252602090912001546001608060020a0316851015611d2b5760009350611dc2565b8554600093506000190191505b82821115611d88576002600183850101049050848682815481101515611d5a57fe5b6000918252602090912001546001608060020a031611611d7c57809250611d83565b6001810391505b611d38565b8583815481101515611d9657fe5b60009182526020909120015470010000000000000000000000000000000090046001608060020a031693505b50505092915050565b4290565b600082821115611ddb57fe5b50900390565b600b5460009060ff161515611df557600080fd5b610b77338484611f33565b6000806000611e2b611e1c85611e176012546120ff565b61210e565b611e2660646120ff565b612132565b9250611e3f611e1c85611e176013546120ff565b9150611e5484611e4f8585612149565b611dcf565b905083611e6a611e648585612149565b83612149565b14611e7157fe5b600e54611e8790600160a060020a03168261110f565b50600f54611e9e90600160a060020a03168461110f565b50601054611eb590600160a060020a03168361110f565b50600f54600160a060020a0316600090815260176020526040902054611edc908490612149565b600f54600160a060020a039081166000908152601760205260408082209390935560105490911681522054611f12908390612149565b601054600160a060020a031660009081526017602052604090205550505050565b60008080831515611f4757600192506120f6565b600654439010611f5657600080fd5b600160a060020a03851615801590611f80575030600160a060020a031685600160a060020a031614155b1515611f8b57600080fd5b611f958643610d1b565b915083821015611fa857600092506120f6565b600054611fbd90600160a060020a03166108dd565b156120585760008054600160a060020a031690634a393149908890889088906040516020015260405160e060020a63ffffffff8616028152600160a060020a0393841660048201529190921660248201526044810191909152606401602060405180830381600087803b151561203257600080fd5b6102c65a03f1151561204357600080fd5b50505060405180519050151561205857600080fd5b600160a060020a038616600090815260086020526040902061207c90858403611b60565b6120868543610d1b565b90508381018190101561209857600080fd5b600160a060020a03851660009081526008602052604090206120bc90828601611b60565b84600160a060020a031686600160a060020a03166000805160206121968339815191528660405190815260200160405180910390a3600192505b50509392505050565b60006110f282662386f26fc100005b600082820283158061212a575082848281151561212757fe5b04145b1515610b7757fe5b600080828481151561214057fe5b04949350505050565b600082820183811015610b7757fe5b8154818355818115116114e3576000838152602090206114e3918101908301610b3d91905b80821115612191576000815560010161217d565b50905600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a7230582095324ff6837ee8cf7c1e12c298d671b530d13b8ca4f732c8ecd9da24aa7d13ca0029"}