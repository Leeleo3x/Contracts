{"Runs": "200", "SwarmSource": "bzzr://e060e0fd5eee49fab0857a67063dbc4e1b8544940369c6a6f0b1f3c30a726bea", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawFounderFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_language\",\"type\":\"string\"},{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createLibrary\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementsERC721\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"libraryIndexToFounder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"total\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_language\",\"type\":\"string\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_startingPrice\",\"type\":\"uint256\"}],\"name\":\"createLibraryBounty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"founderOf\",\"outputs\":[{\"name\":\"_founder\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_language\",\"type\":\"string\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_founder\",\"type\":\"address\"}],\"name\":\"createLibraryWithFounder\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"nextPriceOf\",\"outputs\":[{\"name\":\"_nextPrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"calculateDevCut\",\"outputs\":[{\"name\":\"_devCut\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"libraryIndexToOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allTokens\",\"outputs\":[{\"components\":[{\"name\":\"language\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"}],\"name\":\"_libraries\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"libraryIndexToApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"name\":\"ownerTokens\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_newFounder\",\"type\":\"address\"}],\"name\":\"setFounder\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"libraryIndexToFounderCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"calculateFounderCut\",\"outputs\":[{\"name\":\"_founderCut\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"takeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"fundsOf\",\"outputs\":[{\"name\":\"_funds\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"priceOf\",\"outputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_founder\",\"type\":\"address\"}],\"name\":\"tokensOfFounder\",\"outputs\":[{\"name\":\"founderTokens\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getLibrary\",\"outputs\":[{\"name\":\"language\",\"type\":\"string\"},{\"name\":\"libraryName\",\"type\":\"string\"},{\"name\":\"tokenPrice\",\"type\":\"uint256\"},{\"name\":\"funds\",\"type\":\"uint256\"},{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"founder\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"calculateNextPrice\",\"outputs\":[{\"name\":\"_nextPrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"purchase\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SYMBOL\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_language\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"Created\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"Sold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"Bought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_founder\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"FounderSet\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.20+commit.3155dd80", "ConstructorArguments": "", "SourceCode": "pragma solidity ^0.4.19; // solhint-disable-line\r\n\r\n/**\r\n  * Interface for contracts conforming to ERC-721: Non-Fungible Tokens\r\n  * @author Dieter Shirley <[email\u00a0protected]> (https://github.com/dete)\r\n  */\r\ncontract ERC721 {\r\n  // Required methods\r\n  function approve(address _to, uint256 _tokenId) public;\r\n  function balanceOf(address _owner) public view returns (uint256 balance);\r\n  function implementsERC721() public pure returns (bool);\r\n  function ownerOf(uint256 _tokenId) public view returns (address addr);\r\n  function takeOwnership(uint256 _tokenId) public;\r\n  function totalSupply() public view returns (uint256 total);\r\n  function transferFrom(address _from, address _to, uint256 _tokenId) public;\r\n  function transfer(address _to, uint256 _tokenId) public;\r\n\r\n  event Transfer(address indexed from, address indexed to, uint256 tokenId);\r\n  event Approval(address indexed owner, address indexed approved, uint256 tokenId);\r\n\r\n  // Optional\r\n  // function name() public view returns (string name);\r\n  // function symbol() public view returns (string symbol);\r\n  // function tokenOfOwnerByIndex(address _owner, uint256 _index) external view returns (uint256 tokenId);\r\n  // function tokenMetadata(uint256 _tokenId) public view returns (string infoUrl);\r\n}\r\n\r\nlibrary SafeMath {\r\n\r\n  /**\r\n  * @dev Multiplies two numbers, throws on overflow.\r\n  */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Integer division of two numbers, truncating the quotient.\r\n  */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  /**\r\n  * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n  */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  /**\r\n  * @dev Adds two numbers, throws on overflow.\r\n  */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract LibraryToken is ERC721 {\r\n  using SafeMath for uint256;\r\n\r\n  /*** EVENTS ***/\r\n\r\n  /**\r\n    * @dev The Created event is fired whenever a new library comes into existence.\r\n    */\r\n  event Created(uint256 indexed _tokenId, string _language, string _name, address indexed _owner);\r\n\r\n  /**\r\n    * @dev The Sold event is fired whenever a token is sold.\r\n    */\r\n  event Sold(uint256 indexed _tokenId, address indexed _owner, uint256 indexed _price);\r\n\r\n  /**\r\n    * @dev The Bought event is fired whenever a token is bought.\r\n    */\r\n  event Bought(uint256 indexed _tokenId, address indexed _owner, uint256 indexed _price);\r\n\r\n  /**\r\n    * @dev Transfer event as defined in current draft of ERC721.\r\n    */\r\n  event Transfer(address indexed _from, address indexed _to, uint256 indexed _tokenId);\r\n\r\n  /**\r\n    * @dev Approval event as defined in current draft of ERC721.\r\n    */\r\n  event Approval(address indexed _owner, address indexed _approved, uint256 indexed _tokenId);\r\n\r\n  /**\r\n    * @dev FounderSet event fired when founder is set.\r\n    */\r\n  event FounderSet(address indexed _founder, uint256 indexed _tokenId);\r\n\r\n\r\n\r\n\r\n  /*** CONSTANTS ***/\r\n\r\n  /**\r\n    * @notice Name and symbol of the non-fungible token, as defined in ERC721.\r\n    */\r\n  string public constant NAME = \"CryptoLibraries\"; // solhint-disable-line\r\n  string public constant SYMBOL = \"CL\"; // solhint-disable-line\r\n\r\n  /**\r\n    * @dev Increase tiers to deterine how much price have to be changed\r\n    */\r\n  uint256 private startingPrice = 0.002 ether;\r\n  uint256 private developersCut = 0 ether;\r\n  uint256 private TIER1 = 0.02 ether;\r\n  uint256 private TIER2 = 0.5 ether;\r\n  uint256 private TIER3 = 2.0 ether;\r\n  uint256 private TIER4 = 5.0 ether;\r\n\r\n  /*** STORAGE ***/\r\n\r\n  /**\r\n    * @dev A mapping from library IDs to the address that owns them.\r\n    * All libraries have some valid owner address.\r\n    */\r\n  mapping (uint256 => address) public libraryIndexToOwner;\r\n\r\n  /**\r\n    * @dev A mapping from library IDs to the address that founder of library.\r\n    */\r\n  mapping (uint256 => address) public libraryIndexToFounder;\r\n\r\n  /**\r\n    * @dev A mapping from founder address to token count.\r\n  */\r\n  mapping (address => uint256) public libraryIndexToFounderCount;\r\n\r\n  /**\r\n    * @dev A mapping from owner address to count of tokens that address owns.\r\n    * Used internally inside balanceOf() to resolve ownership count.\r\n    */\r\n  mapping (address => uint256) private ownershipTokenCount;\r\n\r\n  /**\r\n    * @dev A mapping from LibraryIDs to an address that has been approved to call\r\n    * transferFrom(). Each Library can only have one approved address for transfer\r\n    * at any time. A zero value means no approval is outstanding.\r\n    */\r\n  mapping (uint256 => address) public libraryIndexToApproved;\r\n\r\n  /**\r\n    * @dev A mapping from LibraryIDs to the price of the token.\r\n    */\r\n  mapping (uint256 => uint256) private libraryIndexToPrice;\r\n\r\n  /**\r\n    * @dev A mapping from LibraryIDs to the funds avaialble for founder.\r\n    */\r\n  mapping (uint256 => uint256) private libraryIndexToFunds;\r\n\r\n  /**\r\n    * The addresses of the owner that can execute actions within each roles.\r\n    */\r\n  address public owner;\r\n\r\n\r\n\r\n  /*** DATATYPES ***/\r\n  struct Library {\r\n    string language;\r\n    string name;\r\n  }\r\n\r\n  Library[] private libraries;\r\n\r\n\r\n\r\n  /*** ACCESS MODIFIERS ***/\r\n\r\n  /**\r\n    * @dev Access modifier for owner functionality.\r\n    */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  /**\r\n    * @dev Access modifier for founder of library.\r\n    */\r\n  modifier onlyFounder(uint256 _tokenId) {\r\n    require(msg.sender == founderOf(_tokenId));\r\n    _;\r\n  }\r\n\r\n\r\n\r\n  /*** CONSTRUCTOR ***/\r\n\r\n  function LibraryToken() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n\r\n  /*** PUBLIC FUNCTIONS ERC-721 COMPILANCE ***/\r\n\r\n  /**\r\n    * @notice Grant another address the right to transfer token via takeOwnership() and transferFrom().\r\n    * @param _to The address to be granted transfer approval. Pass address(0) to\r\n    * clear all approvals.\r\n    * @param _tokenId The ID of the Token that can be transferred if this call succeeds.\r\n    */\r\n  function approve(\r\n    address _to,\r\n    uint256 _tokenId\r\n  )\r\n    public\r\n  {\r\n    // Caller can't be approver of request\r\n    require(msg.sender != _to);\r\n\r\n    // Caller must own token.\r\n    require(_owns(msg.sender, _tokenId));\r\n\r\n    libraryIndexToApproved[_tokenId] = _to;\r\n\r\n    Approval(msg.sender, _to, _tokenId);\r\n  }\r\n\r\n  /**\r\n    * For querying balance of a particular account\r\n    * @param _owner The address for balance query\r\n    * @return balance The number of tokens owned by owner\r\n    */\r\n  function balanceOf(address _owner) public view returns (uint256 balance) {\r\n    return ownershipTokenCount[_owner];\r\n  }\r\n\r\n  /**\r\n    * @dev Required for ERC-721 compliance.\r\n    * @return bool\r\n    */\r\n  function implementsERC721() public pure returns (bool) {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n    * For querying owner of token\r\n    * @dev Required for ERC-721 compliance.\r\n    * @param _tokenId The tokenID for owner inquiry\r\n    * @return tokenOwner address of token owner\r\n    */\r\n  function ownerOf(uint256 _tokenId) public view returns (address tokenOwner) {\r\n    tokenOwner = libraryIndexToOwner[_tokenId];\r\n    require(tokenOwner != address(0));\r\n  }\r\n\r\n  /**\r\n    * @notice Allow pre-approved user to take ownership of a token\r\n    * @dev Required for ERC-721 compliance.\r\n    * @param _tokenId The ID of the Token that can be transferred if this call succeeds.\r\n    */\r\n  function takeOwnership(uint256 _tokenId) public {\r\n    // Safety check to prevent against an unexpected 0x0 default.\r\n    require(_addressNotNull(newOwner));\r\n\r\n    // Making sure transfer is approved\r\n    require(_approved(newOwner, _tokenId));\r\n\r\n    address newOwner = msg.sender;\r\n    address oldOwner = libraryIndexToOwner[_tokenId];\r\n\r\n    _transfer(oldOwner, newOwner, _tokenId);\r\n  }\r\n\r\n  /**\r\n    * totalSupply\r\n    * For querying total numbers of tokens\r\n    * @return total The total supply of tokens\r\n    */\r\n  function totalSupply() public view returns (uint256 total) {\r\n    return libraries.length;\r\n  }\r\n\r\n  /**\r\n    * transferFro\r\n    * Third-party initiates transfer of token from address _from to address _to\r\n    * @param _from The address for the token to be transferred from.\r\n    * @param _to The address for the token to be transferred to.\r\n    * @param _tokenId The ID of the Token that can be transferred if this call succeeds.\r\n    */\r\n  function transferFrom(\r\n    address _from,\r\n    address _to,\r\n    uint256 _tokenId\r\n  )\r\n    public\r\n  {\r\n    require(_owns(_from, _tokenId));\r\n    require(_approved(_to, _tokenId));\r\n    require(_addressNotNull(_to));\r\n\r\n    _transfer(_from, _to, _tokenId);\r\n  }\r\n\r\n  /**\r\n    * Owner initates the transfer of the token to another account\r\n    * @param _to The address for the token to be transferred to.\r\n    * @param _tokenId The ID of the Token that can be transferred if this call succeeds.\r\n    */\r\n  function transfer(\r\n    address _to,\r\n    uint256 _tokenId\r\n  )\r\n    public\r\n  {\r\n    require(_owns(msg.sender, _tokenId));\r\n    require(_addressNotNull(_to));\r\n\r\n    _transfer(msg.sender, _to, _tokenId);\r\n  }\r\n\r\n  /**\r\n    * @dev Required for ERC-721 compliance.\r\n    */\r\n  function name() public pure returns (string) {\r\n    return NAME;\r\n  }\r\n\r\n  /**\r\n    * @dev Required for ERC-721 compliance.\r\n    */\r\n  function symbol() public pure returns (string) {\r\n    return SYMBOL;\r\n  }\r\n\r\n\r\n\r\n  /*** PUBLIC FUNCTIONS ***/\r\n\r\n  /**\r\n    * @dev Creates a new Library with the given language and name.\r\n    * @param _language The library language\r\n    * @param _name The name of library/framework\r\n    */\r\n  function createLibrary(string _language, string _name) public onlyOwner {\r\n    _createLibrary(_language, _name, address(this), address(0), 0, startingPrice);\r\n  }\r\n\r\n  /**\r\n    * @dev Creates a new Library with the given language and name and founder address.\r\n    * @param _language The library language\r\n    * @param _name The name of library/framework\r\n    * @param _founder The founder of library/framework\r\n    */\r\n  function createLibraryWithFounder(string _language, string _name, address _founder) public onlyOwner {\r\n    require(_addressNotNull(_founder));\r\n    _createLibrary(_language, _name, address(this), _founder, 0, startingPrice);\r\n  }\r\n\r\n  /**\r\n    * @dev Creates a new Library with the given language and name and owner address and starting price.\r\n    * Itd be used for various bounties prize.\r\n    * @param _language The library language\r\n    * @param _name The name of library/framework\r\n    * @param _owner The owner of library token\r\n    * @param _startingPrice The starting price of library token\r\n    */\r\n  function createLibraryBounty(string _language, string _name, address _owner, uint256 _startingPrice) public onlyOwner {\r\n    require(_addressNotNull(_owner));\r\n    _createLibrary(_language, _name, _owner, address(0), 0, _startingPrice);\r\n  }\r\n\r\n  /**\r\n    * @notice Returns all the relevant information about a specific library.\r\n    * @param _tokenId The tokenId of the library of interest.\r\n    */\r\n  function getLibrary(uint256 _tokenId) public view returns (\r\n    string language,\r\n    string libraryName,\r\n    uint256 tokenPrice,\r\n    uint256 funds,\r\n    address tokenOwner,\r\n    address founder\r\n  ) {\r\n    Library storage x = libraries[_tokenId];\r\n    libraryName = x.name;\r\n    language = x.language;\r\n    founder = libraryIndexToFounder[_tokenId];\r\n    funds = libraryIndexToFunds[_tokenId];\r\n    tokenPrice = libraryIndexToPrice[_tokenId];\r\n    tokenOwner = libraryIndexToOwner[_tokenId];\r\n  }\r\n\r\n  /**\r\n    * For querying price of token\r\n    * @param _tokenId The tokenID for owner inquiry\r\n    * @return _price The current price of token\r\n    */\r\n  function priceOf(uint256 _tokenId) public view returns (uint256 _price) {\r\n    return libraryIndexToPrice[_tokenId];\r\n  }\r\n\r\n  /**\r\n    * For querying next price of token\r\n    * @param _tokenId The tokenID for owner inquiry\r\n    * @return _nextPrice The next price of token\r\n    */\r\n  function nextPriceOf(uint256 _tokenId) public view returns (uint256 _nextPrice) {\r\n    return calculateNextPrice(priceOf(_tokenId));\r\n  }\r\n\r\n  /**\r\n    * For querying founder of library\r\n    * @param _tokenId The tokenID for founder inquiry\r\n    * @return _founder The address of library founder\r\n    */\r\n  function founderOf(uint256 _tokenId) public view returns (address _founder) {\r\n    _founder = libraryIndexToFounder[_tokenId];\r\n    require(_founder != address(0));\r\n  }\r\n\r\n  /**\r\n    * For querying founder funds of library\r\n    * @param _tokenId The tokenID for founder inquiry\r\n    * @return _funds The funds availale for a fo\r\n    */\r\n  function fundsOf(uint256 _tokenId) public view returns (uint256 _funds) {\r\n    _funds = libraryIndexToFunds[_tokenId];\r\n  }\r\n\r\n  /**\r\n    * For querying next price of token\r\n    * @param _price The token actual price\r\n    * @return _nextPrice The next price\r\n    */\r\n  function calculateNextPrice (uint256 _price) public view returns (uint256 _nextPrice) {\r\n    if (_price < TIER1) {\r\n      return _price.mul(200).div(95);\r\n    } else if (_price < TIER2) {\r\n      return _price.mul(135).div(96);\r\n    } else if (_price < TIER3) {\r\n      return _price.mul(125).div(97);\r\n    } else if (_price < TIER4) {\r\n      return _price.mul(117).div(97);\r\n    } else {\r\n      return _price.mul(115).div(98);\r\n    }\r\n  }\r\n\r\n  /**\r\n    * For querying developer's cut which is left in the contract by `purchase`\r\n    * @param _price The token actual price\r\n    * @return _devCut The developer's cut\r\n    */\r\n  function calculateDevCut (uint256 _price) public view returns (uint256 _devCut) {\r\n    if (_price < TIER1) {\r\n      return _price.mul(5).div(100); // 5%\r\n    } else if (_price < TIER2) {\r\n      return _price.mul(4).div(100); // 4%\r\n    } else if (_price < TIER3) {\r\n      return _price.mul(3).div(100); // 3%\r\n    } else if (_price < TIER4) {\r\n      return _price.mul(3).div(100); // 3%\r\n    } else {\r\n      return _price.mul(2).div(100); // 2%\r\n    }\r\n  }\r\n\r\n  /**\r\n    * For querying founder cut which is left in the contract by `purchase`\r\n    * @param _price The token actual price\r\n    */\r\n  function calculateFounderCut (uint256 _price) public pure returns (uint256 _founderCut) {\r\n    return _price.mul(1).div(100);\r\n  }\r\n\r\n  /**\r\n    * @dev This function withdrawing all of developer's cut which is left in the contract by `purchase`.\r\n    * User funds are immediately sent to the old owner in `purchase`, no user funds are left in the contract\r\n    * expect funds that stay in the contract that are waiting to be sent to a founder of a library when we would assign him.\r\n    */\r\n  function withdrawAll () onlyOwner() public {\r\n    owner.transfer(developersCut);\r\n    // Set developersCut to 0 to reset counter of possible funds\r\n    developersCut = 0;\r\n  }\r\n\r\n  /**\r\n    * @dev This function withdrawing selected amount of developer's cut which is left in the contract by `purchase`.\r\n    * User funds are immediately sent to the old owner in `purchase`, no user funds are left in the contract\r\n    * expect funds that stay in the contract that are waiting to be sent to a founder of a library when we would assign him.\r\n    * @param _amount The amount to withdraw\r\n    */\r\n  function withdrawAmount (uint256 _amount) onlyOwner() public {\r\n    require(_amount >= developersCut);\r\n\r\n    owner.transfer(_amount);\r\n    developersCut = developersCut.sub(_amount);\r\n  }\r\n\r\n    /**\r\n    * @dev This function withdrawing selected amount of developer's cut which is left in the contract by `purchase`.\r\n    * User funds are immediately sent to the old owner in `purchase`, no user funds are left in the contract\r\n    * expect funds that stay in the contract that are waiting to be sent to a founder of a library when we would assign him.\r\n    */\r\n  function withdrawFounderFunds (uint256 _tokenId) onlyFounder(_tokenId) public {\r\n    address founder = founderOf(_tokenId);\r\n    uint256 funds = fundsOf(_tokenId);\r\n    founder.transfer(funds);\r\n\r\n    // Set funds to 0 after transfer since founder can only withdraw all funts\r\n    libraryIndexToFunds[_tokenId] = 0;\r\n  }\r\n\r\n  /*\r\n     Purchase a library directly from the contract for the calculated price\r\n     which ensures that the owner gets a profit.  All libraries that\r\n     have been listed can be bought by this method. User funds are sent\r\n     directly to the previous owner and are never stored in the contract.\r\n  */\r\n  function purchase(uint256 _tokenId) public payable {\r\n    address oldOwner = libraryIndexToOwner[_tokenId];\r\n    address newOwner = msg.sender;\r\n    // Making sure token owner is not sending to self\r\n    require(oldOwner != newOwner);\r\n\r\n    // Safety check to prevent against an unexpected 0x0 default.\r\n    require(_addressNotNull(newOwner));\r\n\r\n    // Making sure sent amount is greater than or equal to the sellingPrice\r\n    uint256 price = libraryIndexToPrice[_tokenId];\r\n    require(msg.value >= price);\r\n\r\n    uint256 excess = msg.value.sub(price);\r\n\r\n    _transfer(oldOwner, newOwner, _tokenId);\r\n    libraryIndexToPrice[_tokenId] = nextPriceOf(_tokenId);\r\n\r\n    Bought(_tokenId, newOwner, price);\r\n    Sold(_tokenId, oldOwner, price);\r\n\r\n    // Devevloper's cut which is left in contract and accesed by\r\n    // `withdrawAll` and `withdrawAmount` methods.\r\n    uint256 devCut = calculateDevCut(price);\r\n    developersCut = developersCut.add(devCut);\r\n\r\n    // Founders cut which is left in contract and accesed by\r\n    // `withdrawFounderFunds` methods.\r\n    uint256 founderCut = calculateFounderCut(price);\r\n    libraryIndexToFunds[_tokenId] = libraryIndexToFunds[_tokenId].add(founderCut);\r\n\r\n    // Pay previous tokenOwner if owner is not contract\r\n    if (oldOwner != address(this)) {\r\n      oldOwner.transfer(price.sub(devCut.add(founderCut)));\r\n    }\r\n\r\n    if (excess > 0) {\r\n      newOwner.transfer(excess);\r\n    }\r\n  }\r\n\r\n  /**\r\n    * @dev This method MUST NEVER be called by smart contract code. First, it's fairly\r\n    * expensive (it walks the entire Cities array looking for cities belonging to owner),\r\n    * but it also returns a dynamic array, which is only supported for web3 calls, and\r\n    * not contract-to-contract calls.\r\n    * @param _owner The owner whose library tokens we are interested in.\r\n    * @return []ownerTokens The tokens of owner\r\n    */\r\n  function tokensOfOwner(address _owner) public view returns(uint256[] ownerTokens) {\r\n    uint256 tokenCount = balanceOf(_owner);\r\n    if (tokenCount == 0) {\r\n        // Return an empty array\r\n      return new uint256[](0);\r\n    } else {\r\n      uint256[] memory result = new uint256[](tokenCount);\r\n      uint256 totalLibraries = totalSupply();\r\n      uint256 resultIndex = 0;\r\n\r\n      uint256 libraryId;\r\n      for (libraryId = 0; libraryId <= totalLibraries; libraryId++) {\r\n        if (libraryIndexToOwner[libraryId] == _owner) {\r\n          result[resultIndex] = libraryId;\r\n          resultIndex++;\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n  }\r\n\r\n    /**\r\n    * @dev This method MUST NEVER be called by smart contract code. First, it's fairly\r\n    * expensive (it walks the entire Cities array looking for cities belonging to owner),\r\n    * but it also returns a dynamic array, which is only supported for web3 calls, and\r\n    * not contract-to-contract calls.\r\n    * @param _founder The owner whose library tokens we are interested in.\r\n    * @return []founderTokens The tokens of owner\r\n    */\r\n  function tokensOfFounder(address _founder) public view returns(uint256[] founderTokens) {\r\n    uint256 tokenCount = libraryIndexToFounderCount[_founder];\r\n    if (tokenCount == 0) {\r\n        // Return an empty array\r\n      return new uint256[](0);\r\n    } else {\r\n      uint256[] memory result = new uint256[](tokenCount);\r\n      uint256 totalLibraries = totalSupply();\r\n      uint256 resultIndex = 0;\r\n\r\n      uint256 libraryId;\r\n      for (libraryId = 0; libraryId <= totalLibraries; libraryId++) {\r\n        if (libraryIndexToFounder[libraryId] == _founder) {\r\n          result[resultIndex] = libraryId;\r\n          resultIndex++;\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n  }\r\n\r\n\r\n    /**\r\n    * @dev \r\n    * @return []_libraries All tokens\r\n    */\r\n  function allTokens() public pure returns(Library[] _libraries) {\r\n    return _libraries;\r\n  }\r\n\r\n  /**\r\n    * @dev Assigns a new address to act as the Owner. Only available to the current Owner.\r\n    * @param _newOwner The address of the new owner\r\n    */\r\n  function setOwner(address _newOwner) public onlyOwner {\r\n    require(_newOwner != address(0));\r\n\r\n    owner = _newOwner;\r\n  }\r\n\r\n    /**\r\n    * @dev Assigns a new address to act as the founder of library to let him withdraw collected funds of his library.\r\n    * @param _tokenId The id of a Token\r\n    * @param _newFounder The address of the new owner\r\n    */\r\n  function setFounder(uint256 _tokenId, address _newFounder) public onlyOwner {\r\n    require(_newFounder != address(0));\r\n\r\n    address oldFounder = founderOf(_tokenId);\r\n\r\n    libraryIndexToFounder[_tokenId] = _newFounder;\r\n    FounderSet(_newFounder, _tokenId);\r\n\r\n    libraryIndexToFounderCount[_newFounder] = libraryIndexToFounderCount[_newFounder].add(1);\r\n    libraryIndexToFounderCount[oldFounder] = libraryIndexToFounderCount[oldFounder].sub(1);\r\n  }\r\n\r\n\r\n\r\n  /*** PRIVATE FUNCTIONS ***/\r\n\r\n  /**\r\n    * Safety check on _to address to prevent against an unexpected 0x0 default.\r\n    * @param _to The address to validate if not null\r\n    * @return bool The result of check\r\n    */\r\n  function _addressNotNull(address _to) private pure returns (bool) {\r\n    return _to != address(0);\r\n  }\r\n\r\n  /**\r\n    * For checking approval of transfer for address _to\r\n    * @param _to The address to validate if approved\r\n    * @param _tokenId The token id to validate if approved\r\n    * @return bool The result of validation\r\n    */\r\n  function _approved(address _to, uint256 _tokenId) private view returns (bool) {\r\n    return libraryIndexToApproved[_tokenId] == _to;\r\n  }\r\n\r\n  /**\r\n    * Function to create a new Library\r\n    * @param _language The language (etc. Python, JavaScript) of library\r\n    * @param _name The name of library/framework (etc. Anguar, Redux, Flask)\r\n    * @param _owner The current owner of Token\r\n    * @param _founder The founder of library/framework\r\n    * @param _funds The funds available to founder of library/framework\r\n    * @param _price The current price of a Token\r\n    */\r\n  function _createLibrary(\r\n    string _language,\r\n    string _name,\r\n    address _owner,\r\n    address _founder,\r\n    uint256 _funds,\r\n    uint256 _price\r\n  )\r\n    private\r\n  {\r\n    Library memory _library = Library({\r\n      name: _name,\r\n      language: _language\r\n    });\r\n    uint256 newLibraryId = libraries.push(_library) - 1;\r\n\r\n    Created(newLibraryId, _language, _name, _owner);\r\n\r\n    libraryIndexToPrice[newLibraryId] = _price;\r\n    libraryIndexToFounder[newLibraryId] = _founder;\r\n    libraryIndexToFunds[newLibraryId] = _funds;\r\n\r\n    // This will assign ownership, and also emit the Transfer event as per ERC721 draft\r\n    _transfer(address(0), _owner, newLibraryId);\r\n  }\r\n\r\n  /**\r\n    * Check for token ownership\r\n    * @param claimant The claimant\r\n    * @param _tokenId The token id to check claim\r\n    * @return bool The result of validation\r\n    */\r\n  function _owns(address claimant, uint256 _tokenId) private view returns (bool) {\r\n    return claimant == libraryIndexToOwner[_tokenId];\r\n  }\r\n\r\n  /**\r\n    * @dev Assigns ownership of a specific Library to an address.\r\n    * @param _from The old owner of token\r\n    * @param _to The new owner of token\r\n    * @param _tokenId The id of token to change owner\r\n    */\r\n  function _transfer(address _from, address _to, uint256 _tokenId) private {\r\n    // Since the number of library is capped to 2^32 we can't overflow this\r\n    ownershipTokenCount[_to] = ownershipTokenCount[_to].add(1);\r\n\r\n    //transfer ownership\r\n    libraryIndexToOwner[_tokenId] = _to;\r\n\r\n    // When creating new libraries _from is 0x0, but we can't account that address.\r\n    if (_from != address(0)) {\r\n      ownershipTokenCount[_from] = ownershipTokenCount[_from].sub(1);\r\n\r\n      // clear any previously approved ownership exchange\r\n      delete libraryIndexToApproved[_tokenId];\r\n    }\r\n\r\n    // Emit the transfer event.\r\n    Transfer(_from, _to, _tokenId);\r\n  }\r\n}", "OptimizationUsed": "1", "ContractName": "LibraryToken", "ByteCode": "0x6060604052600436106101cc5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166303edae5781146101d15780630562b9f7146101e957806306fdde03146101ff578063078b55e614610289578063095ea7b31461031c5780631051db341461033e578063137a03651461036557806313af40351461039757806318160ddd146103b657806318abb75c146103db57806323b872dd1461047e5780634f5f560a146104a65780635375a828146104bc5780635ba9e48e1461055a5780636352211e1461057057806365121205146105865780636f265eaa1461059c5780636ff97f1d146105b257806370a08231146106135780637577e98e146106325780638462151c14610648578063853828b6146106ba5780638da5cb5b146106cd57806395d89b41146106e057806399384976146106f35780639d083e8414610715578063a2ac536014610734578063a3f4df7e1461074a578063a9059cbb1461075d578063b2e6ceeb1461077f578063b76c94e114610795578063b9186d7d146107ab578063c3f3310b146107c1578063d15d62a7146107e0578063e08503ec14610900578063efef39a114610916578063f76f8d7814610921575b600080fd5b34156101dc57600080fd5b6101e7600435610934565b005b34156101f457600080fd5b6101e76004356109bb565b341561020a57600080fd5b610212610a31565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561024e578082015183820152602001610236565b50505050905090810190601f16801561027b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561029457600080fd5b6101e760046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650610a7395505050505050565b341561032757600080fd5b6101e7600160a060020a0360043516602435610aa3565b341561034957600080fd5b610351610b3c565b604051901515815260200160405180910390f35b341561037057600080fd5b61037b600435610b41565b604051600160a060020a03909116815260200160405180910390f35b34156103a257600080fd5b6101e7600160a060020a0360043516610b5c565b34156103c157600080fd5b6103c9610bae565b60405190815260200160405180910390f35b34156103e657600080fd5b6101e760046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965050600160a060020a0385351694602001359350610bb492505050565b341561048957600080fd5b6101e7600160a060020a0360043581169060243516604435610bf8565b34156104b157600080fd5b61037b600435610c46565b34156104c757600080fd5b6101e760046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965050509235600160a060020a03169250610c6f915050565b341561056557600080fd5b6103c9600435610cae565b341561057b57600080fd5b61037b600435610cc7565b341561059157600080fd5b6103c9600435610ceb565b34156105a757600080fd5b61037b600435610d96565b34156105bd57600080fd5b6105c5610db1565b604051602080825281908101838181518152602001915080516000925b8184101561060257602080850284010151815260200192600101926105e2565b925050509250505060405180910390f35b341561061e57600080fd5b6103c9600160a060020a0360043516610db9565b341561063d57600080fd5b61037b600435610dd4565b341561065357600080fd5b610667600160a060020a0360043516610def565b60405160208082528190810183818151815260200191508051906020019060200280838360005b838110156106a657808201518382015260200161068e565b505050509050019250505060405180910390f35b34156106c557600080fd5b6101e7610ed0565b34156106d857600080fd5b61037b610f2b565b34156106eb57600080fd5b610212610f3a565b34156106fe57600080fd5b6101e7600435600160a060020a0360243516610f7b565b341561072057600080fd5b6103c9600160a060020a0360043516611092565b341561073f57600080fd5b6103c96004356110a4565b341561075557600080fd5b6102126110bc565b341561076857600080fd5b6101e7600160a060020a03600435166024356110f3565b341561078a57600080fd5b6101e7600435611127565b34156107a057600080fd5b6103c960043561117a565b34156107b657600080fd5b6103c960043561118c565b34156107cc57600080fd5b610667600160a060020a036004351661119e565b34156107eb57600080fd5b6107f660043561127d565b6040516040810185905260608101849052600160a060020a038084166080830152821660a082015260c080825281906020820190820189818151815260200191508051906020019080838360005b8381101561085c578082015183820152602001610844565b50505050905090810190601f1680156108895780820380516001836020036101000a031916815260200191505b50838103825288818151815260200191508051906020019080838360005b838110156108bf5780820151838201526020016108a7565b50505050905090810190601f1680156108ec5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b341561090b57600080fd5b6103c960043561143b565b6101e76004356114d3565b341561092c57600080fd5b6102126116e9565b6000808261094181610c46565b600160a060020a031633600160a060020a031614151561096057600080fd5b61096984610c46565b92506109748461117a565b9150600160a060020a03831682156108fc0283604051600060405180830381858888f1935050505015156109a757600080fd5b5050506000908152600c6020526040812055565b600d5433600160a060020a039081169116146109d657600080fd5b6001548110156109e557600080fd5b600d54600160a060020a031681156108fc0282604051600060405180830381858888f193505050501515610a1857600080fd5b600154610a2b908263ffffffff61172016565b60015550565b610a39611acb565b60408051908101604052600f81527f43727970746f4c69627261726965730000000000000000000000000000000000602082015290505b90565b600d5433600160a060020a03908116911614610a8e57600080fd5b610a9f828230600080600054611732565b5050565b81600160a060020a031633600160a060020a031614151515610ac457600080fd5b610ace338261190d565b1515610ad957600080fd5b6000818152600a6020526040908190208054600160a060020a031916600160a060020a03858116918217909255839290913316907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925905160405180910390a45050565b600190565b600760205260009081526040902054600160a060020a031681565b600d5433600160a060020a03908116911614610b7757600080fd5b600160a060020a0381161515610b8c57600080fd5b600d8054600160a060020a031916600160a060020a0392909216919091179055565b600e5490565b600d5433600160a060020a03908116911614610bcf57600080fd5b610bd88261192d565b1515610be357600080fd5b610bf284848460008086611732565b50505050565b610c02838261190d565b1515610c0d57600080fd5b610c17828261193b565b1515610c2257600080fd5b610c2b8261192d565b1515610c3657600080fd5b610c4183838361195b565b505050565b600081815260076020526040902054600160a060020a0316801515610c6a57600080fd5b919050565b600d5433600160a060020a03908116911614610c8a57600080fd5b610c938161192d565b1515610c9e57600080fd5b610c418383308460008054611732565b6000610cc1610cbc8361118c565b61143b565b92915050565b600081815260066020526040902054600160a060020a0316801515610c6a57600080fd5b6000600254821015610d2057610d196064610d0d84600563ffffffff611a6f16565b9063ffffffff611aa516565b9050610c6a565b600354821015610d4057610d196064610d0d84600463ffffffff611a6f16565b600454821015610d6057610d196064610d0d84600363ffffffff611a6f16565b600554821015610d8057610d196064610d0d84600363ffffffff611a6f16565b610d196064610d0d84600263ffffffff611a6f16565b600660205260009081526040902054600160a060020a031681565b610a70611acb565b600160a060020a031660009081526009602052604090205490565b600a60205260009081526040902054600160a060020a031681565b610df7611acb565b6000610e01611acb565b6000806000610e0f87610db9565b9450841515610e3f576000604051805910610e275750595b90808252806020026020018201604052509550610ec6565b84604051805910610e4d5750595b90808252806020026020018201604052509350610e68610bae565b925060009150600090505b828111610ec257600081815260066020526040902054600160a060020a0388811691161415610eba5780848381518110610ea957fe5b602090810290910101526001909101905b600101610e73565b8395505b5050505050919050565b600d5433600160a060020a03908116911614610eeb57600080fd5b600d54600154600160a060020a039091169080156108fc0290604051600060405180830381858888f193505050501515610f2457600080fd5b6000600155565b600d54600160a060020a031681565b610f42611acb565b60408051908101604052600281527f434c0000000000000000000000000000000000000000000000000000000000006020820152905090565b600d5460009033600160a060020a03908116911614610f9957600080fd5b600160a060020a0382161515610fae57600080fd5b610fb783610c46565b600084815260076020526040908190208054600160a060020a031916600160a060020a0386169081179091559192508491907f5b7acd83abc83b723c829bfe87fee0201aa8ffcbfd0ea2aa432258bd0edd48a2905160405180910390a3600160a060020a03821660009081526008602052604090205461103e90600163ffffffff611abc16565b600160a060020a03808416600090815260086020526040808220939093559083168152205461107490600163ffffffff61172016565b600160a060020a039091166000908152600860205260409020555050565b60086020526000908152604090205481565b6000610cc16064610d0d84600163ffffffff611a6f16565b60408051908101604052600f81527f43727970746f4c69627261726965730000000000000000000000000000000000602082015281565b6110fd338261190d565b151561110857600080fd5b6111118261192d565b151561111c57600080fd5b610a9f33838361195b565b6000806111338261192d565b151561113e57600080fd5b611148828461193b565b151561115357600080fd5b50506000818152600660205260409020543390600160a060020a0316610c4181838561195b565b6000908152600c602052604090205490565b6000908152600b602052604090205490565b6111a6611acb565b60006111b0611acb565b600160a060020a038416600090815260086020526040812054925080808415156111fa576000604051805910610e2757505990808252806020026020018201604052509550610ec6565b846040518059106112085750595b90808252806020026020018201604052509350611223610bae565b925060009150600090505b828111610ec257600081815260076020526040902054600160a060020a0388811691161415611275578084838151811061126457fe5b602090810290910101526001909101905b60010161122e565b611285611acb565b61128d611acb565b6000806000806000600e888154811015156112a457fe5b90600052602060002090600202019050806001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561134c5780601f106113215761010080835404028352916020019161134c565b820191906000526020600020905b81548152906001019060200180831161132f57829003601f168201915b50505050509550806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113eb5780601f106113c0576101008083540402835291602001916113eb565b820191906000526020600020905b8154815290600101906020018083116113ce57829003601f168201915b50505060009a8b525050600760209081526040808b2054600c8352818c2054600b8452828d2054600690945291909b2054929b989a91995097600160a060020a0392831697509116945092505050565b600060025482101561145d57610d19605f610d0d8460c863ffffffff611a6f16565b60035482101561147d57610d196060610d0d84608763ffffffff611a6f16565b60045482101561149d57610d196061610d0d84607d63ffffffff611a6f16565b6005548210156114bd57610d196061610d0d84607563ffffffff611a6f16565b610d196062610d0d84607363ffffffff611a6f16565b600081815260066020526040812054600160a060020a03908116913391819081908190851686141561150457600080fd5b61150d8561192d565b151561151857600080fd5b6000878152600b60205260409020549350348490101561153757600080fd5b611547348563ffffffff61172016565b925061155486868961195b565b61155d87610cae565b600b6000898152602001908152602001600020819055508385600160a060020a0316887fd2728f908c7e0feb83c6278798370fcb86b62f236c9dbf1a3f541096c215904060405160405180910390a48386600160a060020a0316887f66f5cd880edf48cdde6c966e5da0784fcc4c5e85572b8b3b62c4357798d447d760405160405180910390a46115ed84610ceb565b600154909250611603908363ffffffff611abc16565b60015561160f846110a4565b6000888152600c6020526040902054909150611631908263ffffffff611abc16565b6000888152600c602052604090205530600160a060020a03908116908716146116a657600160a060020a0386166108fc611681611674858563ffffffff611abc16565b879063ffffffff61172016565b9081150290604051600060405180830381858888f1935050505015156116a657600080fd5b60008311156116e057600160a060020a03851683156108fc0284604051600060405180830381858888f1935050505015156116e057600080fd5b50505050505050565b60408051908101604052600281527f434c000000000000000000000000000000000000000000000000000000000000602082015281565b60008282111561172c57fe5b50900390565b61173a611add565b60006040805190810160405288815260208101889052600e80549193506001918083016117678382611b02565b6000928352602090922085916002020181518190805161178b929160200190611b2e565b506020820151816001019080516117a6929160200190611b2e565b50505003905085600160a060020a0316817fe64290b6b9ac97e32765927251bd55ed9a6757abd5c166f5ed5eea5a4a893cb68a8a604051808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561181b578082015183820152602001611803565b50505050905090810190601f1680156118485780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561187e578082015183820152602001611866565b50505050905090810190601f1680156118ab5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a36000818152600b60209081526040808320869055600782528083208054600160a060020a031916600160a060020a038a16179055600c909152812085905561190390878361195b565b5050505050505050565b600090815260066020526040902054600160a060020a0390811691161490565b600160a060020a0316151590565b6000908152600a6020526040902054600160a060020a0391821691161490565b600160a060020a03821660009081526009602052604090205461198590600163ffffffff611abc16565b600160a060020a0380841660008181526009602090815260408083209590955585825260069052929092208054600160a060020a031916909217909155831615611a2957600160a060020a0383166000908152600960205260409020546119f390600163ffffffff61172016565b600160a060020a038416600090815260096020908152604080832093909355838252600a9052208054600160a060020a03191690555b8082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600080831515611a825760009150611a9e565b50828202828482811515611a9257fe5b0414611a9a57fe5b8091505b5092915050565b6000808284811515611ab357fe5b04949350505050565b600082820183811015611a9a57fe5b60206040519081016040526000815290565b6040805190810160405280611af0611acb565b8152602001611afd611acb565b905290565b815481835581811511610c4157600202816002028360005260206000209182019101610c419190611bac565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611b6f57805160ff1916838001178555611b9c565b82800160010185558215611b9c579182015b82811115611b9c578251825591602001919060010190611b81565b50611ba8929150611bdd565b5090565b610a7091905b80821115611ba8576000611bc68282611bf7565b611bd4600183016000611bf7565b50600201611bb2565b610a7091905b80821115611ba85760008155600101611be3565b50805460018160011615610100020316600290046000825580601f10611c1d5750611c3b565b601f016020900490600052602060002090810190611c3b9190611bdd565b505600a165627a7a72305820e060e0fd5eee49fab0857a67063dbc4e1b8544940369c6a6f0b1f3c30a726bea0029"}