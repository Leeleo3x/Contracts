{"Runs": "200", "SwarmSource": "bzzr://5ad7a6a2d562512bf45fa613c725473ae4db5a17be681123885fd9935ff3546f", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwnerCandidate\",\"type\":\"address\"}],\"name\":\"requestOwnershipTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isTransferable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"makeTokensTransferable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwnerCandidate\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TokensTransferable\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_by\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"TransferAndCall\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.18+commit.9cf6e910", "ConstructorArguments": "000000000000000000000000000000000000000004FA7032A6D093D29F36B2E4", "SourceCode": "pragma solidity 0.4.18;\r\n\r\n/// @title Ownable\r\n/// @dev The Ownable contract has an owner address, and provides basic authorization control functions,\r\n/// this simplifies the implementation of \"user permissions\".\r\n/// @dev Based on OpenZeppelin's Ownable.\r\n\r\ncontract Ownable {\r\n    address public owner;\r\n    address public newOwnerCandidate;\r\n\r\n    event OwnershipRequested(address indexed _by, address indexed _to);\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n    /// @dev Constructor sets the original `owner` of the contract to the sender account.\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /// @dev Reverts if called by any account other than the owner.\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier onlyOwnerCandidate() {\r\n        require(msg.sender == newOwnerCandidate);\r\n        _;\r\n    }\r\n\r\n    /// @dev Proposes to transfer control of the contract to a newOwnerCandidate.\r\n    /// @param _newOwnerCandidate address The address to transfer ownership to.\r\n    function requestOwnershipTransfer(address _newOwnerCandidate) external onlyOwner {\r\n        require(_newOwnerCandidate != address(0));\r\n\r\n        newOwnerCandidate = _newOwnerCandidate;\r\n\r\n        OwnershipRequested(msg.sender, newOwnerCandidate);\r\n    }\r\n\r\n    /// @dev Accept ownership transfer. This method needs to be called by the perviously proposed owner.\r\n    function acceptOwnership() external onlyOwnerCandidate {\r\n        address previousOwner = owner;\r\n\r\n        owner = newOwnerCandidate;\r\n        newOwnerCandidate = address(0);\r\n\r\n        OwnershipTransferred(previousOwner, owner);\r\n    }\r\n}\r\n\r\n/// @title Math operations with safety checks\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a * b;\r\n        require(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // require(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // require(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a);\r\n        return c;\r\n    }\r\n\r\n    function max64(uint64 a, uint64 b) internal pure returns (uint64) {\r\n        return a >= b ? a : b;\r\n    }\r\n\r\n    function min64(uint64 a, uint64 b) internal pure returns (uint64) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    function max256(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a >= b ? a : b;\r\n    }\r\n\r\n    function min256(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    function toPower2(uint256 a) internal pure returns (uint256) {\r\n        return mul(a, a);\r\n    }\r\n\r\n    function sqrt(uint256 a) internal pure returns (uint256) {\r\n        uint256 c = (a + 1) / 2;\r\n        uint256 b = a;\r\n        while (c < b) {\r\n            b = c;\r\n            c = (a / c + c) / 2;\r\n        }\r\n        return b;\r\n    }\r\n}\r\n\r\n/// @title ERC Token Standard #20 Interface (https://github.com/ethereum/EIPs/issues/20)\r\ncontract ERC20 {\r\n    uint public totalSupply;\r\n    function balanceOf(address _owner) constant public returns (uint balance);\r\n    function transfer(address _to, uint _value) public returns (bool success);\r\n    function transferFrom(address _from, address _to, uint _value) public returns (bool success);\r\n    function approve(address _spender, uint _value) public returns (bool success);\r\n    function allowance(address _owner, address _spender) public constant returns (uint remaining);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\n\r\n\r\n/// @title ERC Token Standard #677 Interface (https://github.com/ethereum/EIPs/issues/677)\r\ncontract ERC677 is ERC20 {\r\n    function transferAndCall(address to, uint value, bytes data) public returns (bool ok);\r\n\r\n    event TransferAndCall(address indexed from, address indexed to, uint value, bytes data);\r\n}\r\n\r\n/// @title ERC223Receiver Interface\r\n/// @dev Based on the specs form: https://github.com/ethereum/EIPs/issues/223\r\ncontract ERC223Receiver {\r\n    function tokenFallback(address _sender, uint _value, bytes _data) external returns (bool ok);\r\n}\r\n\r\n\r\n\r\n\r\n/// @title Basic ERC20 token contract implementation.\r\n/// @dev Based on OpenZeppelin's StandardToken.\r\ncontract BasicToken is ERC20 {\r\n    using SafeMath for uint256;\r\n\r\n    uint256 public totalSupply;\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n    mapping (address => uint256) balances;\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /// @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r\n    /// @param _spender address The address which will spend the funds.\r\n    /// @param _value uint256 The amount of tokens to be spent.\r\n    function approve(address _spender, uint256 _value) public returns (bool) {\r\n        // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md#approve (see NOTE)\r\n        if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) {\r\n            revert();\r\n        }\r\n\r\n        allowed[msg.sender][_spender] = _value;\r\n\r\n        Approval(msg.sender, _spender, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    /// @dev Function to check the amount of tokens that an owner allowed to a spender.\r\n    /// @param _owner address The address which owns the funds.\r\n    /// @param _spender address The address which will spend the funds.\r\n    /// @return uint256 specifying the amount of tokens still available for the spender.\r\n    function allowance(address _owner, address _spender) constant public returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n\r\n    /// @dev Gets the balance of the specified address.\r\n    /// @param _owner address The address to query the the balance of.\r\n    /// @return uint256 representing the amount owned by the passed address.\r\n    function balanceOf(address _owner) constant public returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    /// @dev Transfer token to a specified address.\r\n    /// @param _to address The address to transfer to.\r\n    /// @param _value uint256 The amount to be transferred.\r\n    function transfer(address _to, uint256 _value) public returns (bool) {\r\n        require(_to != address(0));\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n\r\n        Transfer(msg.sender, _to, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    /// @dev Transfer tokens from one address to another.\r\n    /// @param _from address The address which you want to send tokens from.\r\n    /// @param _to address The address which you want to transfer to.\r\n    /// @param _value uint256 the amount of tokens to be transferred.\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n        require(_to != address(0));\r\n        var _allowance = allowed[_from][msg.sender];\r\n\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n\r\n        allowed[_from][msg.sender] = _allowance.sub(_value);\r\n\r\n        Transfer(_from, _to, _value);\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n/// @title Standard677Token implentation, base on https://github.com/ethereum/EIPs/issues/677\r\n\r\ncontract Standard677Token is ERC677, BasicToken {\r\n\r\n  /// @dev ERC223 safe token transfer from one address to another\r\n  /// @param _to address the address which you want to transfer to.\r\n  /// @param _value uint256 the amount of tokens to be transferred.\r\n  /// @param _data bytes data that can be attached to the token transation\r\n  function transferAndCall(address _to, uint _value, bytes _data) public returns (bool) {\r\n    require(super.transfer(_to, _value)); // do a normal token transfer\r\n    TransferAndCall(msg.sender, _to, _value, _data);\r\n    //filtering if the target is a contract with bytecode inside it\r\n    if (isContract(_to)) return contractFallback(_to, _value, _data);\r\n    return true;\r\n  }\r\n\r\n  /// @dev called when transaction target is a contract\r\n  /// @param _to address the address which you want to transfer to.\r\n  /// @param _value uint256 the amount of tokens to be transferred.\r\n  /// @param _data bytes data that can be attached to the token transation\r\n  function contractFallback(address _to, uint _value, bytes _data) private returns (bool) {\r\n    ERC223Receiver receiver = ERC223Receiver(_to);\r\n    require(receiver.tokenFallback(msg.sender, _value, _data));\r\n    return true;\r\n  }\r\n\r\n  /// @dev check if the address is contract\r\n  /// assemble the given address bytecode. If bytecode exists then the _addr is a contract.\r\n  /// @param _addr address the address to check\r\n  function isContract(address _addr) private constant returns (bool is_contract) {\r\n    // retrieve the size of the code on target address, this needs assembly\r\n    uint length;\r\n    assembly { length := extcodesize(_addr) }\r\n    return length > 0;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/// @title Token holder contract.\r\ncontract TokenHolder is Ownable {\r\n    /// @dev Allow the owner to transfer out any accidentally sent ERC20 tokens.\r\n    /// @param _tokenAddress address The address of the ERC20 contract.\r\n    /// @param _amount uint256 The amount of tokens to be transferred.\r\n    function transferAnyERC20Token(address _tokenAddress, uint256 _amount) public onlyOwner returns (bool success) {\r\n        return ERC20(_tokenAddress).transfer(owner, _amount);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n/// @title Colu Local Network contract.\r\n/// @author Tal Beja.\r\ncontract ColuLocalNetwork is Ownable, Standard677Token, TokenHolder {\r\n    using SafeMath for uint256;\r\n\r\n    string public constant name = \"Colu Local Network\";\r\n    string public constant symbol = \"CLN\";\r\n\r\n    // Using same decimals value as ETH (makes ETH-CLN conversion much easier).\r\n    uint8 public constant decimals = 18;\r\n\r\n    // States whether token transfers is allowed or not.\r\n    // Used during token sale.\r\n    bool public isTransferable = false;\r\n\r\n    event TokensTransferable();\r\n\r\n    modifier transferable() {\r\n        require(msg.sender == owner || isTransferable);\r\n        _;\r\n    }\r\n\r\n    /// @dev Creates all tokens and gives them to the owner.\r\n    function ColuLocalNetwork(uint256 _totalSupply) public {\r\n        totalSupply = _totalSupply;\r\n        balances[msg.sender] = totalSupply;\r\n    }\r\n\r\n    /// @dev start transferable mode.\r\n    function makeTokensTransferable() external onlyOwner {\r\n        if (isTransferable) {\r\n            return;\r\n        }\r\n\r\n        isTransferable = true;\r\n\r\n        TokensTransferable();\r\n    }\r\n\r\n    /// @dev Same ERC20 behavior, but reverts if not transferable.\r\n    /// @param _spender address The address which will spend the funds.\r\n    /// @param _value uint256 The amount of tokens to be spent.\r\n    function approve(address _spender, uint256 _value) public transferable returns (bool) {\r\n        return super.approve(_spender, _value);\r\n    }\r\n\r\n    /// @dev Same ERC20 behavior, but reverts if not transferable.\r\n    /// @param _to address The address to transfer to.\r\n    /// @param _value uint256 The amount to be transferred.\r\n    function transfer(address _to, uint256 _value) public transferable returns (bool) {\r\n        return super.transfer(_to, _value);\r\n    }\r\n\r\n    /// @dev Same ERC20 behavior, but reverts if not transferable.\r\n    /// @param _from address The address to send tokens from.\r\n    /// @param _to address The address to transfer to.\r\n    /// @param _value uint256 the amount of tokens to be transferred.\r\n    function transferFrom(address _from, address _to, uint256 _value) public transferable returns (bool) {\r\n        return super.transferFrom(_from, _to, _value);\r\n    }\r\n\r\n    /// @dev Same ERC677 behavior, but reverts if not transferable.\r\n    /// @param _to address The address to transfer to.\r\n    /// @param _value uint256 The amount to be transferred.\r\n    /// @param _data bytes data to send to receiver if it is a contract.\r\n    function transferAndCall(address _to, uint _value, bytes _data) public transferable returns (bool success) {\r\n      return super.transferAndCall(_to, _value, _data);\r\n    }\r\n}", "OptimizationUsed": "1", "ContractName": "ColuLocalNetwork", "ByteCode": "0x6060604052600436106100d75763ffffffff60e060020a60003504166306fdde0381146100dc5780630952c50414610166578063095ea7b31461018757806318160ddd146101bd5780632121dc75146101e257806323b872dd146101f5578063313ce5671461021d5780634000aea0146102465780635348ac95146102ab57806370a08231146102be57806379ba5097146102dd5780638da5cb5b146102f057806395d89b411461031f578063a9059cbb14610332578063d091b55014610354578063dc39d06d14610367578063dd62ed3e14610389575b600080fd5b34156100e757600080fd5b6100ef6103ae565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561012b578082015183820152602001610113565b50505050905090810190601f1680156101585780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561017157600080fd5b610185600160a060020a03600435166103e5565b005b341561019257600080fd5b6101a9600160a060020a0360043516602435610478565b604051901515815260200160405180910390f35b34156101c857600080fd5b6101d06104bd565b60405190815260200160405180910390f35b34156101ed57600080fd5b6101a96104c3565b341561020057600080fd5b6101a9600160a060020a03600435811690602435166044356104d3565b341561022857600080fd5b61023061051a565b60405160ff909116815260200160405180910390f35b341561025157600080fd5b6101a960048035600160a060020a03169060248035919060649060443590810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965061051f95505050505050565b34156102b657600080fd5b61018561055e565b34156102c957600080fd5b6101d0600160a060020a03600435166105e3565b34156102e857600080fd5b6101856105fe565b34156102fb57600080fd5b61030361068b565b604051600160a060020a03909116815260200160405180910390f35b341561032a57600080fd5b6100ef61069a565b341561033d57600080fd5b6101a9600160a060020a03600435166024356106d1565b341561035f57600080fd5b61030361070f565b341561037257600080fd5b6101a9600160a060020a036004351660243561071e565b341561039457600080fd5b6101d0600160a060020a03600435811690602435166107c0565b60408051908101604052601281527f436f6c75204c6f63616c204e6574776f726b0000000000000000000000000000602082015281565b60045433600160a060020a0390811691161461040057600080fd5b600160a060020a038116151561041557600080fd5b6005805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383811691909117918290559081169033167f13a4b3bc0d5234dd3d87c9f1557d8faefa37986da62c36ba49309e2fb2c9aec460405160405180910390a350565b60045460009033600160a060020a03908116911614806104a1575060055460a060020a900460ff165b15156104ac57600080fd5b6104b683836107eb565b9392505050565b60015481565b60055460a060020a900460ff1681565b60045460009033600160a060020a03908116911614806104fc575060055460a060020a900460ff165b151561050757600080fd5b610512848484610893565b949350505050565b601281565b60045460009033600160a060020a0390811691161480610548575060055460a060020a900460ff165b151561055357600080fd5b6105128484846109bd565b60045433600160a060020a0390811691161461057957600080fd5b60055460a060020a900460ff1615610590576105e1565b6005805474ff0000000000000000000000000000000000000000191660a060020a1790557fa693ca1b20114bcad5861562c3007eb477c4926f79219f624bdbfde146fd2b6460405160405180910390a15b565b600160a060020a031660009081526003602052604090205490565b60055460009033600160a060020a0390811691161461061c57600080fd5b50600480546005805473ffffffffffffffffffffffffffffffffffffffff19808416600160a060020a03838116919091179586905591169091559081169116817f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b600454600160a060020a031681565b60408051908101604052600381527f434c4e0000000000000000000000000000000000000000000000000000000000602082015281565b60045460009033600160a060020a03908116911614806106fa575060055460a060020a900460ff165b151561070557600080fd5b6104b68383610ab2565b600554600160a060020a031681565b60045460009033600160a060020a0390811691161461073c57600080fd5b600454600160a060020a038085169163a9059cbb91168460006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b151561079f57600080fd5b6102c65a03f115156107b057600080fd5b5050506040518051949350505050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600081158015906108205750600160a060020a0333811660009081526002602090815260408083209387168352929052205415155b1561082a57600080fd5b600160a060020a03338116600081815260026020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b600080600160a060020a03841615156108ab57600080fd5b50600160a060020a038085166000818152600260209081526040808320339095168352938152838220549282526003905291909120546108f1908463ffffffff610b8816565b600160a060020a038087166000908152600360205260408082209390935590861681522054610926908463ffffffff610b9d16565b600160a060020a03851660009081526003602052604090205561094f818463ffffffff610b8816565b600160a060020a03808716600081815260026020908152604080832033861684529091529081902093909355908616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9086905190815260200160405180910390a3506001949350505050565b60006109c98484610ab2565b15156109d457600080fd5b83600160a060020a031633600160a060020a03167fce8124fd2ae9fd7904103e5a9ebe88b527b9ca0e32a32fd497845c82706542d3858560405182815260406020820181815290820183818151815260200191508051906020019080838360005b83811015610a4d578082015183820152602001610a35565b50505050905090810190601f168015610a7a5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a3610a9184610baf565b15610aa857610aa1848484610bb7565b90506104b6565b5060019392505050565b6000600160a060020a0383161515610ac957600080fd5b600160a060020a033316600090815260036020526040902054610af2908363ffffffff610b8816565b600160a060020a033381166000908152600360205260408082209390935590851681522054610b27908363ffffffff610b9d16565b600160a060020a0380851660008181526003602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a350600192915050565b600082821115610b9757600080fd5b50900390565b6000828201838110156104b657600080fd5b6000903b1190565b600083600160a060020a03811663c0ee0b8a33868686604051602001526040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610c41578082015183820152602001610c29565b50505050905090810190601f168015610c6e5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b1515610c8e57600080fd5b6102c65a03f11515610c9f57600080fd5b505050604051805190501515610cb457600080fd5b5060019493505050505600a165627a7a723058205ad7a6a2d562512bf45fa613c725473ae4db5a17be681123885fd9935ff3546f0029"}