{"Runs": "200", "SwarmSource": "bzzr://3c9402d45721ff0f25b5d5033201e7af17c16f46e08626cf1b49286f9c1816ed", "ABI": "[{\"constant\":false,\"inputs\":[],\"name\":\"Launch\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockedTokenHolder\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalizeRemainders\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"lockTokenHolder\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimOwnerSupply\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"neverPauseAgain\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"launched\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"day\",\"type\":\"uint256\"}],\"name\":\"setOwnerFreeDay\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenholder\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintingDone\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pausingMechanismLocked\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"remaindersSet\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"data\",\"type\":\"uint256[]\"}],\"name\":\"multiMint\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"remainingOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"completeMinting\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ownerTokensFreeDay\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimAuctionableTokens\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_remainingOwner\",\"type\":\"uint256\"},{\"name\":\"_remainingAuctionable\",\"type\":\"uint256\"}],\"name\":\"setRemainders\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"remainingAuctionable\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_th\",\"type\":\"address\"}],\"name\":\"setTokenHolder\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"logTokenTransfer\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.11+commit.68ef5810", "ConstructorArguments": "", "SourceCode": "pragma solidity >=0.4.4;\r\n\r\n// Copyright 2017 Alchemy Limited LLC, Do not distribute\r\n\r\ncontract Constants {\r\n    uint DECIMALS = 8;\r\n}\r\n\r\n\r\ncontract Owned {\r\n    address public owner;\r\n\r\n    modifier onlyOwner() {\r\n        if (msg.sender != owner) throw;\r\n        _;\r\n    }\r\n\r\n    address newOwner;\r\n\r\n    function changeOwner(address _newOwner) onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n\r\n    function acceptOwnership() {\r\n        if (msg.sender == newOwner) {\r\n            owner = newOwner;\r\n        }\r\n    }\r\n}\r\n\r\n//from Zeppelin\r\ncontract SafeMath {\r\n    function safeMul(uint a, uint b) internal returns (uint) {\r\n        uint c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function safeSub(uint a, uint b) internal returns (uint) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function safeAdd(uint a, uint b) internal returns (uint) {\r\n        uint c = a + b;\r\n        assert(c>=a && c>=b);\r\n        return c;\r\n    }\r\n\r\n    function assert(bool assertion) internal {\r\n        if (!assertion) throw;\r\n    }\r\n}\r\n\r\n\r\n\r\n//Copyright 2017 Alchemy Limited LLC DO not distribute\r\n//ERC20 token\r\n\r\ncontract Token is SafeMath, Owned, Constants {\r\n    uint public currentSupply;\r\n    uint public remainingOwner;\r\n    uint public remainingAuctionable;\r\n    uint public ownerTokensFreeDay;\r\n    bool public launched = false;\r\n\r\n    bool public remaindersSet = false;\r\n    bool public mintingDone = false;\r\n\r\n    address public controller;\r\n\r\n    string public name;\r\n    uint8 public decimals;\r\n    string public symbol;\r\n\r\n    modifier onlyController() {\r\n        if (msg.sender != controller) throw;\r\n        _;\r\n    }\r\n\r\n    modifier isLaunched() {\r\n        assert(launched == true);\r\n        _;\r\n    }\r\n\r\n    modifier onlyPayloadSize(uint numwords) {\r\n        assert(msg.data.length == numwords * 32 + 4);\r\n        _;\r\n    }\r\n\r\n    function Token() {\r\n        owner = msg.sender;\r\n        name = \"Monolith TKN\";\r\n        decimals = uint8(DECIMALS);\r\n        symbol = \"TKN\";\r\n    }\r\n\r\n    function Launch() onlyOwner {\r\n        launched = true;\r\n    }\r\n\r\n    function setOwnerFreeDay(uint day) onlyOwner {\r\n        if (ownerTokensFreeDay != 0) throw;\r\n\r\n        ownerTokensFreeDay = day;\r\n    }\r\n\r\n    function totalSupply() constant returns(uint) {\r\n        return currentSupply + remainingOwner;\r\n    }\r\n\r\n    function setRemainders(uint _remainingOwner, uint _remainingAuctionable) onlyOwner {\r\n        if (remaindersSet) { throw; }\r\n\r\n        remainingOwner = _remainingOwner;\r\n        remainingAuctionable = _remainingAuctionable;\r\n    }\r\n\r\n    function finalizeRemainders() onlyOwner {\r\n        remaindersSet = true;\r\n    }\r\n\r\n    function setController(address _controller) onlyOwner {\r\n        controller = _controller;\r\n    }\r\n\r\n    function claimOwnerSupply() onlyOwner {\r\n        if (now < ownerTokensFreeDay) throw;\r\n        if (remainingOwner == 0) throw;\r\n        if (!remaindersSet) throw; // must finalize remainders\r\n\r\n        balanceOf[owner] = safeAdd(balanceOf[owner], remainingOwner);\r\n        remainingOwner = 0;\r\n    }\r\n\r\n    function claimAuctionableTokens(uint amount) onlyController {\r\n        if (amount > remainingAuctionable) throw;\r\n\r\n        balanceOf[controller] = safeAdd(balanceOf[controller], amount);\r\n        currentSupply = safeAdd(currentSupply, amount);\r\n        remainingAuctionable = safeSub(remainingAuctionable,amount);\r\n\r\n        Transfer(0, controller, amount);\r\n    }\r\n\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n\r\n    function mint(address addr, uint amount) onlyOwner onlyPayloadSize(2) {\r\n        if (mintingDone) throw;\r\n\r\n        balanceOf[addr] = safeAdd(balanceOf[addr], amount);\r\n\r\n        currentSupply = safeAdd(currentSupply, amount);\r\n\r\n        Transfer(0, addr, amount);\r\n    }\r\n\r\n\r\n    uint constant D160 = 0x0010000000000000000000000000000000000000000;\r\n\r\n    // We don't use safe math in this function\r\n    // because this will be called for the owner before the contract\r\n    // is published and we need to save gas.\r\n    function multiMint(uint[] data) onlyOwner {\r\n        if (mintingDone) throw;\r\n\r\n        uint supplyAdd;\r\n        for (uint i = 0; i < data.length; i++ ) {\r\n            address addr = address( data[i] & (D160-1) );\r\n            uint amount = data[i] / D160;\r\n\r\n            balanceOf[addr] += amount;\r\n            supplyAdd += amount;\r\n            Transfer(0, addr, amount);\r\n        }\r\n        currentSupply += supplyAdd;\r\n    }\r\n\r\n    function completeMinting() onlyOwner {\r\n        mintingDone = true;\r\n    }\r\n\r\n    mapping(address => uint) public balanceOf;\r\n    mapping(address => mapping (address => uint)) public allowance;\r\n\r\n    function transfer(address _to, uint _value) isLaunched notPaused\r\n    onlyPayloadSize(2)\r\n    returns (bool success) {\r\n        if (balanceOf[msg.sender] < _value) return false;\r\n        if (_to == 0x0) return false;\r\n\r\n        balanceOf[msg.sender] = safeSub(balanceOf[msg.sender], _value);\r\n        balanceOf[_to] = safeAdd(balanceOf[_to], _value);\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint _value)  isLaunched notPaused\r\n    onlyPayloadSize(3)\r\n    returns (bool success) {\r\n        if (_to == 0x0) return false;\r\n        if (balanceOf[_from] < _value) return false;\r\n\r\n        var allowed = allowance[_from][msg.sender];\r\n        if (allowed < _value) return false;\r\n\r\n        balanceOf[_to] = safeAdd(balanceOf[_to], _value);\r\n        balanceOf[_from] = safeSub(balanceOf[_from], _value);\r\n        allowance[_from][msg.sender] = safeSub(allowed, _value);\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint _value)\r\n    onlyPayloadSize(2)\r\n    returns (bool success) {\r\n        //require user to set to zero before resetting to nonzero\r\n        if ((_value != 0) && (allowance[msg.sender][_spender] != 0)) {\r\n            return false;\r\n        }\r\n\r\n        allowance[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function increaseApproval (address _spender, uint _addedValue)\r\n    onlyPayloadSize(2)\r\n    returns (bool success) {\r\n        uint oldValue = allowance[msg.sender][_spender];\r\n        allowance[msg.sender][_spender] = safeAdd(oldValue, _addedValue);\r\n        Approval(msg.sender, _spender, allowance[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n\r\n    function decreaseApproval (address _spender, uint _subtractedValue)\r\n    onlyPayloadSize(2)\r\n    returns (bool success) {\r\n        uint oldValue = allowance[msg.sender][_spender];\r\n        if (_subtractedValue > oldValue) {\r\n            allowance[msg.sender][_spender] = 0;\r\n        } else {\r\n            allowance[msg.sender][_spender] = safeSub(oldValue, _subtractedValue);\r\n        }\r\n        Approval(msg.sender, _spender, allowance[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n\r\n    /// @notice `msg.sender` approves `_spender` to send `_amount` tokens on\r\n    ///  its behalf, and then a function is triggered in the contract that is\r\n    ///  being approved, `_spender`. This allows users to use their tokens to\r\n    ///  interact with contracts in one function call instead of two\r\n    /// @param _spender The address of the contract able to transfer the tokens\r\n    /// @param _amount The amount of tokens to be approved for transfer\r\n    /// @return True if the function call was successful\r\n    function approveAndCall(address _spender, uint256 _amount, bytes _extraData\r\n    ) returns (bool success) {\r\n        if (!approve(_spender, _amount)) throw;\r\n\r\n        ApproveAndCallFallBack(_spender).receiveApproval(\r\n            msg.sender,\r\n            _amount,\r\n            this,\r\n            _extraData\r\n        );\r\n\r\n        return true;\r\n    }\r\n\r\n    //Holds accumulated dividend tokens other than TKN\r\n    TokenHolder public tokenholder;\r\n\r\n    //once locked, can no longer upgrade tokenholder\r\n    bool public lockedTokenHolder;\r\n\r\n    function lockTokenHolder() onlyOwner {\r\n        lockedTokenHolder = true;\r\n    }\r\n\r\n    function setTokenHolder(address _th) onlyOwner {\r\n        if (lockedTokenHolder) throw;\r\n        tokenholder = TokenHolder(_th);\r\n    }\r\n\r\n    function burn(uint _amount) notPaused returns (bool result)  {\r\n        if (_amount > balanceOf[msg.sender]) return false;\r\n\r\n        balanceOf[msg.sender] = safeSub(balanceOf[msg.sender], _amount);\r\n        currentSupply  = safeSub(currentSupply, _amount);\r\n        result = tokenholder.burn(msg.sender, _amount);\r\n        if (!result) throw;\r\n        Transfer(msg.sender, 0, _amount);\r\n    }\r\n\r\n    // Peterson's Law Protection\r\n    event logTokenTransfer(address token, address to, uint amount);\r\n\r\n    function claimTokens(address _token) onlyOwner {\r\n        if (_token == 0x0) {\r\n            owner.transfer(this.balance);\r\n            return;\r\n        }\r\n\r\n        Token token = Token(_token);\r\n        uint balance = token.balanceOf(this);\r\n        token.transfer(owner, balance);\r\n        logTokenTransfer(_token, owner, balance);\r\n    }\r\n\r\n    // Pause mechanism\r\n\r\n    bool public pausingMechanismLocked = false;\r\n    bool public paused = false;\r\n\r\n    modifier notPaused() {\r\n        if (paused) throw;\r\n        _;\r\n    }\r\n\r\n    function pause() onlyOwner {\r\n        if (pausingMechanismLocked) throw;\r\n        paused = true;\r\n    }\r\n\r\n    function unpause() onlyOwner {\r\n        if (pausingMechanismLocked) throw;\r\n        paused = false;\r\n    }\r\n\r\n    function neverPauseAgain() onlyOwner {\r\n        pausingMechanismLocked = true;\r\n    }\r\n}\r\n\r\ncontract TokenHolder {\r\n    function burn(address , uint )\r\n    returns (bool result) {\r\n        return false;\r\n    }\r\n}\r\n\r\ncontract ApproveAndCallFallBack {\r\n    function receiveApproval(address from, uint256 _amount, address _token, bytes _data);\r\n}", "OptimizationUsed": "1", "ContractName": "Token", "ByteCode": "0x606060405236156101fe5763ffffffff60e060020a60003504166302ac8168811461020057806306fdde0314610212578063095ea7b3146102a257806317e139a7146102d557806318160ddd146102f95780632276774c1461031b57806323b872dd1461032d5780632bbeac9114610366578063313ce567146103785780633da1eff51461039e5780633f4ba83a146103b057806340c10f19146103c257806342966c68146103e35780635c975abb1461040a5780636348eae61461042e578063661884631461044057806370a0823114610473578063771282f6146104a157806379ba5097146104c35780638091f3bf146104d557806381e529cd146104f95780638456cb591461050e57806384eba00c146105205780638da5cb5b1461054c5780638e2ae5641461057857806390912d091461059c57806392eefe9b146105c057806395d89b41146105de57806398a9ae441461066e5780639a0e4ebb14610692578063a4f91a2e146106e7578063a6f9dae114610709578063a844545d14610727578063a9059cbb14610739578063ac4d2e951461076c578063b357a5521461078e578063c27549d9146107a3578063c6e81b07146107bb578063cae9ca51146107dd578063d73dd62314610854578063dd62ed3e14610887578063df8de3e7146108bb578063f29d2f28146108d9578063f77c4791146108f7575bfe5b341561020857fe5b610210610923565b005b341561021a57fe5b610222610950565b604080516020808252835181830152835191928392908301918501908083838215610268575b80518252602083111561026857601f199092019160209182019101610248565b505050905090810190601f1680156102945780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156102aa57fe5b6102c1600160a060020a03600435166024356109de565b604080519115158252519081900360200190f35b34156102dd57fe5b6102c1610a99565b604080519115158252519081900360200190f35b341561030157fe5b610309610aa9565b60408051918252519081900360200190f35b341561032357fe5b610210610ab4565b005b341561033557fe5b6102c1600160a060020a0360043581169060243516604435610ae3565b604080519115158252519081900360200190f35b341561036e57fe5b610210610c76565b005b341561038057fe5b610388610cba565b6040805160ff9092168252519081900360200190f35b34156103a657fe5b610210610cc3565b005b34156103b857fe5b610210610d5e565b005b34156103ca57fe5b610210600160a060020a0360043516602435610db6565b005b34156103eb57fe5b6102c1600435610e7a565b604080519115158252519081900360200190f35b341561041257fe5b6102c1610fd8565b604080519115158252519081900360200190f35b341561043657fe5b610210610fe8565b005b341561044857fe5b6102c1600160a060020a036004351660243561102d565b604080519115158252519081900360200190f35b341561047b57fe5b610309600160a060020a0360043516611135565b60408051918252519081900360200190f35b34156104a957fe5b610309611147565b60408051918252519081900360200190f35b34156104cb57fe5b61021061114d565b005b34156104dd57fe5b6102c1611197565b604080519115158252519081900360200190f35b341561050157fe5b6102106004356111a0565b005b341561051657fe5b6102106111d4565b005b341561052857fe5b610530611232565b60408051600160a060020a039092168252519081900360200190f35b341561055457fe5b610530611241565b60408051600160a060020a039092168252519081900360200190f35b341561058057fe5b6102c1611250565b604080519115158252519081900360200190f35b34156105a457fe5b6102c161125f565b604080519115158252519081900360200190f35b34156105c857fe5b610210600160a060020a036004351661126f565b005b34156105e657fe5b6102226112c1565b604080516020808252835181830152835191928392908301918501908083838215610268575b80518252602083111561026857601f199092019160209182019101610248565b505050905090810190601f1680156102945780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561067657fe5b6102c161134f565b604080519115158252519081900360200190f35b341561069a57fe5b61021060048080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284375094965061135d95505050505050565b005b34156106ef57fe5b61030961145c565b60408051918252519081900360200190f35b341561071157fe5b610210600160a060020a0360043516611462565b005b341561072f57fe5b6102106114ab565b005b341561074157fe5b6102c1600160a060020a03600435166024356114dc565b604080519115158252519081900360200190f35b341561077457fe5b610309611603565b60408051918252519081900360200190f35b341561079657fe5b610210600435611609565b005b34156107ab57fe5b6102106004356024356116ec565b005b34156107c357fe5b61030961172e565b60408051918252519081900360200190f35b34156107e557fe5b604080516020600460443581810135601f81018490048402850184019095528484526102c1948235600160a060020a031694602480359560649492939190920191819084018382808284375094965061173495505050505050565b604080519115158252519081900360200190f35b341561085c57fe5b6102c1600160a060020a0360043516602435611859565b604080519115158252519081900360200190f35b341561088f57fe5b610309600160a060020a036004358116906024351661190b565b60408051918252519081900360200190f35b34156108c357fe5b610210600160a060020a0360043516611928565b005b34156108e157fe5b610210600160a060020a0360043516611ae2565b005b34156108ff57fe5b610530611b43565b60408051600160a060020a039092168252519081900360200190f35b60005433600160a060020a0390811691161461093f5760006000fd5b6007805460ff191660011790555b5b565b6008805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109d65780601f106109ab576101008083540402835291602001916109d6565b820191906000526020600020905b8154815290600101906020018083116109b957829003601f168201915b505050505081565b600060026109ee36604414611b59565b8215801590610a215750600160a060020a033381166000908152600c602090815260408083209388168352929052205415155b15610a2f5760009150610a91565b600160a060020a033381166000818152600c6020908152604080832094891680845294825291829020879055815187815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3600191505b5b5092915050565b600d5460a060020a900460ff1681565b600454600354015b90565b60005433600160a060020a03908116911614610ad05760006000fd5b6007805461ff0019166101001790555b5b565b6007546000908190610afc9060ff161515600114611b59565b600d5460b060020a900460ff1615610b145760006000fd5b6003610b2236606414611b59565b600160a060020a0385161515610b3b5760009250610c6a565b600160a060020a0386166000908152600b602052604090205484901015610b655760009250610c6a565b600160a060020a038087166000908152600c602090815260408083203390941683529290522054915083821015610b9f5760009250610c6a565b600160a060020a0385166000908152600b6020526040902054610bc29085611b6a565b600160a060020a038087166000908152600b60205260408082209390935590881681522054610bf19085611b92565b600160a060020a0387166000908152600b6020526040902055610c148285611b92565b600160a060020a038088166000818152600c6020908152604080832033861684528252918290209490945580518881529051928916939192600080516020611bac833981519152929181900390910190a3600192505b5b505b5b509392505050565b60005433600160a060020a03908116911614610c925760006000fd5b600d805474ff0000000000000000000000000000000000000000191660a060020a1790555b5b565b60095460ff1681565b60005433600160a060020a03908116911614610cdf5760006000fd5b600654421015610cef5760006000fd5b6004541515610cfe5760006000fd5b600754610100900460ff161515610d155760006000fd5b60008054600160a060020a03168152600b6020526040902054600454610d3b9190611b6a565b60008054600160a060020a03168152600b60205260408120919091556004555b5b565b60005433600160a060020a03908116911614610d7a5760006000fd5b600d5460a860020a900460ff1615610d925760006000fd5b600d805476ff00000000000000000000000000000000000000000000191690555b5b565b60005433600160a060020a03908116911614610dd25760006000fd5b6002610de036604414611b59565b60075462010000900460ff1615610df75760006000fd5b600160a060020a0383166000908152600b6020526040902054610e1a9083611b6a565b600160a060020a0384166000908152600b6020526040902055600354610e409083611b6a565b600355604080518381529051600160a060020a03851691600091600080516020611bac8339815191529181900360200190a35b5b505b5050565b600d5460009060b060020a900460ff1615610e955760006000fd5b600160a060020a0333166000908152600b6020526040902054821115610ebd57506000610fd2565b600160a060020a0333166000908152600b6020526040902054610ee09083611b92565b600160a060020a0333166000908152600b6020526040902055600354610f069083611b92565b600355600d54604080516000602091820181905282517f9dc29fac000000000000000000000000000000000000000000000000000000008152600160a060020a0333811660048301526024820188905293519390941693639dc29fac936044808301949391928390030190829087803b1515610f7e57fe5b6102c65a03f11515610f8c57fe5b505060405151915050801515610fa25760006000fd5b604080518381529051600091600160a060020a03331691600080516020611bac8339815191529181900360200190a35b5b919050565b600d5460b060020a900460ff1681565b60005433600160a060020a039081169116146110045760006000fd5b600d805475ff000000000000000000000000000000000000000000191660a860020a1790555b5b565b600080600261103e36604414611b59565b600160a060020a033381166000908152600c602090815260408083209389168352929052205491508184111561109b57600160a060020a033381166000908152600c602090815260408083209389168352929052908120556110cc565b6110a58285611b92565b600160a060020a033381166000908152600c60209081526040808320938a16835292905220555b600160a060020a033381166000818152600c60209081526040808320948a168084529482529182902054825190815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3600192505b5b505092915050565b600b6020526000908152604090205481565b60035481565b60015433600160a060020a039081169116141561094d576001546000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039092169190911790555b5b565b60075460ff1681565b60005433600160a060020a039081169116146111bc5760006000fd5b600654156111ca5760006000fd5b60068190555b5b50565b60005433600160a060020a039081169116146111f05760006000fd5b600d5460a860020a900460ff16156112085760006000fd5b600d805476ff00000000000000000000000000000000000000000000191660b060020a1790555b5b565b600d54600160a060020a031681565b600054600160a060020a031681565b60075462010000900460ff1681565b600d5460a860020a900460ff1681565b60005433600160a060020a0390811691161461128b5760006000fd5b6007805476ffffffffffffffffffffffffffffffffffffffff00000019166301000000600160a060020a038416021790555b5b50565b600a805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109d65780601f106109ab576101008083540402835291602001916109d6565b820191906000526020600020905b8154815290600101906020018083116109b957829003601f168201915b505050505081565b600754610100900460ff1681565b6000805481908190819033600160a060020a039081169116146113805760006000fd5b60075462010000900460ff16156113975760006000fd5b600092505b845183101561144b578451600160a060020a03908690859081106113bc57fe5b9060200190602002015116915060a060020a85848151811015156113dc57fe5b906020019060200201518115156113ef57fe5b600160a060020a0384166000818152600b60209081526040808320805496909504958601909455835185815293519885019894955091939092600080516020611bac83398151915292908290030190a35b60019092019161139c565b60038054850190555b5b5050505050565b60045481565b60005433600160a060020a0390811691161461147e5760006000fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b50565b60005433600160a060020a039081169116146114c75760006000fd5b6007805462ff00001916620100001790555b5b565b6007546000906114f39060ff161515600114611b59565b600d5460b060020a900460ff161561150b5760006000fd5b600261151936604414611b59565b600160a060020a0333166000908152600b6020526040902054839010156115435760009150610a91565b600160a060020a038416151561155c5760009150610a91565b600160a060020a0333166000908152600b602052604090205461157f9084611b92565b600160a060020a033381166000908152600b602052604080822093909355908616815220546115ae9084611b6a565b600160a060020a038086166000818152600b6020908152604091829020949094558051878152905191933390931692600080516020611bac83398151915292918290030190a3600191505b5b505b5b92915050565b60065481565b60075433600160a060020a039081166301000000909204161461162c5760006000fd5b60055481111561163c5760006000fd5b60075463010000009004600160a060020a03166000908152600b60205260409020546116689082611b6a565b60075463010000009004600160a060020a03166000908152600b60205260409020556003546116979082611b6a565b6003556005546116a79082611b92565b600555600754604080518381529051600160a060020a0363010000009093049290921691600091600080516020611bac833981519152919081900360200190a35b5b50565b60005433600160a060020a039081169116146117085760006000fd5b600754610100900460ff161561171e5760006000fd5b600482905560058190555b5b5050565b60055481565b600061174084846109de565b151561174c5760006000fd5b83600160a060020a0316638f4ffcb1338530866040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184815260200183600160a060020a0316600160a060020a03168152602001806020018281038252838181518152602001915080519060200190808383600083146117f2575b8051825260208311156117f257601f1990920191602091820191016117d2565b505050905090810190601f16801561181e5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b151561183c57fe5b6102c65a03f1151561184a57fe5b505050600190505b9392505050565b600080600261186a36604414611b59565b600160a060020a033381166000908152600c602090815260408083209389168352929052205491506110a58285611b6a565b600160a060020a033381166000818152600c60209081526040808320948b168084529482529182902085905581519485529051929391927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3600192505b5b505092915050565b600c60209081526000928352604080842090915290825290205481565b60008054819033600160a060020a039081169116146119475760006000fd5b600160a060020a03831615156119925760008054604051600160a060020a0391821692309092163180156108fc0292909190818181858888f19350505050151561198d57fe5b610e73565b82915081600160a060020a03166370a08231306000604051602001526040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b15156119f557fe5b6102c65a03f11515611a0357fe5b505060408051805160008054602093840182905284517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0391821660048201526024810184905294519296508716945063a9059cbb936044808201949392918390030190829087803b1515611a7d57fe5b6102c65a03f11515611a8b57fe5b505060408051600054600160a060020a03808816835216602082015280820184905290517f977a8f1bdcf5f444d404662ea2c090d707ebcef1be61b37fe6ce74d0c6288fb892509081900360600190a15b5b505050565b60005433600160a060020a03908116911614611afe5760006000fd5b600d5460a060020a900460ff1615611b165760006000fd5b600d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b50565b60075463010000009004600160a060020a031681565b8015156111d05760006000fd5b5b50565b6000828201611b87848210801590611b825750838210155b611b59565b8091505b5092915050565b6000611ba083831115611b59565b508082035b929150505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a723058203c9402d45721ff0f25b5d5033201e7af17c16f46e08626cf1b49286f9c1816ed0029"}