{"Runs": "200", "SwarmSource": "bzzr://5820ce72a3053bfac4d9971a066816f3527be6a3c4ca7080f6caeffcdd5af8a0", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"incentFundAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PUBLIC_START_TIME\",\"outputs\":[{\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"FUTURE_DEVELOPMENT_FUND\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INCENT_FUND_NON_VESTING\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INCENT_FUND_VESTING\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundsTokensHaveBeenMinted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"mintSaleTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamFundAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SALE_FUND\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"futureDevelopmentFundAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"mintFundsTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TEAM_FUND\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleTokensHaveBeenMinted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"openLedgerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_openLedger\",\"type\":\"address\"},{\"name\":\"_futureDevelopmentFund\",\"type\":\"address\"},{\"name\":\"_incentFund\",\"type\":\"address\"},{\"name\":\"_teamFund\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.18+commit.9cf6e910", "ConstructorArguments": "000000000000000000000000f14c93540c0ba28f1806a508ccd90d02edf95e500000000000000000000000007319ab6fddf72e8e81acd790d235fce305a441d6000000000000000000000000155859d54157a2753d868e033cb61aa25cd7f9a7000000000000000000000000eca0af6b6d3e2ced813b83ec0bd8f09414e6cc65", "SourceCode": "pragma solidity ^0.4.17;\r\n\r\n\r\n\r\n/**\r\n * Math operations with safety checks\r\n */\r\nlibrary SafeMath {\r\n  function mul(uint a, uint b) internal returns (uint) {\r\n    uint c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint a, uint b) internal returns (uint) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint a, uint b) internal returns (uint) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint a, uint b) internal returns (uint) {\r\n    uint c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n\r\n  function max64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n    return a >= b ? a : b;\r\n  }\r\n\r\n  function min64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n    return a < b ? a : b;\r\n  }\r\n\r\n  function max256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    return a >= b ? a : b;\r\n  }\r\n\r\n  function min256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    return a < b ? a : b;\r\n  }\r\n\r\n  function assert(bool assertion) internal {\r\n    if (!assertion) {\r\n      throw;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20Basic {\r\n  uint public totalSupply;\r\n  function balanceOf(address who) constant returns (uint);\r\n  function transfer(address to, uint value) returns (bool);\r\n  event Transfer(address indexed from, address indexed to, uint value);\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * @title Basic token\r\n * @dev Basic version of StandardToken, with no allowances. \r\n */\r\ncontract BasicToken is ERC20Basic {\r\n  using SafeMath for uint;\r\n\r\n  mapping(address => uint) balances;\r\n\r\n  /**\r\n   * @dev Fix for the ERC20 short address attack.\r\n   */\r\n  modifier onlyPayloadSize(uint size) {\r\n     if(msg.data.length < size + 4) {\r\n       throw;\r\n     }\r\n     _;\r\n  }\r\n\r\n  /**\r\n  * @dev transfer token for a specified address\r\n  * @param _to The address to transfer to.\r\n  * @param _value The amount to be transferred.\r\n  */\r\n  function transfer(address _to, uint _value) onlyPayloadSize(2 * 32) returns (bool){\r\n    require(_to != address(0));\r\n    require(_value <= balances[msg.sender]);\r\n\r\n    balances[msg.sender] = balances[msg.sender].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    Transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n  * @dev Gets the balance of the specified address.\r\n  * @param _owner The address to query the the balance of. \r\n  * @return An uint representing the amount owned by the passed address.\r\n  */\r\n  function balanceOf(address _owner) constant returns (uint balance) {\r\n    return balances[_owner];\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) constant returns (uint);\r\n  function transferFrom(address from, address to, uint value) returns (bool);\r\n  function approve(address spender, uint value) returns (bool);\r\n  event Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * @title Standard ERC20 token\r\n *\r\n * @dev Implemantation of the basic standart token.\r\n * @dev https://github.com/ethereum/EIPs/issues/20\r\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\r\n */\r\ncontract StandardToken is BasicToken, ERC20 {\r\n\r\n  mapping (address => mapping (address => uint)) allowed;\r\n\r\n\r\n  /**\r\n   * @dev Transfer tokens from one address to another\r\n   * @param _from address The address which you want to send tokens from\r\n   * @param _to address The address which you want to transfer to\r\n   * @param _value uint the amout of tokens to be transfered\r\n   */\r\n  function transferFrom(address _from, address _to, uint _value) onlyPayloadSize(3 * 32) returns (bool) {\r\n    var _allowance = allowed[_from][msg.sender];\r\n\r\n    require(_to != address(0));\r\n    require(_value <= balances[_from]);\r\n    require(_value <= _allowance);\r\n\r\n    balances[_to] = balances[_to].add(_value);\r\n    balances[_from] = balances[_from].sub(_value);\r\n    allowed[_from][msg.sender] = _allowance.sub(_value);\r\n    Transfer(_from, _to, _value);\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Aprove the passed address to spend the specified amount of tokens on beahlf of msg.sender.\r\n   * @param _spender The address which will spend the funds.\r\n   * @param _value The amount of tokens to be spent.\r\n   */\r\n  function approve(address _spender, uint _value) returns (bool) {\r\n\r\n    // To change the approve amount you first have to reduce the addresses`\r\n    //  allowance to zero by calling `approve(_spender, 0)` if it is not\r\n    //  already 0 to mitigate the race condition described here:\r\n    //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;\r\n\r\n    allowed[msg.sender][_spender] = _value;\r\n    Approval(msg.sender, _spender, _value);\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Function to check the amount of tokens than an owner allowed to a spender.\r\n   * @param _owner address The address which owns the funds.\r\n   * @param _spender address The address which will spend the funds.\r\n   * @return A uint specifing the amount of tokens still avaible for the spender.\r\n   */\r\n  function allowance(address _owner, address _spender) constant returns (uint remaining) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @title Sola Token\r\n * @dev ERC20 Sola Token (SOL)\r\n *\r\n * Sola Tokens are divisible by 1e6 (1,000,000) base\r\n * units referred to as 'Rays'.\r\n *\r\n * Sola Tokens are displayed using 6 decimal places of precision.\r\n *\r\n * 1 SOL is equivalent to:\r\n *   1000000 == 1 * 10**6 == 1e6 == One Million Rays\r\n *\r\n */\r\n contract SolaToken is StandardToken {\r\n  //FIELDS\r\n  string public constant name = \"Sola Token\";\r\n  string public constant symbol = \"SOL\";\r\n  uint8  public constant decimals = 6;\r\n\r\n  //CONSTANTS\r\n  //SOL Token limits\r\n  uint256 public constant FUTURE_DEVELOPMENT_FUND = 55e6 * (10 ** uint256(decimals));\r\n  uint256 public constant INCENT_FUND_VESTING     = 27e6 * (10 ** uint256(decimals));\r\n  uint256 public constant INCENT_FUND_NON_VESTING = 3e6  * (10 ** uint256(decimals));\r\n  uint256 public constant TEAM_FUND               = 15e6 * (10 ** uint256(decimals));\r\n  uint256 public constant SALE_FUND               = 50e6 * (10 ** uint256(decimals));\r\n\r\n  //Start time\r\n  uint64 public constant PUBLIC_START_TIME = 1514210400; // GMT: Monday, December 25, 2017 2:00:00 PM\r\n  \r\n  //ASSIGNED IN INITIALIZATION\r\n  //Special Addresses\r\n  address public openLedgerAddress;\r\n  address public futureDevelopmentFundAddress;\r\n  address public incentFundAddress;\r\n  address public teamFundAddress;\r\n  \r\n  //booleans\r\n  bool public saleTokensHaveBeenMinted = false;\r\n  bool public fundsTokensHaveBeenMinted = false;\r\n\r\n  function SolaToken(address _openLedger, address _futureDevelopmentFund, address _incentFund, address _teamFund) {\r\n    openLedgerAddress = _openLedger;\r\n    futureDevelopmentFundAddress = _futureDevelopmentFund;\r\n    incentFundAddress = _incentFund;\r\n    teamFundAddress = _teamFund;\r\n  }\r\n\r\n  function mint(address _to, uint256 _value) private {\r\n    totalSupply = totalSupply.add(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n\r\n    Transfer(0x0, _to, _value);\r\n  }\r\n\r\n  function mintFundsTokens() public {\r\n    require(!fundsTokensHaveBeenMinted);\r\n\r\n    fundsTokensHaveBeenMinted = true;\r\n\r\n    mint(futureDevelopmentFundAddress, FUTURE_DEVELOPMENT_FUND);\r\n    mint(incentFundAddress, INCENT_FUND_VESTING + INCENT_FUND_NON_VESTING);\r\n    mint(teamFundAddress, TEAM_FUND);\r\n}\r\n\r\n  function mintSaleTokens(uint256 _value) public {\r\n    require(!saleTokensHaveBeenMinted);\r\n    require(_value <= SALE_FUND);\r\n\r\n    saleTokensHaveBeenMinted = true;\r\n\r\n    mint(openLedgerAddress, _value);\r\n  }\r\n}", "OptimizationUsed": "1", "ContractName": "SolaToken", "ByteCode": "0x6060604052600436106101325763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610137578063095ea7b3146101c157806318160ddd146101f757806318d0a7cc1461021c57806323b872dd1461024b578063297c4143146102735780632a60cf07146102a3578063313ce567146102b65780634e284af1146102df57806352efd35f146102f25780635cec4cb9146103055780636a33803b1461031857806370a08231146103305780637fdb67201461034f57806395d89b4114610362578063a207b7fa14610375578063a332853a14610388578063a67c8bc41461039b578063a9059cbb146103ae578063b4b598ce146103d0578063b661f55d146103e3578063b7eea206146103f6578063dd62ed3e14610409575b600080fd5b341561014257600080fd5b61014a61042e565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561018657808201518382015260200161016e565b50505050905090810190601f1680156101b35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101cc57600080fd5b6101e3600160a060020a0360043516602435610465565b604051901515815260200160405180910390f35b341561020257600080fd5b61020a61050d565b60405190815260200160405180910390f35b341561022757600080fd5b61022f610513565b604051600160a060020a03909116815260200160405180910390f35b341561025657600080fd5b6101e3600160a060020a0360043581169060243516604435610522565b341561027e57600080fd5b610286610693565b60405167ffffffffffffffff909116815260200160405180910390f35b34156102ae57600080fd5b61020a61069b565b34156102c157600080fd5b6102c96106a5565b60405160ff909116815260200160405180910390f35b34156102ea57600080fd5b61020a6106aa565b34156102fd57600080fd5b61020a6106b4565b341561031057600080fd5b6101e36106be565b341561032357600080fd5b61032e6004356106e0565b005b341561033b57600080fd5b61020a600160a060020a0360043516610769565b341561035a57600080fd5b61022f610784565b341561036d57600080fd5b61014a610793565b341561038057600080fd5b61020a6107ca565b341561039357600080fd5b61022f6107d4565b34156103a657600080fd5b61032e6107e3565b34156103b957600080fd5b6101e3600160a060020a0360043516602435610899565b34156103db57600080fd5b61020a6109a5565b34156103ee57600080fd5b6101e36109af565b341561040157600080fd5b61022f6109d0565b341561041457600080fd5b61020a600160a060020a03600435811690602435166109df565b60408051908101604052600a81527f536f6c6120546f6b656e00000000000000000000000000000000000000000000602082015281565b6000811580159061049a5750600160a060020a0333811660009081526002602090815260408083209387168352929052205415155b156104a457600080fd5b600160a060020a03338116600081815260026020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b60005481565b600554600160a060020a031681565b6000806060606436101561053557600080fd5b600160a060020a038087166000908152600260209081526040808320338516845290915290205492508516151561056b57600080fd5b600160a060020a03861660009081526001602052604090205484111561059057600080fd5b8184111561059d57600080fd5b600160a060020a0385166000908152600160205260409020546105c6908563ffffffff610a0a16565b600160a060020a0380871660009081526001602052604080822093909355908816815220546105fb908563ffffffff610a2216565b600160a060020a038716600090815260016020526040902055610624828563ffffffff610a2216565b600160a060020a03808816600081815260026020908152604080832033861684529091529081902093909355908716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9087905190815260200160405180910390a350600195945050505050565b635a41046081565b653205af76700081565b600681565b6502ba7def300081565b65188e6d68b00081565b6006547501000000000000000000000000000000000000000000900460ff1681565b60065474010000000000000000000000000000000000000000900460ff161561070857600080fd5b652d79883d200081111561071b57600080fd5b6006805474ff000000000000000000000000000000000000000019167401000000000000000000000000000000000000000017905560035461076690600160a060020a031682610a36565b50565b600160a060020a031660009081526001602052604090205490565b600654600160a060020a031681565b60408051908101604052600381527f534f4c0000000000000000000000000000000000000000000000000000000000602082015281565b652d79883d200081565b600454600160a060020a031681565b6006547501000000000000000000000000000000000000000000900460ff161561080c57600080fd5b6006805475ff0000000000000000000000000000000000000000001916750100000000000000000000000000000000000000000017905560045461085f90600160a060020a0316653205af767000610a36565b60055461087b90600160a060020a0316651b48eb57e000610a36565b60065461089790600160a060020a0316650da475abf000610a36565b565b6000604060443610156108ab57600080fd5b600160a060020a03841615156108c057600080fd5b600160a060020a0333166000908152600160205260409020548311156108e557600080fd5b600160a060020a03331660009081526001602052604090205461090e908463ffffffff610a2216565b600160a060020a033381166000908152600160205260408082209390935590861681522054610943908463ffffffff610a0a16565b600160a060020a0380861660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9086905190815260200160405180910390a35060019392505050565b650da475abf00081565b60065474010000000000000000000000000000000000000000900460ff1681565b600354600160a060020a031681565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6000828201610a1b84821015610aca565b9392505050565b6000610a3083831115610aca565b50900390565b600054610a49908263ffffffff610a0a16565b6000908155600160a060020a038316815260016020526040902054610a74908263ffffffff610a0a16565b600160a060020a0383166000818152600160205260408082209390935590917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9084905190815260200160405180910390a35050565b80151561076657600080fd00a165627a7a723058205820ce72a3053bfac4d9971a066816f3527be6a3c4ca7080f6caeffcdd5af8a00029"}