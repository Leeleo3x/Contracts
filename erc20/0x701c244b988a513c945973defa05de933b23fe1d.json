{"Runs": "200", "SwarmSource": "bzzr://1ebf78c948e9b064875413e10729508a8cb3f4fc7b2decd423f81a4a0a420b80", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKENS_TOTAL\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokensPerKEther\",\"type\":\"uint256\"}],\"name\":\"setTokensPerKEther\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockedTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"participant\",\"type\":\"address\"}],\"name\":\"kycVerify\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOfLocked1Y\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"finalised\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRIBUTIONS_MIN\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DECIMALS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"START_DATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"participant\",\"type\":\"address\"},{\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"addPrecommitment\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKENS_SOFT_CAP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"END_DATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupplyLocked\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupplyLocked2Y\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKENS_HARD_CAP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DECIMALSFACTOR\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CONTRIBUTIONS_MAX\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"LOCKED_2Y_DATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalise\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensPerKEther\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"kycRequired\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOfLocked2Y\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupplyLocked1Y\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupplyUnlocked\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"setWallet\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOfLocked\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"LOCKED_1Y_DATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"participant\",\"type\":\"address\"}],\"name\":\"proxyPayment\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SYMBOL\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"WalletUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"tokensPerKEther\",\"type\":\"uint256\"}],\"name\":\"TokensPerKEtherUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"ethers\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newEtherBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newTotalSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"tokensPerKEther\",\"type\":\"uint256\"}],\"name\":\"TokensBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"participant\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"PrecommitmentAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"participant\",\"type\":\"address\"}],\"name\":\"KycVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.11+commit.68ef5810", "ConstructorArguments": "0000000000000000000000002b3b67c6dffc2bcdda2315491eac9bbe868fbcdd", "SourceCode": "pragma solidity ^0.4.11;\r\n\r\n// ----------------------------------------------------------------------------\r\n// OAX 'openANX Token' crowdfunding contract\r\n//\r\n// Refer to http://openanx.org/ for further information.\r\n//\r\n// Enjoy. (c) openANX and BokkyPooBah / Bok Consulting Pty Ltd 2017. \r\n// The MIT Licence.\r\n// ----------------------------------------------------------------------------\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// OAX 'openANX Token' crowdfunding contract - ERC20 Token Interface\r\n//\r\n// Refer to http://openanx.org/ for further information.\r\n//\r\n// Enjoy. (c) openANX and BokkyPooBah / Bok Consulting Pty Ltd 2017. \r\n// The MIT Licence.\r\n// ----------------------------------------------------------------------------\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC Token Standard #20 Interface\r\n// https://github.com/ethereum/EIPs/issues/20\r\n// ----------------------------------------------------------------------------\r\ncontract ERC20Interface {\r\n    uint public totalSupply;\r\n    function balanceOf(address _owner) constant returns (uint balance);\r\n    function transfer(address _to, uint _value) returns (bool success);\r\n    function transferFrom(address _from, address _to, uint _value) \r\n        returns (bool success);\r\n    function approve(address _spender, uint _value) returns (bool success);\r\n    function allowance(address _owner, address _spender) constant \r\n        returns (uint remaining);\r\n    event Transfer(address indexed _from, address indexed _to, uint _value);\r\n    event Approval(address indexed _owner, address indexed _spender, \r\n        uint _value);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// OAX 'openANX Token' crowdfunding contract - Owned contracts\r\n//\r\n// Refer to http://openanx.org/ for further information.\r\n//\r\n// Enjoy. (c) openANX and BokkyPooBah / Bok Consulting Pty Ltd 2017. \r\n// The MIT Licence.\r\n// ----------------------------------------------------------------------------\r\n\r\n// ----------------------------------------------------------------------------\r\n// Owned contract\r\n// ----------------------------------------------------------------------------\r\ncontract Owned {\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Current owner, and proposed new owner\r\n    // ------------------------------------------------------------------------\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Constructor - assign creator as the owner\r\n    // ------------------------------------------------------------------------\r\n    function Owned() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Modifier to mark that a function can only be executed by the owner\r\n    // ------------------------------------------------------------------------\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Owner can initiate transfer of contract to a new owner\r\n    // ------------------------------------------------------------------------\r\n    function transferOwnership(address _newOwner) onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n\r\n \r\n    // ------------------------------------------------------------------------\r\n    // New owner has to accept transfer of contract\r\n    // ------------------------------------------------------------------------\r\n    function acceptOwnership() {\r\n        require(msg.sender == newOwner);\r\n        OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// OAX 'openANX Token' crowdfunding contract\r\n//\r\n// Refer to http://openanx.org/ for further information.\r\n//\r\n// Enjoy. (c) openANX and BokkyPooBah / Bok Consulting Pty Ltd 2017. \r\n// The MIT Licence.\r\n// ----------------------------------------------------------------------------\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Safe maths, borrowed from OpenZeppelin\r\n// ----------------------------------------------------------------------------\r\nlibrary SafeMath {\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Add a number to another number, checking for overflows\r\n    // ------------------------------------------------------------------------\r\n    function add(uint a, uint b) internal returns (uint) {\r\n        uint c = a + b;\r\n        assert(c >= a && c >= b);\r\n        return c;\r\n    }\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Subtract a number from another number, checking for underflows\r\n    // ------------------------------------------------------------------------\r\n    function sub(uint a, uint b) internal returns (uint) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// OAX 'openANX Token' crowdfunding contract - Configuration\r\n//\r\n// Refer to http://openanx.org/ for further information.\r\n//\r\n// Enjoy. (c) openANX and BokkyPooBah / Bok Consulting Pty Ltd 2017. \r\n// The MIT Licence.\r\n// ----------------------------------------------------------------------------\r\n\r\n// ----------------------------------------------------------------------------\r\n// openANX crowdsale token smart contract - configuration parameters\r\n// ----------------------------------------------------------------------------\r\ncontract OpenANXTokenConfig {\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Token symbol(), name() and decimals()\r\n    // ------------------------------------------------------------------------\r\n    string public constant SYMBOL = \"OAX\";\r\n    string public constant NAME = \"openANX Token\";\r\n    uint8 public constant DECIMALS = 18;\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Decimal factor for multiplications from OAX unit to OAX natural unit\r\n    // ------------------------------------------------------------------------\r\n    uint public constant DECIMALSFACTOR = 10**uint(DECIMALS);\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Tranche 1 soft cap and hard cap, and total tokens\r\n    // ------------------------------------------------------------------------\r\n    uint public constant TOKENS_SOFT_CAP = 13000000 * DECIMALSFACTOR;\r\n    uint public constant TOKENS_HARD_CAP = 30000000 * DECIMALSFACTOR;\r\n    uint public constant TOKENS_TOTAL = 100000000 * DECIMALSFACTOR;\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Tranche 1 crowdsale start date and end date\r\n    // Do not use the `now` function here\r\n    // Start - Thursday, 22-Jun-17 13:00:00 UTC / 1pm GMT 22 June 2017\r\n    // End - Saturday, 22-Jul-17 13:00:00 UTC / 1pm GMT 22 July 2017 \r\n    // ------------------------------------------------------------------------\r\n    uint public constant START_DATE = 1498136400;\r\n    uint public constant END_DATE = 1500728400;\r\n\r\n    // ------------------------------------------------------------------------\r\n    // 1 year and 2 year dates for locked tokens\r\n    // Do not use the `now` function here \r\n    // ------------------------------------------------------------------------\r\n    uint public constant LOCKED_1Y_DATE = START_DATE + 365 days;\r\n    uint public constant LOCKED_2Y_DATE = START_DATE + 2 * 365 days;\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Individual transaction contribution min and max amounts\r\n    // Set to 0 to switch off, or `x ether`\r\n    // ------------------------------------------------------------------------\r\n    uint public CONTRIBUTIONS_MIN = 0 ether;\r\n    uint public CONTRIBUTIONS_MAX = 0 ether;\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// OAX 'openANX Token' crowdfunding contract - locked tokens\r\n//\r\n// Refer to http://openanx.org/ for further information.\r\n//\r\n// Enjoy. (c) openANX and BokkyPooBah / Bok Consulting Pty Ltd 2017. \r\n// The MIT Licence.\r\n// ----------------------------------------------------------------------------\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// Contract that holds the 1Y and 2Y locked token information\r\n// ----------------------------------------------------------------------------\r\ncontract LockedTokens is OpenANXTokenConfig {\r\n    using SafeMath for uint;\r\n\r\n    // ------------------------------------------------------------------------\r\n    // 1y and 2y locked totals, not including unsold tranche1 and all tranche2\r\n    // tokens\r\n    // ------------------------------------------------------------------------\r\n    uint public constant TOKENS_LOCKED_1Y_TOTAL = 14000000 * DECIMALSFACTOR;\r\n    uint public constant TOKENS_LOCKED_2Y_TOTAL = 26000000 * DECIMALSFACTOR;\r\n    \r\n    // ------------------------------------------------------------------------\r\n    // Tokens locked for 1 year for sale 2 in the following account\r\n    // ------------------------------------------------------------------------\r\n    address public TRANCHE2_ACCOUNT = 0x813703Eb676f3B6C76dA75cBa0cbC49DdbCA7B37;\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Current totalSupply of 1y and 2y locked tokens\r\n    // ------------------------------------------------------------------------\r\n    uint public totalSupplyLocked1Y;\r\n    uint public totalSupplyLocked2Y;\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Locked tokens mapping\r\n    // ------------------------------------------------------------------------\r\n    mapping (address => uint) public balancesLocked1Y;\r\n    mapping (address => uint) public balancesLocked2Y;\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Address of openANX crowdsale token contract\r\n    // ------------------------------------------------------------------------\r\n    ERC20Interface public tokenContract;\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Constructor - called by crowdsale token contract\r\n    // ------------------------------------------------------------------------\r\n    function LockedTokens(address _tokenContract) {\r\n        tokenContract = ERC20Interface(_tokenContract);\r\n\r\n        // --- 1y locked tokens ---\r\n\r\n        // Confirm 1Y totals        \r\n        add1Y(0x4beE088efDBCC610EEEa101ded7204150AF1C8b9,1000000 * DECIMALSFACTOR);\r\n        add1Y(0x839551201f866907Eb5017bE79cEB48aDa58650c,925000 * DECIMALSFACTOR);\r\n        add1Y(0xa92d4Cd3412862386c234Be572Fe4A8FA4BB09c6,925000 * DECIMALSFACTOR);\r\n        add1Y(0xECf2B5fce33007E5669D63de39a4c663e56958dD,925000 * DECIMALSFACTOR);\r\n        add1Y(0xD6B7695bc74E2C950eb953316359Eab283C5Bda8,925000 * DECIMALSFACTOR);\r\n        add1Y(0xBE3463Eae26398D55a7118683079264BcF3ab24B,150000 * DECIMALSFACTOR);\r\n        add1Y(0xf47428Fb9A61c9f3312cB035AEE049FBa76ba62a,150000 * DECIMALSFACTOR);\r\n        add1Y(0xfCcc77165D822Ef9004714d829bDC267C743658a,50000 * DECIMALSFACTOR);\r\n        add1Y(0xaf8df2aCAec3d5d92dE42a6c19d7706A4F3E8D8b,50000 * DECIMALSFACTOR);\r\n        add1Y(0x22a6f9693856374BF2922cd837d07F6670E7FA4d,250000 * DECIMALSFACTOR);\r\n        add1Y(0x3F720Ca8FfF598F00a51DE32A8Cb58Ca73f22aDe,50000 * DECIMALSFACTOR);\r\n        add1Y(0xBd0D1954B301E414F0b5D0827A69EC5dD559e50B,50000 * DECIMALSFACTOR);\r\n        add1Y(0x2ad6B011FEcDE830c9cc4dc0d0b77F055D6b5990,50000 * DECIMALSFACTOR);\r\n        add1Y(0x0c5cD0E971cA18a0F0E0d581f4B93FaD31D608B0,2000085 * DECIMALSFACTOR);\r\n        add1Y(0xFaaDC4d80Eaf430Ab604337CB67d77eC763D3e23,200248 * DECIMALSFACTOR);\r\n        add1Y(0xDAef46f89c264182Cd87Ce93B620B63c7AfB14f7,1616920 * DECIMALSFACTOR);\r\n        add1Y(0x19cc59C30cE54706633dC29EdEbAE1efF1757b25,224980 * DECIMALSFACTOR);\r\n        add1Y(0xa130fE5D399104CA5AF168fbbBBe19F95d739741,745918 * DECIMALSFACTOR);\r\n        add1Y(0xC0cD1bf6F2939095a56B0DFa085Ba2886b84E7d1,745918 * DECIMALSFACTOR);\r\n        add1Y(0xf2C26e79eD264B0E3e5A5DFb1Dd91EA61f512C6e,745918 * DECIMALSFACTOR);\r\n        add1Y(0x5F876a8A5F1B66fbf3D0D119075b62aF4386e319,745918 * DECIMALSFACTOR);\r\n        add1Y(0xb8E046570800Dd76720aF6d42d3cCae451F54f15,745920 * DECIMALSFACTOR);\r\n        add1Y(0xA524fa65Aac4647fa7bA2c20D22F64450c351bBd,714286 * DECIMALSFACTOR);\r\n        add1Y(0x27209b276C15a936BCE08D7D70f0c97aeb3CE8c3,13889 * DECIMALSFACTOR);\r\n\r\n        assert(totalSupplyLocked1Y == TOKENS_LOCKED_1Y_TOTAL);\r\n\r\n        // --- 2y locked tokens ---\r\n        add2Y(0x4beE088efDBCC610EEEa101ded7204150AF1C8b9,1000000 * DECIMALSFACTOR);\r\n        add2Y(0x839551201f866907Eb5017bE79cEB48aDa58650c,925000 * DECIMALSFACTOR);\r\n        add2Y(0xa92d4Cd3412862386c234Be572Fe4A8FA4BB09c6,925000 * DECIMALSFACTOR);\r\n        add2Y(0xECf2B5fce33007E5669D63de39a4c663e56958dD,925000 * DECIMALSFACTOR);\r\n        add2Y(0xD6B7695bc74E2C950eb953316359Eab283C5Bda8,925000 * DECIMALSFACTOR);\r\n        add2Y(0xBE3463Eae26398D55a7118683079264BcF3ab24B,150000 * DECIMALSFACTOR);\r\n        add2Y(0xf47428Fb9A61c9f3312cB035AEE049FBa76ba62a,150000 * DECIMALSFACTOR);\r\n        add2Y(0xfCcc77165D822Ef9004714d829bDC267C743658a,50000 * DECIMALSFACTOR);\r\n        add2Y(0xDAef46f89c264182Cd87Ce93B620B63c7AfB14f7,500000 * DECIMALSFACTOR);\r\n        add2Y(0xaf8df2aCAec3d5d92dE42a6c19d7706A4F3E8D8b,50000 * DECIMALSFACTOR);\r\n        add2Y(0x22a6f9693856374BF2922cd837d07F6670E7FA4d,250000 * DECIMALSFACTOR);\r\n        add2Y(0x3F720Ca8FfF598F00a51DE32A8Cb58Ca73f22aDe,50000 * DECIMALSFACTOR);\r\n        add2Y(0xBd0D1954B301E414F0b5D0827A69EC5dD559e50B,50000 * DECIMALSFACTOR);\r\n        add2Y(0x2ad6B011FEcDE830c9cc4dc0d0b77F055D6b5990,50000 * DECIMALSFACTOR);\r\n\r\n        //treasury\r\n        add2Y(0x990a2D172398007fcbd5078D84696BdD8cCDf7b2,20000000 * DECIMALSFACTOR);\r\n\r\n        assert(totalSupplyLocked2Y == TOKENS_LOCKED_2Y_TOTAL);\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Add remaining tokens to locked 1y balances\r\n    // ------------------------------------------------------------------------\r\n    function addRemainingTokens() {\r\n        // Only the crowdsale contract can call this function\r\n        require(msg.sender == address(tokenContract));\r\n        // Total tokens to be created\r\n        uint remainingTokens = TOKENS_TOTAL;\r\n        // Minus precommitments and public crowdsale tokens\r\n        remainingTokens = remainingTokens.sub(tokenContract.totalSupply());\r\n        // Minus 1y locked tokens\r\n        remainingTokens = remainingTokens.sub(totalSupplyLocked1Y);\r\n        // Minus 2y locked tokens\r\n        remainingTokens = remainingTokens.sub(totalSupplyLocked2Y);\r\n        // Unsold tranche1 and tranche2 tokens to be locked for 1y \r\n        add1Y(TRANCHE2_ACCOUNT, remainingTokens);\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Add to 1y locked balances and totalSupply\r\n    // ------------------------------------------------------------------------\r\n    function add1Y(address account, uint value) private {\r\n        balancesLocked1Y[account] = balancesLocked1Y[account].add(value);\r\n        totalSupplyLocked1Y = totalSupplyLocked1Y.add(value);\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Add to 2y locked balances and totalSupply\r\n    // ------------------------------------------------------------------------\r\n    function add2Y(address account, uint value) private {\r\n        balancesLocked2Y[account] = balancesLocked2Y[account].add(value);\r\n        totalSupplyLocked2Y = totalSupplyLocked2Y.add(value);\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // 1y locked balances for an account\r\n    // ------------------------------------------------------------------------\r\n    function balanceOfLocked1Y(address account) constant returns (uint balance) {\r\n        return balancesLocked1Y[account];\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // 2y locked balances for an account\r\n    // ------------------------------------------------------------------------\r\n    function balanceOfLocked2Y(address account) constant returns (uint balance) {\r\n        return balancesLocked2Y[account];\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // 1y and 2y locked balances for an account\r\n    // ------------------------------------------------------------------------\r\n    function balanceOfLocked(address account) constant returns (uint balance) {\r\n        return balancesLocked1Y[account].add(balancesLocked2Y[account]);\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // 1y and 2y locked total supply\r\n    // ------------------------------------------------------------------------\r\n    function totalSupplyLocked() constant returns (uint) {\r\n        return totalSupplyLocked1Y + totalSupplyLocked2Y;\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // An account can unlock their 1y locked tokens 1y after token launch date\r\n    // ------------------------------------------------------------------------\r\n    function unlock1Y() {\r\n        require(now >= LOCKED_1Y_DATE);\r\n        uint amount = balancesLocked1Y[msg.sender];\r\n        require(amount > 0);\r\n        balancesLocked1Y[msg.sender] = 0;\r\n        totalSupplyLocked1Y = totalSupplyLocked1Y.sub(amount);\r\n        if (!tokenContract.transfer(msg.sender, amount)) throw;\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // An account can unlock their 2y locked tokens 2y after token launch date\r\n    // ------------------------------------------------------------------------\r\n    function unlock2Y() {\r\n        require(now >= LOCKED_2Y_DATE);\r\n        uint amount = balancesLocked2Y[msg.sender];\r\n        require(amount > 0);\r\n        balancesLocked2Y[msg.sender] = 0;\r\n        totalSupplyLocked2Y = totalSupplyLocked2Y.sub(amount);\r\n        if (!tokenContract.transfer(msg.sender, amount)) throw;\r\n    }\r\n}\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// ERC20 Token, with the addition of symbol, name and decimals\r\n// ----------------------------------------------------------------------------\r\ncontract ERC20Token is ERC20Interface, Owned {\r\n    using SafeMath for uint;\r\n\r\n    // ------------------------------------------------------------------------\r\n    // symbol(), name() and decimals()\r\n    // ------------------------------------------------------------------------\r\n    string public symbol;\r\n    string public name;\r\n    uint8 public decimals;\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Balances for each account\r\n    // ------------------------------------------------------------------------\r\n    mapping(address => uint) balances;\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Owner of account approves the transfer of an amount to another account\r\n    // ------------------------------------------------------------------------\r\n    mapping(address => mapping (address => uint)) allowed;\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Constructor\r\n    // ------------------------------------------------------------------------\r\n    function ERC20Token(\r\n        string _symbol, \r\n        string _name, \r\n        uint8 _decimals, \r\n        uint _totalSupply\r\n    ) Owned() {\r\n        symbol = _symbol;\r\n        name = _name;\r\n        decimals = _decimals;\r\n        totalSupply = _totalSupply;\r\n        balances[owner] = _totalSupply;\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Get the account balance of another account with address _owner\r\n    // ------------------------------------------------------------------------\r\n    function balanceOf(address _owner) constant returns (uint balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Transfer the balance from owner's account to another account\r\n    // ------------------------------------------------------------------------\r\n    function transfer(address _to, uint _amount) returns (bool success) {\r\n        if (balances[msg.sender] >= _amount             // User has balance\r\n            && _amount > 0                              // Non-zero transfer\r\n            && balances[_to] + _amount > balances[_to]  // Overflow check\r\n        ) {\r\n            balances[msg.sender] = balances[msg.sender].sub(_amount);\r\n            balances[_to] = balances[_to].add(_amount);\r\n            Transfer(msg.sender, _to, _amount);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Allow _spender to withdraw from your account, multiple times, up to the\r\n    // _value amount. If this function is called again it overwrites the\r\n    // current allowance with _value.\r\n    // ------------------------------------------------------------------------\r\n    function approve(\r\n        address _spender,\r\n        uint _amount\r\n    ) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _amount;\r\n        Approval(msg.sender, _spender, _amount);\r\n        return true;\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Spender of tokens transfer an amount of tokens from the token owner's\r\n    // balance to another account. The owner of the tokens must already\r\n    // have approve(...)-d this transfer\r\n    // ------------------------------------------------------------------------\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint _amount\r\n    ) returns (bool success) {\r\n        if (balances[_from] >= _amount                  // From a/c has balance\r\n            && allowed[_from][msg.sender] >= _amount    // Transfer approved\r\n            && _amount > 0                              // Non-zero transfer\r\n            && balances[_to] + _amount > balances[_to]  // Overflow check\r\n        ) {\r\n            balances[_from] = balances[_from].sub(_amount);\r\n            allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\r\n            balances[_to] = balances[_to].add(_amount);\r\n            Transfer(_from, _to, _amount);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Returns the amount of tokens approved by the owner that can be\r\n    // transferred to the spender's account\r\n    // ------------------------------------------------------------------------\r\n    function allowance(\r\n        address _owner, \r\n        address _spender\r\n    ) constant returns (uint remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n// openANX crowdsale token smart contract\r\n// ----------------------------------------------------------------------------\r\ncontract OpenANXToken is ERC20Token, OpenANXTokenConfig {\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Has the crowdsale been finalised?\r\n    // ------------------------------------------------------------------------\r\n    bool public finalised = false;\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Number of tokens per 1,000 ETH\r\n    // This can be adjusted as the ETH/USD rate changes\r\n    //\r\n    // Indicative rate of ETH per token of 0.00290923 at 8 June 2017\r\n    // \r\n    // This is the same as 1 / 0.00290923 = 343.733565238912015 OAX per ETH\r\n    //\r\n    // tokensPerEther  = 343.733565238912015\r\n    // tokensPerKEther = 343,733.565238912015\r\n    // tokensPerKEther = 343,734 rounded to an uint, six significant figures\r\n    // ------------------------------------------------------------------------\r\n    uint public tokensPerKEther = 343734;\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Locked Tokens - holds the 1y and 2y locked tokens information\r\n    // ------------------------------------------------------------------------\r\n    LockedTokens public lockedTokens;\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Wallet receiving the raised funds \r\n    // ------------------------------------------------------------------------\r\n    address public wallet;\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Crowdsale participant's accounts need to be KYC verified KYC before\r\n    // the participant can move their tokens\r\n    // ------------------------------------------------------------------------\r\n    mapping(address => bool) public kycRequired;\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Constructor\r\n    // ------------------------------------------------------------------------\r\n    function OpenANXToken(address _wallet) \r\n        ERC20Token(SYMBOL, NAME, DECIMALS, 0)\r\n    {\r\n        wallet = _wallet;\r\n        lockedTokens = new LockedTokens(this);\r\n        require(address(lockedTokens) != 0x0);\r\n    }\r\n\r\n    // ------------------------------------------------------------------------\r\n    // openANX can change the crowdsale wallet address\r\n    // Can be set at any time before or during the crowdsale\r\n    // Not relevant after the crowdsale is finalised as no more contributions\r\n    // are accepted\r\n    // ------------------------------------------------------------------------\r\n    function setWallet(address _wallet) onlyOwner {\r\n        wallet = _wallet;\r\n        WalletUpdated(wallet);\r\n    }\r\n    event WalletUpdated(address newWallet);\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // openANX can set number of tokens per 1,000 ETH\r\n    // Can only be set before the start of the crowdsale\r\n    // ------------------------------------------------------------------------\r\n    function setTokensPerKEther(uint _tokensPerKEther) onlyOwner {\r\n        require(now < START_DATE);\r\n        require(_tokensPerKEther > 0);\r\n        tokensPerKEther = _tokensPerKEther;\r\n        TokensPerKEtherUpdated(tokensPerKEther);\r\n    }\r\n    event TokensPerKEtherUpdated(uint tokensPerKEther);\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Accept ethers to buy tokens during the crowdsale\r\n    // ------------------------------------------------------------------------\r\n    function () payable {\r\n        proxyPayment(msg.sender);\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Accept ethers from one account for tokens to be created for another\r\n    // account. Can be used by exchanges to purchase tokens on behalf of \r\n    // it's user\r\n    // ------------------------------------------------------------------------\r\n    function proxyPayment(address participant) payable {\r\n        // No contributions after the crowdsale is finalised\r\n        require(!finalised);\r\n\r\n        // No contributions before the start of the crowdsale\r\n        require(now >= START_DATE);\r\n        // No contributions after the end of the crowdsale\r\n        require(now <= END_DATE);\r\n\r\n        // No contributions below the minimum (can be 0 ETH)\r\n        require(msg.value >= CONTRIBUTIONS_MIN);\r\n        // No contributions above a maximum (if maximum is set to non-0)\r\n        require(CONTRIBUTIONS_MAX == 0 || msg.value < CONTRIBUTIONS_MAX);\r\n\r\n        // Calculate number of tokens for contributed ETH\r\n        // `18` is the ETH decimals\r\n        // `- decimals` is the token decimals\r\n        // `+ 3` for the tokens per 1,000 ETH factor\r\n        uint tokens = msg.value * tokensPerKEther / 10**uint(18 - decimals + 3);\r\n\r\n        // Check if the hard cap will be exceeded\r\n        require(totalSupply + tokens <= TOKENS_HARD_CAP);\r\n\r\n        // Add tokens purchased to account's balance and total supply\r\n        balances[participant] = balances[participant].add(tokens);\r\n        totalSupply = totalSupply.add(tokens);\r\n\r\n        // Log the tokens purchased \r\n        Transfer(0x0, participant, tokens);\r\n        TokensBought(participant, msg.value, this.balance, tokens,\r\n             totalSupply, tokensPerKEther);\r\n\r\n        // KYC verification required before participant can transfer the tokens\r\n        kycRequired[participant] = true;\r\n\r\n        // Transfer the contributed ethers to the crowdsale wallet\r\n        if (!wallet.send(msg.value)) throw;\r\n    }\r\n    event TokensBought(address indexed buyer, uint ethers, \r\n        uint newEtherBalance, uint tokens, uint newTotalSupply, \r\n        uint tokensPerKEther);\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // openANX to finalise the crowdsale - to adding the locked tokens to \r\n    // this contract and the total supply\r\n    // ------------------------------------------------------------------------\r\n    function finalise() onlyOwner {\r\n        // Can only finalise if raised > soft cap or after the end date\r\n        require(totalSupply >= TOKENS_SOFT_CAP || now > END_DATE);\r\n\r\n        // Can only finalise once\r\n        require(!finalised);\r\n\r\n        // Calculate and add remaining tokens to locked balances\r\n        lockedTokens.addRemainingTokens();\r\n\r\n        // Allocate locked and premined tokens\r\n        balances[address(lockedTokens)] = balances[address(lockedTokens)].\r\n            add(lockedTokens.totalSupplyLocked());\r\n        totalSupply = totalSupply.add(lockedTokens.totalSupplyLocked());\r\n\r\n        // Can only finalise once\r\n        finalised = true;\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // openANX to add precommitment funding token balance before the crowdsale\r\n    // commences\r\n    // ------------------------------------------------------------------------\r\n    function addPrecommitment(address participant, uint balance) onlyOwner {\r\n        require(now < START_DATE);\r\n        require(balance > 0);\r\n        balances[participant] = balances[participant].add(balance);\r\n        totalSupply = totalSupply.add(balance);\r\n        Transfer(0x0, participant, balance);\r\n    }\r\n    event PrecommitmentAdded(address indexed participant, uint balance);\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Transfer the balance from owner's account to another account, with KYC\r\n    // verification check for the crowdsale participant's first transfer\r\n    // ------------------------------------------------------------------------\r\n    function transfer(address _to, uint _amount) returns (bool success) {\r\n        // Cannot transfer before crowdsale ends\r\n        require(finalised);\r\n        // Cannot transfer if KYC verification is required\r\n        require(!kycRequired[msg.sender]);\r\n        // Standard transfer\r\n        return super.transfer(_to, _amount);\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Spender of tokens transfer an amount of tokens from the token owner's\r\n    // balance to another account, with KYC verification check for the\r\n    // crowdsale participant's first transfer\r\n    // ------------------------------------------------------------------------\r\n    function transferFrom(address _from, address _to, uint _amount) \r\n        returns (bool success)\r\n    {\r\n        // Cannot transfer before crowdsale ends\r\n        require(finalised);\r\n        // Cannot transfer if KYC verification is required\r\n        require(!kycRequired[_from]);\r\n        // Standard transferFrom\r\n        return super.transferFrom(_from, _to, _amount);\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // openANX to KYC verify the participant's account\r\n    // ------------------------------------------------------------------------\r\n    function kycVerify(address participant) onlyOwner {\r\n        kycRequired[participant] = false;\r\n        KycVerified(participant);\r\n    }\r\n    event KycVerified(address indexed participant);\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Any account can burn _from's tokens as long as the _from account has \r\n    // approved the _amount to be burnt using\r\n    //   approve(0x0, _amount)\r\n    // ------------------------------------------------------------------------\r\n    function burnFrom(\r\n        address _from,\r\n        uint _amount\r\n    ) returns (bool success) {\r\n        if (balances[_from] >= _amount                  // From a/c has balance\r\n            && allowed[_from][0x0] >= _amount           // Transfer approved\r\n            && _amount > 0                              // Non-zero transfer\r\n            && balances[0x0] + _amount > balances[0x0]  // Overflow check\r\n        ) {\r\n            balances[_from] = balances[_from].sub(_amount);\r\n            allowed[_from][0x0] = allowed[_from][0x0].sub(_amount);\r\n            balances[0x0] = balances[0x0].add(_amount);\r\n            totalSupply = totalSupply.sub(_amount);\r\n            Transfer(_from, 0x0, _amount);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // 1y locked balances for an account\r\n    // ------------------------------------------------------------------------\r\n    function balanceOfLocked1Y(address account) constant returns (uint balance) {\r\n        return lockedTokens.balanceOfLocked1Y(account);\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // 2y locked balances for an account\r\n    // ------------------------------------------------------------------------\r\n    function balanceOfLocked2Y(address account) constant returns (uint balance) {\r\n        return lockedTokens.balanceOfLocked2Y(account);\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // 1y and 2y locked balances for an account\r\n    // ------------------------------------------------------------------------\r\n    function balanceOfLocked(address account) constant returns (uint balance) {\r\n        return lockedTokens.balanceOfLocked(account);\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // 1y locked total supply\r\n    // ------------------------------------------------------------------------\r\n    function totalSupplyLocked1Y() constant returns (uint) {\r\n        if (finalised) {\r\n            return lockedTokens.totalSupplyLocked1Y();\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // 2y locked total supply\r\n    // ------------------------------------------------------------------------\r\n    function totalSupplyLocked2Y() constant returns (uint) {\r\n        if (finalised) {\r\n            return lockedTokens.totalSupplyLocked2Y();\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // 1y and 2y locked total supply\r\n    // ------------------------------------------------------------------------\r\n    function totalSupplyLocked() constant returns (uint) {\r\n        if (finalised) {\r\n            return lockedTokens.totalSupplyLocked();\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Unlocked total supply\r\n    // ------------------------------------------------------------------------\r\n    function totalSupplyUnlocked() constant returns (uint) {\r\n        if (finalised && totalSupply >= lockedTokens.totalSupplyLocked()) {\r\n            return totalSupply.sub(lockedTokens.totalSupplyLocked());\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n\r\n    // ------------------------------------------------------------------------\r\n    // openANX can transfer out any accidentally sent ERC20 tokens\r\n    // ------------------------------------------------------------------------\r\n    function transferAnyERC20Token(address tokenAddress, uint amount)\r\n      onlyOwner returns (bool success) \r\n    {\r\n        return ERC20Interface(tokenAddress).transfer(owner, amount);\r\n    }\r\n}", "OptimizationUsed": "1", "ContractName": "OpenANXToken", "ByteCode": "0x6060604052361561022d5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461023f578063095ea7b3146102cf5780630b743021146103025780630e9d02cc146103245780630eb347401461033957806318160ddd146103655780631881b0f0146103875780631ab3c515146103a5578063214bb60f146103d357806323b872dd146103f75780632da13d5e146104305780632e0f262514610452578063313ce56714610478578063372c65331461049e5780633818d907146104c05780633a9f967e146104e1578063521eb27314610503578063545599ff1461052f5780635834192214610551578063622c77fe1461057357806370a082311461059557806379ba5097146105c357806379cc6790146105d5578063831a1754146106085780638bc04eb71461062a5780638da5cb5b1461064c57806393fea1841461067857806395d89b411461069a578063978c5b151461072a578063a3f4df7e1461074c578063a4399263146107dc578063a5bc770c146107ee578063a9059cbb14610810578063b7121da414610843578063bc5dc16814610873578063c0c3da9c146108a1578063c0f5dc97146108c3578063d4ee1d90146108e5578063dc39d06d14610911578063dd62ed3e14610944578063deaa59df14610978578063e960bb4814610996578063f2fde38b146109c4578063f4509fc2146109e2578063f48c305414610a04578063f76f8d7814610a1a575b61023d5b61023a33610aaa565b5b565b005b341561024757fe5b61024f610c96565b604080516020808252835181830152835191928392908301918501908083838215610295575b80518252602083111561029557601f199092019160209182019101610275565b505050905090810190601f1680156102c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156102d757fe5b6102ee600160a060020a0360043516602435610d24565b604080519115158252519081900360200190f35b341561030a57fe5b610312610d8f565b60408051918252519081900360200190f35b341561032c57fe5b61023d600435610d9e565b005b341561034157fe5b610349610e16565b60408051600160a060020a039092168252519081900360200190f35b341561036d57fe5b610312610e25565b60408051918252519081900360200190f35b341561038f57fe5b61023d600160a060020a0360043516610e2b565b005b34156103ad57fe5b610312600160a060020a0360043516610e92565b60408051918252519081900360200190f35b34156103db57fe5b6102ee610f1d565b604080519115158252519081900360200190f35b34156103ff57fe5b6102ee600160a060020a0360043581169060243516604435610f26565b604080519115158252519081900360200190f35b341561043857fe5b610312610f77565b60408051918252519081900360200190f35b341561045a57fe5b610462610f7d565b6040805160ff9092168252519081900360200190f35b341561048057fe5b610462610f82565b6040805160ff9092168252519081900360200190f35b34156104a657fe5b610312610f8b565b60408051918252519081900360200190f35b34156104c857fe5b61023d600160a060020a0360043516602435610f93565b005b34156104e957fe5b61031261105d565b60408051918252519081900360200190f35b341561050b57fe5b61034961106c565b60408051600160a060020a039092168252519081900360200190f35b341561053757fe5b61031261107b565b60408051918252519081900360200190f35b341561055957fe5b610312611083565b60408051918252519081900360200190f35b341561057b57fe5b610312611104565b60408051918252519081900360200190f35b341561059d57fe5b610312600160a060020a036004351661119f565b60408051918252519081900360200190f35b34156105cb57fe5b61023d6111be565b005b34156105dd57fe5b6102ee600160a060020a036004351660243561124b565b604080519115158252519081900360200190f35b341561061057fe5b61031261142c565b60408051918252519081900360200190f35b341561063257fe5b61031261143b565b60408051918252519081900360200190f35b341561065457fe5b610349611447565b60408051600160a060020a039092168252519081900360200190f35b341561068057fe5b610312611456565b60408051918252519081900360200190f35b34156106a257fe5b61024f61145c565b604080516020808252835181830152835191928392908301918501908083838215610295575b80518252602083111561029557601f199092019160209182019101610275565b505050905090810190601f1680156102c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561073257fe5b6103126114ea565b60408051918252519081900360200190f35b341561075457fe5b61024f6114f2565b604080516020808252835181830152835191928392908301918501908083838215610295575b80518252602083111561029557601f199092019160209182019101610275565b505050905090810190601f1680156102c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156107e457fe5b61023d611529565b005b34156107f657fe5b610312611744565b60408051918252519081900360200190f35b341561081857fe5b6102ee600160a060020a036004351660243561174a565b604080519115158252519081900360200190f35b341561084b57fe5b6102ee600160a060020a0360043516611799565b604080519115158252519081900360200190f35b341561087b57fe5b610312600160a060020a03600435166117ae565b60408051918252519081900360200190f35b34156108a957fe5b610312611839565b60408051918252519081900360200190f35b34156108cb57fe5b6103126118d4565b60408051918252519081900360200190f35b34156108ed57fe5b6103496119db565b60408051600160a060020a039092168252519081900360200190f35b341561091957fe5b6102ee600160a060020a03600435166024356119ea565b604080519115158252519081900360200190f35b341561094c57fe5b610312600160a060020a0360043581169060243516611a9b565b60408051918252519081900360200190f35b341561098057fe5b61023d600160a060020a0360043516611ac8565b005b341561099e57fe5b610312600160a060020a0360043516611b4d565b60408051918252519081900360200190f35b34156109cc57fe5b61023d600160a060020a0360043516611bd8565b005b34156109ea57fe5b610312611c21565b60408051918252519081900360200190f35b61023d600160a060020a0360043516610aaa565b005b3415610a2257fe5b61024f611c29565b604080516020808252835181830152835191928392908301918501908083838215610295575b80518252602083111561029557601f199092019160209182019101610275565b505050905090810190601f1680156102c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b600a5460009060ff1615610abe5760006000fd5b63594bbf50421015610ad05760006000fd5b6359734c50421115610ae25760006000fd5b600854341015610af25760006000fd5b6009541580610b02575060095434105b1515610b0e5760006000fd5b600554600b54600360ff92831660120301909116600a0a903402811515610b3157fe5b60005491900491506a18d0bf423c03d8de0000009082011115610b545760006000fd5b600160a060020a038216600090815260066020526040902054610b7d908263ffffffff611c6016565b600160a060020a03831660009081526006602052604081209190915554610baa908263ffffffff611c6016565b6000908155604080518381529051600160a060020a0385169291600080516020611f43833981519152919081900360200190a3600054600b546040805134815230600160a060020a039081163160208301528183018690526060820194909452608081019290925251918416917f6a7381bdc8f4e7ed3c0f0c299382777bde88a65f0c27f670235401d1544546309181900360a00190a2600160a060020a038083166000908152600e6020526040808220805460ff19166001179055600d5490519216913480156108fc0292909190818181858888f193505050501515610c915760006000fd5b5b5050565b6004805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610d1c5780601f10610cf157610100808354040283529160200191610d1c565b820191906000526020600020905b815481529060010190602001808311610cff57829003601f168201915b505050505081565b600160a060020a03338116600081815260076020908152604080832094871680845294825280832086905580518681529051929493927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b6a52b7d2dcc80cd2e400000081565b60015433600160a060020a03908116911614610dba5760006000fd5b63594bbf504210610dcb5760006000fd5b60008111610dd95760006000fd5b600b8190556040805182815290517fee386bebbe46d39825c2b93313aa1ab1dc57d4774cac81c6debb8c611c9227ab9181900360200190a15b5b50565b600c54600160a060020a031681565b60005481565b60015433600160a060020a03908116911614610e475760006000fd5b600160a060020a0381166000818152600e6020526040808220805460ff19169055517fb3e6054663369578ee4831fc6c8ee9486db04e6f78b939250094785f6b6a430b9190a25b5b50565b600c54604080516000602091820181905282517f1ab3c515000000000000000000000000000000000000000000000000000000008152600160a060020a038681166004830152935191949390931692631ab3c51592602480830193919282900301818787803b1515610f0057fe5b6102c65a03f11515610f0e57fe5b5050604051519150505b919050565b600a5460ff1681565b600a5460009060ff161515610f3b5760006000fd5b600160a060020a0384166000908152600e602052604090205460ff1615610f625760006000fd5b610f6d848484611c88565b90505b9392505050565b60085481565b601281565b60055460ff1681565b63594bbf5081565b60015433600160a060020a03908116911614610faf5760006000fd5b63594bbf504210610fc05760006000fd5b60008111610fce5760006000fd5b600160a060020a038216600090815260066020526040902054610ff7908263ffffffff611c6016565b600160a060020a03831660009081526006602052604081209190915554611024908263ffffffff611c6016565b6000908155604080518381529051600160a060020a0385169291600080516020611f43833981519152919081900360200190a35b5b5050565b6a0ac0db698068112d00000081565b600d54600160a060020a031681565b6359734c5081565b600a5460009060ff16156110fc57600c546040805160006020918201819052825160e160020a632c1a0c910281529251600160a060020a039094169363583419229360048082019493918390030190829087803b15156110df57fe5b6102c65a03f115156110ed57fe5b50506040515191506111009050565b5060005b5b90565b600a5460009060ff16156110fc57600c54604080516000602091820181905282517f622c77fe0000000000000000000000000000000000000000000000000000000081529251600160a060020a039094169363622c77fe9360048082019493918390030190829087803b15156110df57fe5b6102c65a03f115156110ed57fe5b50506040515191506111009050565b506000611100565b5b90565b600160a060020a0381166000908152600660205260409020545b919050565b60025433600160a060020a039081169116146111da5760006000fd5b600254600154604051600160a060020a0392831692909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36002546001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039092169190911790555b565b600160a060020a0382166000908152600660205260408120548290108015906112985750600160a060020a0383166000908152600760209081526040808320838052909152902054829010155b80156112a45750600082115b80156112db57506000805260066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f854828101115b1561141d57600160a060020a038316600090815260066020526040902054611309908363ffffffff611e1d16565b600160a060020a0384166000908152600660209081526040808320939093556007815282822082805290522054611346908363ffffffff611e1d16565b600160a060020a0384166000908152600760209081526040808320838052825290912091909155600690527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f8546113a3908363ffffffff611c6016565b600080805260066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f891909155546113e3908363ffffffff611e1d16565b6000908155604080518481529051600160a060020a03861691600080516020611f43833981519152919081900360200190a3506001610d89565b506000610d89565b5b92915050565b6a18d0bf423c03d8de00000081565b670de0b6b3a764000081565b600154600160a060020a031681565b60095481565b6003805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610d1c5780601f10610cf157610100808354040283529160200191610d1c565b820191906000526020600020905b815481529060010190602001808311610cff57829003601f168201915b505050505081565b635d0e265081565b60408051808201909152600d81527f6f70656e414e5820546f6b656e00000000000000000000000000000000000000602082015281565b60015433600160a060020a039081169116146115455760006000fd5b6000546a0ac0db698068112d0000009010158061156557506359734c5042115b15156115715760006000fd5b600a5460ff16156115825760006000fd5b600c54604080517fe9d7f3090000000000000000000000000000000000000000000000000000000081529051600160a060020a039092169163e9d7f3099160048082019260009290919082900301818387803b15156115dd57fe5b6102c65a03f115156115eb57fe5b5050506116a2600c60009054906101000a9004600160a060020a0316600160a060020a031663583419226000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401809050602060405180830381600087803b151561166557fe5b6102c65a03f1151561167357fe5b50506040805151600c54600160a060020a0316600090815260066020529190912054915063ffffffff611c6016565b600c8054600160a060020a03908116600090815260066020908152604080832095909555925484518401829052845160e160020a632c1a0c91028152945161173095919093169363583419229360048084019492939192918390030190829087803b151561170c57fe5b6102c65a03f1151561171a57fe5b505060405151600054915063ffffffff611c6016565b600055600a805460ff191660011790555b5b565b600b5481565b600a5460009060ff16151561175f5760006000fd5b600160a060020a0333166000908152600e602052604090205460ff16156117865760006000fd5b6117908383611e34565b90505b92915050565b600e6020526000908152604090205460ff1681565b600c54604080516000602091820181905282517fbc5dc168000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015293519194939093169263bc5dc16892602480830193919282900301818787803b1515610f0057fe5b6102c65a03f11515610f0e57fe5b5050604051519150505b919050565b600a5460009060ff16156110fc57600c54604080516000602091820181905282517fc0c3da9c0000000000000000000000000000000000000000000000000000000081529251600160a060020a039094169363c0c3da9c9360048082019493918390030190829087803b15156110df57fe5b6102c65a03f115156110ed57fe5b50506040515191506111009050565b506000611100565b5b90565b600a5460009060ff16801561194e5750600c546040805160006020918201819052825160e160020a632c1a0c910281529251600160a060020a039094169363583419229360048082019493918390030190829087803b151561193257fe5b6102c65a03f1151561194057fe5b505060405151600054101590505b156110fc57600c546040805160006020918201819052825160e160020a632c1a0c9102815292516119c894600160a060020a0316936358341922936004808301949193928390030190829087803b15156119a457fe5b6102c65a03f115156119b257fe5b505060405151600054915063ffffffff611e1d16565b9050611100565b506000611100565b5b90565b600254600160a060020a031681565b60015460009033600160a060020a03908116911614611a095760006000fd5b600154604080516000602091820181905282517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0394851660048201526024810187905292519387169363a9059cbb9360448082019493918390030190829087803b1515611a7c57fe5b6102c65a03f11515611a8a57fe5b5050604051519150505b5b92915050565b600160a060020a038083166000908152600760209081526040808320938516835292905220545b92915050565b60015433600160a060020a03908116911614611ae45760006000fd5b600d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03838116919091179182905560408051929091168252517f4edbfac5b40fe46ac1af1fd222b224b38cfeeb9e21bd4fc6344526c245f7549b916020908290030190a15b5b50565b600c54604080516000602091820181905282517fe960bb48000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015293519194939093169263e960bb4892602480830193919282900301818787803b1515610f0057fe5b6102c65a03f11515610f0e57fe5b5050604051519150505b919050565b60015433600160a060020a03908116911614611bf45760006000fd5b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b50565b635b2cf2d081565b60408051808201909152600381527f4f41580000000000000000000000000000000000000000000000000000000000602082015281565b6000828201838110801590611c755750828110155b1515611c7d57fe5b8091505b5092915050565b600160a060020a038316600090815260066020526040812054829010801590611cd85750600160a060020a0380851660009081526007602090815260408083203390941683529290522054829010155b8015611ce45750600082115b8015611d095750600160a060020a038316600090815260066020526040902054828101115b15611e0d57600160a060020a038416600090815260066020526040902054611d37908363ffffffff611e1d16565b600160a060020a0380861660009081526006602090815260408083209490945560078152838220339093168252919091522054611d7a908363ffffffff611e1d16565b600160a060020a0380861660009081526007602090815260408083203385168452825280832094909455918616815260069091522054611dc0908363ffffffff611c6016565b600160a060020a038085166000818152600660209081526040918290209490945580518681529051919392881692600080516020611f4383398151915292918290030190a3506001610f70565b506000610f70565b5b9392505050565b600082821115611e2957fe5b508082035b92915050565b600160a060020a033316600090815260066020526040812054829010801590611e5d5750600082115b8015611e825750600160a060020a038316600090815260066020526040902054828101115b1561141d57600160a060020a033316600090815260066020526040902054611eb0908363ffffffff611e1d16565b600160a060020a033381166000908152600660205260408082209390935590851681522054611ee5908363ffffffff611c6016565b600160a060020a03808516600081815260066020908152604091829020949094558051868152905191933390931692600080516020611f4383398151915292918290030190a3506001610d89565b506000610d89565b5b929150505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a7230582002d82e12d01419074eb87e3b53edd24e33c5ad021933496454ed30b3c41a4d160029"}