{"Runs": "200", "SwarmSource": "bzzr://6d46e98f7b3ac249e8109d4a1bac89cf1f7285b29a7d3d8f556f4247a12ab9c2", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.8+commit.60cc1668", "ConstructorArguments": "", "SourceCode": "/**\r\n * The Edgeless token contract complies with the ERC20 standard (see https://github.com/ethereum/EIPs/issues/20).\r\n * Additionally tokens can be locked for a defined time interval by token holders.\r\n * The owner's share of tokens is locked for the first year and all tokens not\r\n * being sold during the crowdsale but 60.000.000 (owner's share + bounty program) are burned.\r\n * Author: Julia Altenried\r\n * */\r\n\r\npragma solidity ^0.4.6;\r\n\r\ncontract SafeMath {\r\n  //internals\r\n\r\n  function safeMul(uint a, uint b) internal returns (uint) {\r\n    uint c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function safeSub(uint a, uint b) internal returns (uint) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function safeAdd(uint a, uint b) internal returns (uint) {\r\n    uint c = a + b;\r\n    assert(c>=a && c>=b);\r\n    return c;\r\n  }\r\n\r\n  function assert(bool assertion) internal {\r\n    if (!assertion) throw;\r\n  }\r\n}\r\n\r\ncontract EdgelessToken is SafeMath {\r\n    /* Public variables of the token */\r\n    string public standard = 'ERC20';\r\n    string public name = 'Edgeless';\r\n    string public symbol = 'EDG';\r\n    uint8 public decimals = 0;\r\n    uint256 public totalSupply;\r\n    address public owner;\r\n    /* from this time on tokens may be transfered (after ICO)*/\r\n    uint256 public startTime = 1490112000;\r\n    /* tells if tokens have been burned already */\r\n    bool burned;\r\n\r\n    /* This creates an array with all balances */\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n\r\n    /* This generates a public event on the blockchain that will notify clients */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\tevent Burned(uint amount);\r\n\r\n    /* Initializes contract with initial supply tokens to the creator of the contract */\r\n    function EdgelessToken() {\r\n        owner = 0x003230BBE64eccD66f62913679C8966Cf9F41166;\r\n        balanceOf[owner] = 500000000;              // Give the owner all initial tokens\r\n        totalSupply = 500000000;                   // Update total supply\r\n    }\r\n\r\n    /* Send some of your tokens to a given address */\r\n    function transfer(address _to, uint256 _value) returns (bool success){\r\n        if (now < startTime) throw; //check if the crowdsale is already over\r\n        if(msg.sender == owner && now < startTime + 1 years && safeSub(balanceOf[msg.sender],_value) < 50000000) throw; //prevent the owner of spending his share of tokens within the first year\r\n        balanceOf[msg.sender] = safeSub(balanceOf[msg.sender],_value);                     // Subtract from the sender\r\n        balanceOf[_to] = safeAdd(balanceOf[_to],_value);                            // Add the same to the recipient\r\n        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place\r\n        return true;\r\n    }\r\n\r\n    /* Allow another contract or person to spend some tokens in your behalf */\r\n    function approve(address _spender, uint256 _value) returns (bool success) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n\r\n    /* A contract or  person attempts to get the tokens of somebody else.\r\n    *  This is only allowed if the token holder approved. */\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n        if (now < startTime && _from!=owner) throw; //check if the crowdsale is already over\r\n        if(_from == owner && now < startTime + 1 years && safeSub(balanceOf[_from],_value) < 50000000) throw; //prevent the owner of spending his share of tokens within the first year\r\n        var _allowance = allowance[_from][msg.sender];\r\n        balanceOf[_from] = safeSub(balanceOf[_from],_value); // Subtract from the sender\r\n        balanceOf[_to] = safeAdd(balanceOf[_to],_value);     // Add the same to the recipient\r\n        allowance[_from][msg.sender] = safeSub(_allowance,_value);\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n\r\n    /* to be called when ICO is closed, burns the remaining tokens but the owners share (50 000 000) and the ones reserved\r\n    *  for the bounty program (10 000 000).\r\n    *  anybody may burn the tokens after ICO ended, but only once (in case the owner holds more tokens in the future).\r\n    *  this ensures that the owner will not posses a majority of the tokens. */\r\n    function burn(){\r\n    \t//if tokens have not been burned already and the ICO ended\r\n    \tif(!burned && now>startTime){\r\n    \t\tuint difference = safeSub(balanceOf[owner], 60000000);//checked for overflow above\r\n    \t\tbalanceOf[owner] = 60000000;\r\n    \t\ttotalSupply = safeSub(totalSupply, difference);\r\n    \t\tburned = true;\r\n    \t\tBurned(difference);\r\n    \t}\r\n    }\r\n\r\n}", "OptimizationUsed": "1", "ContractName": "EdgelessToken", "ByteCode": "0x606060405236156100a95763ffffffff60e060020a60003504166306fdde0381146100ae578063095ea7b31461013b57806318160ddd1461016b57806323b872dd1461018a578063313ce567146101c057806344df8e70146101e35780635a3b7e42146101f257806370a082311461027f57806378e97925146102aa5780638da5cb5b146102c957806395d89b41146102f2578063a9059cbb1461037f578063dd62ed3e146103af575b610000565b34610000576100bb6103e0565b604080516020808252835181830152835191928392908301918501908083838215610101575b80518252602083111561010157601f1990920191602091820191016100e1565b505050905090810190601f16801561012d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3461000057610157600160a060020a036004351660243561046d565b604080519115158252519081900360200190f35b34610000576101786104d8565b60408051918252519081900360200190f35b3461000057610157600160a060020a03600435811690602435166044356104de565b604080519115158252519081900360200190f35b34610000576101cd61066d565b6040805160ff9092168252519081900360200190f35b34610000576101f0610676565b005b34610000576100bb610734565b604080516020808252835181830152835191928392908301918501908083838215610101575b80518252602083111561010157601f1990920191602091820191016100e1565b505050905090810190601f16801561012d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3461000057610178600160a060020a03600435166107c2565b60408051918252519081900360200190f35b34610000576101786107d4565b60408051918252519081900360200190f35b34610000576102d66107da565b60408051600160a060020a039092168252519081900360200190f35b34610000576100bb6107e9565b604080516020808252835181830152835191928392908301918501908083838215610101575b80518252602083111561010157601f1990920191602091820191016100e1565b505050905090810190601f16801561012d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3461000057610157600160a060020a0360043516602435610874565b604080519115158252519081900360200190f35b3461000057610178600160a060020a036004358116906024351661099a565b60408051918252519081900360200190f35b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104655780601f1061043a57610100808354040283529160200191610465565b820191906000526020600020905b81548152906001019060200180831161044857829003601f168201915b505050505081565b600160a060020a03338116600081815260096020908152604080832094871680845294825280832086905580518681529051929493927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b60045481565b60006000600654421080156105015750600554600160a060020a03868116911614155b1561050b57610000565b600554600160a060020a03868116911614801561052f57506006546301e133800142105b80156105615750600160a060020a0385166000908152600860205260409020546302faf0809061055f90856109b7565b105b1561056b57610000565b50600160a060020a038085166000818152600960209081526040808320339095168352938152838220549282526008905291909120546105ab90846109b7565b600160a060020a0380871660009081526008602052604080822093909355908616815220546105da90846109d0565b600160a060020a0385166000908152600860205260409020556105fd81846109b7565b600160a060020a038087166000818152600960209081526040808320338616845282529182902094909455805187815290519288169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3600191505b509392505050565b60035460ff1681565b60075460009060ff1615801561068d575060065442115b1561073057600554600160a060020a03166000908152600860205260409020546106bb9063039387006109b7565b600554600160a060020a03166000908152600860205260409020630393870090556004549091506106ec90826109b7565b6004556007805460ff191660011790556040805182815290517fd83c63197e8e676d80ab0122beba9a9d20f3828839e9a1d6fe81d242e9cd7e6e9181900360200190a15b5b50565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104655780601f1061043a57610100808354040283529160200191610465565b820191906000526020600020905b81548152906001019060200180831161044857829003601f168201915b505050505081565b60086020526000908152604090205481565b60065481565b600554600160a060020a031681565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156104655780601f1061043a57610100808354040283529160200191610465565b820191906000526020600020905b81548152906001019060200180831161044857829003601f168201915b505050505081565b600060065442101561088557610000565b60055433600160a060020a0390811691161480156108aa57506006546301e133800142105b80156108dc5750600160a060020a0333166000908152600860205260409020546302faf080906108da90846109b7565b105b156108e657610000565b600160a060020a03331660009081526008602052604090205461090990836109b7565b600160a060020a03338116600090815260086020526040808220939093559085168152205461093890836109d0565b600160a060020a038085166000818152600860209081526040918290209490945580518681529051919333909316927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35060015b92915050565b600960209081526000928352604080842090915290825290205481565b60006109c5838311156109f8565b508082035b92915050565b60008282016109ed8482108015906109e85750838210155b6109f8565b8091505b5092915050565b80151561073057610000565b5b505600a165627a7a723058206d46e98f7b3ac249e8109d4a1bac89cf1f7285b29a7d3d8f556f4247a12ab9c20029"}