{"Runs": "0", "SwarmSource": "bzzr://c4ae36a7545c31672d946cd91cf7a40cd2f28581238d70d2980c389d2add4afa", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"futureSaleVault\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxPresaleTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberOfTokensLeft\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundingStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockedTeamAllocationTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minTokensForSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"twentyThirtyTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"purchase\",\"outputs\":[],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"teamAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unlockedTeamStorageVault\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"allocateTokens\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"futureTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"twentyThirtyVault\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"twentyThirtyAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"allocateForRefund\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unsoldTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unPauseTokenSale\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unlockedTeamAllocationTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pillarTokenFactory\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"futureSaleAllocation\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalAvailableForSale\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fundingStartBlock\",\"type\":\"uint256\"},{\"name\":\"_fundingStopBlock\",\"type\":\"uint256\"}],\"name\":\"startTokenSale\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pauseTokenSale\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_pillarTokenFactory\",\"type\":\"address\"},{\"name\":\"_icedWallet\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"},{\"payable\":true,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Refund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Migrate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_total\",\"type\":\"uint256\"}],\"name\":\"MoneyAddedForRefund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.11+commit.68ef5810", "ConstructorArguments": "00000000000000000000000005a9afd79a05c3e1afefa282ef8d58f9366b160b000000000000000000000000ff678a624472fe0d195e3cac47dec2375dc2d8be", "SourceCode": "pragma solidity ^0.4.11;\r\n\r\n\r\n/**\r\n * Math operations with safety checks\r\n */\r\nlibrary SafeMath {\r\n  function mul(uint a, uint b) internal returns (uint) {\r\n    uint c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint a, uint b) internal returns (uint) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint a, uint b) internal returns (uint) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint a, uint b) internal returns (uint) {\r\n    uint c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n\r\n  function max64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n    return a >= b ? a : b;\r\n  }\r\n\r\n  function min64(uint64 a, uint64 b) internal constant returns (uint64) {\r\n    return a < b ? a : b;\r\n  }\r\n\r\n  function max256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    return a >= b ? a : b;\r\n  }\r\n\r\n  function min256(uint256 a, uint256 b) internal constant returns (uint256) {\r\n    return a < b ? a : b;\r\n  }\r\n\r\n  function assert(bool assertion) internal {\r\n    if (!assertion) {\r\n      throw;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control \r\n * functions, this simplifies the implementation of \"user permissions\". \r\n */\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  /** \r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner. \r\n   */\r\n  modifier onlyOwner() {\r\n    if (msg.sender != owner) {\r\n      throw;\r\n    }\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to. \r\n   */\r\n  function transferOwnership(address newOwner) onlyOwner {\r\n    if (newOwner != address(0)) {\r\n      owner = newOwner;\r\n    }\r\n  }\r\n\r\n}\r\n\r\ncontract TeamAllocation is Ownable {\r\n  using SafeMath for uint;\r\n  //uint public constant lockedTeamAllocationTokens = 16000000;\r\n  uint public unlockedAt;\r\n  PillarToken plr;\r\n  mapping (address => uint) allocations;\r\n  uint tokensCreated = 0;\r\n  uint constant public lockedTeamAllocationTokens = 16000000e18;\r\n  //address of the team storage vault\r\n  address public teamStorageVault = 0x3f5D90D5Cc0652AAa40519114D007Bf119Afe1Cf;\r\n\r\n  function TeamAllocation() {\r\n    plr = PillarToken(msg.sender);\r\n    // Locked time of approximately 9 months before team members are able to redeeem tokens.\r\n    uint nineMonths = 9 * 30 days;\r\n    unlockedAt = now.add(nineMonths);\r\n    //2% tokens from the Marketing bucket which are locked for 9 months\r\n    allocations[teamStorageVault] = lockedTeamAllocationTokens;\r\n  }\r\n\r\n  function getTotalAllocation() returns (uint){\r\n      return lockedTeamAllocationTokens;\r\n  }\r\n\r\n  function unlock() external payable {\r\n    if (now < unlockedAt) throw;\r\n\r\n    if (tokensCreated == 0) {\r\n      tokensCreated = plr.balanceOf(this);\r\n    }\r\n    //transfer the locked tokens to the teamStorageAddress\r\n    plr.transfer(teamStorageVault, tokensCreated);\r\n  }\r\n}\r\n\r\ncontract UnsoldAllocation is Ownable {\r\n  using SafeMath for uint;\r\n  uint unlockedAt;\r\n  uint allocatedTokens;\r\n  PillarToken plr;\r\n  mapping (address => uint) allocations;\r\n\r\n  uint tokensCreated = 0;\r\n\r\n  /*\r\n    Split among team members\r\n    Tokens reserved for Team: 1,000,000\r\n    Tokens reserved for 20|30 projects: 1,000,000\r\n    Tokens reserved for future sale: 1,000,000\r\n  */\r\n\r\n  function UnsoldAllocation(uint _lockTime, address _owner, uint _tokens) {\r\n    if(_lockTime == 0) throw;\r\n\r\n    if(_owner == address(0)) throw;\r\n\r\n    plr = PillarToken(msg.sender);\r\n    uint lockTime = _lockTime * 1 years;\r\n    unlockedAt = now.add(lockTime);\r\n    allocatedTokens = _tokens;\r\n    allocations[_owner] = _tokens;\r\n  }\r\n\r\n  function getTotalAllocation()returns(uint){\r\n      return allocatedTokens;\r\n  }\r\n\r\n  function unlock() external payable {\r\n    if (now < unlockedAt) throw;\r\n\r\n    if (tokensCreated == 0) {\r\n      tokensCreated = plr.balanceOf(this);\r\n    }\r\n\r\n    var allocation = allocations[msg.sender];\r\n    allocations[msg.sender] = 0;\r\n    var toTransfer = (tokensCreated.mul(allocation)).div(allocatedTokens);\r\n    plr.transfer(msg.sender, toTransfer);\r\n  }\r\n}\r\n\r\n/**\r\n * @title Pausable\r\n * @dev Base contract which allows children to implement an emergency stop mechanism.\r\n */\r\ncontract Pausable is Ownable {\r\n  event Pause();\r\n  event Unpause();\r\n\r\n  bool public paused = false;\r\n\r\n\r\n  /**\r\n   * @dev modifier to allow actions only when the contract IS paused\r\n   */\r\n  modifier whenNotPaused() {\r\n    if (paused) throw;\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev modifier to allow actions only when the contract IS NOT paused\r\n   */\r\n  modifier whenPaused {\r\n    if (!paused) throw;\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to pause, triggers stopped state\r\n   */\r\n  function pause() onlyOwner whenNotPaused returns (bool) {\r\n    paused = true;\r\n    Pause();\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to unpause, returns to normal state\r\n   */\r\n  function unpause() onlyOwner whenPaused returns (bool) {\r\n    paused = false;\r\n    Unpause();\r\n    return true;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20Basic {\r\n  uint public totalSupply;\r\n  function balanceOf(address who) constant returns (uint);\r\n  function transfer(address to, uint value);\r\n  event Transfer(address indexed from, address indexed to, uint value);\r\n}\r\n\r\n/**\r\n * @title Basic token\r\n * @dev Basic version of StandardToken, with no allowances. \r\n */\r\ncontract BasicToken is ERC20Basic {\r\n  using SafeMath for uint;\r\n\r\n  mapping(address => uint) balances;\r\n\r\n  /**\r\n   * @dev Fix for the ERC20 short address attack.\r\n   */\r\n  modifier onlyPayloadSize(uint size) {\r\n     if(msg.data.length < size + 4) {\r\n       throw;\r\n     }\r\n     _;\r\n  }\r\n\r\n  /**\r\n  * @dev transfer token for a specified address\r\n  * @param _to The address to transfer to.\r\n  * @param _value The amount to be transferred.\r\n  */\r\n  function transfer(address _to, uint _value) onlyPayloadSize(2 * 32) {\r\n    balances[msg.sender] = balances[msg.sender].sub(_value);\r\n    balances[_to] = balances[_to].add(_value);\r\n    Transfer(msg.sender, _to, _value);\r\n  }\r\n\r\n  /**\r\n  * @dev Gets the balance of the specified address.\r\n  * @param _owner The address to query the the balance of. \r\n  * @return An uint representing the amount owned by the passed address.\r\n  */\r\n  function balanceOf(address _owner) constant returns (uint balance) {\r\n    return balances[_owner];\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) constant returns (uint);\r\n  function transferFrom(address from, address to, uint value);\r\n  function approve(address spender, uint value);\r\n  event Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\n/**\r\n * @title Standard ERC20 token\r\n *\r\n * @dev Implemantation of the basic standart token.\r\n * @dev https://github.com/ethereum/EIPs/issues/20\r\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\r\n */\r\ncontract StandardToken is BasicToken, ERC20 {\r\n\r\n  mapping (address => mapping (address => uint)) allowed;\r\n\r\n\r\n  /**\r\n   * @dev Transfer tokens from one address to another\r\n   * @param _from address The address which you want to send tokens from\r\n   * @param _to address The address which you want to transfer to\r\n   * @param _value uint the amout of tokens to be transfered\r\n   */\r\n  function transferFrom(address _from, address _to, uint _value) onlyPayloadSize(3 * 32) {\r\n    var _allowance = allowed[_from][msg.sender];\r\n\r\n    // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\r\n    // if (_value > _allowance) throw;\r\n\r\n    balances[_to] = balances[_to].add(_value);\r\n    balances[_from] = balances[_from].sub(_value);\r\n    allowed[_from][msg.sender] = _allowance.sub(_value);\r\n    Transfer(_from, _to, _value);\r\n  }\r\n\r\n  /**\r\n   * @dev Aprove the passed address to spend the specified amount of tokens on beahlf of msg.sender.\r\n   * @param _spender The address which will spend the funds.\r\n   * @param _value The amount of tokens to be spent.\r\n   */\r\n  function approve(address _spender, uint _value) {\r\n\r\n    // To change the approve amount you first have to reduce the addresses`\r\n    //  allowance to zero by calling `approve(_spender, 0)` if it is not\r\n    //  already 0 to mitigate the race condition described here:\r\n    //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;\r\n\r\n    allowed[msg.sender][_spender] = _value;\r\n    Approval(msg.sender, _spender, _value);\r\n  }\r\n\r\n  /**\r\n   * @dev Function to check the amount of tokens than an owner allowed to a spender.\r\n   * @param _owner address The address which owns the funds.\r\n   * @param _spender address The address which will spend the funds.\r\n   * @return A uint specifing the amount of tokens still avaible for the spender.\r\n   */\r\n  function allowance(address _owner, address _spender) constant returns (uint remaining) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n\r\n}\r\n\r\n/// @title PillarToken - Crowdfunding code for the Pillar Project\r\n/// @author Parthasarathy Ramanujam, Gustavo Guimaraes, Ronak Thacker\r\ncontract PillarToken is StandardToken, Ownable {\r\n\r\n    using SafeMath for uint;\r\n    string public constant name = \"PILLAR\";\r\n    string public constant symbol = \"PLR\";\r\n    uint public constant decimals = 18;\r\n\r\n    TeamAllocation public teamAllocation;\r\n    UnsoldAllocation public unsoldTokens;\r\n    UnsoldAllocation public twentyThirtyAllocation;\r\n    UnsoldAllocation public futureSaleAllocation;\r\n\r\n    uint constant public minTokensForSale  = 32000000e18;\r\n\r\n    uint constant public maxPresaleTokens             =  48000000e18;\r\n    uint constant public totalAvailableForSale        = 528000000e18;\r\n    uint constant public futureTokens                 = 120000000e18;\r\n    uint constant public twentyThirtyTokens           =  80000000e18;\r\n    uint constant public lockedTeamAllocationTokens   =  16000000e18;\r\n    uint constant public unlockedTeamAllocationTokens =   8000000e18;\r\n\r\n    address public unlockedTeamStorageVault = 0x4162Ad6EEc341e438eAbe85f52a941B078210819;\r\n    address public twentyThirtyVault = 0xe72bA5c6F63Ddd395DF9582800E2821cE5a05D75;\r\n    address public futureSaleVault = 0xf0231160Bd1a2a2D25aed2F11B8360EbF56F6153;\r\n    address unsoldVault;\r\n\r\n    //Storage years\r\n    uint constant coldStorageYears = 10;\r\n    uint constant futureStorageYears = 3;\r\n\r\n    uint totalPresale = 0;\r\n\r\n    // Funding amount in ether\r\n    uint public constant tokenPrice  = 0.0005 ether;\r\n\r\n    // Multisigwallet where the proceeds will be stored.\r\n    address public pillarTokenFactory;\r\n\r\n    uint fundingStartBlock;\r\n    uint fundingStopBlock;\r\n\r\n    // flags whether ICO is afoot.\r\n    bool fundingMode;\r\n\r\n    //total used tokens\r\n    uint totalUsedTokens;\r\n\r\n    event Refund(address indexed _from,uint256 _value);\r\n    event Migrate(address indexed _from, address indexed _to, uint256 _value);\r\n    event MoneyAddedForRefund(address _from, uint256 _value,uint256 _total);\r\n\r\n    modifier isNotFundable() {\r\n        if (fundingMode) throw;\r\n        _;\r\n    }\r\n\r\n    modifier isFundable() {\r\n        if (!fundingMode) throw;\r\n        _;\r\n    }\r\n\r\n    //@notice  Constructor of PillarToken\r\n    //@param `_pillarTokenFactory` - multisigwallet address to store proceeds.\r\n    //@param `_icedWallet` - Multisigwallet address to which unsold tokens are assigned\r\n    function PillarToken(address _pillarTokenFactory, address _icedWallet) {\r\n      if(_pillarTokenFactory == address(0)) throw;\r\n      if(_icedWallet == address(0)) throw;\r\n\r\n      pillarTokenFactory = _pillarTokenFactory;\r\n      totalUsedTokens = 0;\r\n      totalSupply = 800000000e18;\r\n      unsoldVault = _icedWallet;\r\n\r\n      //allot 8 million of the 24 million marketing tokens to an address\r\n      balances[unlockedTeamStorageVault] = unlockedTeamAllocationTokens;\r\n\r\n      //allocate tokens for 2030 wallet locked in for 3 years\r\n      futureSaleAllocation = new UnsoldAllocation(futureStorageYears,futureSaleVault,futureTokens);\r\n      balances[address(futureSaleAllocation)] = futureTokens;\r\n\r\n      //allocate tokens for future wallet locked in for 3 years\r\n      twentyThirtyAllocation = new UnsoldAllocation(futureStorageYears,twentyThirtyVault,twentyThirtyTokens);\r\n      balances[address(twentyThirtyAllocation)] = twentyThirtyTokens;\r\n\r\n      fundingMode = false;\r\n    }\r\n\r\n    //@notice Fallback function that accepts the ether and allocates tokens to\r\n    //the msg.sender corresponding to msg.value\r\n    function() payable isFundable external {\r\n      purchase();\r\n    }\r\n\r\n    //@notice function that accepts the ether and allocates tokens to\r\n    //the msg.sender corresponding to msg.value\r\n    function purchase() payable isFundable {\r\n      if(block.number < fundingStartBlock) throw;\r\n      if(block.number > fundingStopBlock) throw;\r\n      if(totalUsedTokens >= totalAvailableForSale) throw;\r\n\r\n      if (msg.value < tokenPrice) throw;\r\n\r\n      uint numTokens = msg.value.div(tokenPrice);\r\n      if(numTokens < 1) throw;\r\n      //transfer money to PillarTokenFactory MultisigWallet\r\n      pillarTokenFactory.transfer(msg.value);\r\n\r\n      uint tokens = numTokens.mul(1e18);\r\n      totalUsedTokens = totalUsedTokens.add(tokens);\r\n      if (totalUsedTokens > totalAvailableForSale) throw;\r\n\r\n      balances[msg.sender] = balances[msg.sender].add(tokens);\r\n\r\n      //fire the event notifying the transfer of tokens\r\n      Transfer(0, msg.sender, tokens);\r\n    }\r\n\r\n    //@notice Function reports the number of tokens available for sale\r\n    function numberOfTokensLeft() constant returns (uint256) {\r\n      uint tokensAvailableForSale = totalAvailableForSale.sub(totalUsedTokens);\r\n      return tokensAvailableForSale;\r\n    }\r\n\r\n    //@notice Finalize the ICO, send team allocation tokens\r\n    //@notice send any remaining balance to the MultisigWallet\r\n    //@notice unsold tokens will be sent to icedwallet\r\n    function finalize() isFundable onlyOwner external {\r\n      if (block.number <= fundingStopBlock) throw;\r\n\r\n      if (totalUsedTokens < minTokensForSale) throw;\r\n\r\n      if(unsoldVault == address(0)) throw;\r\n\r\n      // switch funding mode off\r\n      fundingMode = false;\r\n\r\n      //Allot team tokens to a smart contract which will frozen for 9 months\r\n      teamAllocation = new TeamAllocation();\r\n      balances[address(teamAllocation)] = lockedTeamAllocationTokens;\r\n\r\n      //allocate unsold tokens to iced storage\r\n      uint totalUnSold = numberOfTokensLeft();\r\n      if(totalUnSold > 0) {\r\n        unsoldTokens = new UnsoldAllocation(coldStorageYears,unsoldVault,totalUnSold);\r\n        balances[address(unsoldTokens)] = totalUnSold;\r\n      }\r\n\r\n      //transfer any balance available to Pillar Multisig Wallet\r\n      pillarTokenFactory.transfer(this.balance);\r\n    }\r\n\r\n    //@notice Function that can be called by purchasers to refund\r\n    //@notice Used only in case the ICO isn't successful.\r\n    function refund() isFundable external {\r\n      if(block.number <= fundingStopBlock) throw;\r\n      if(totalUsedTokens >= minTokensForSale) throw;\r\n\r\n      uint plrValue = balances[msg.sender];\r\n      if(plrValue == 0) throw;\r\n\r\n      balances[msg.sender] = 0;\r\n\r\n      uint ethValue = plrValue.mul(tokenPrice).div(1e18);\r\n      msg.sender.transfer(ethValue);\r\n      Refund(msg.sender, ethValue);\r\n    }\r\n\r\n    //@notice Function used for funding in case of refund.\r\n    //@notice Can be called only by the Owner\r\n    function allocateForRefund() external payable onlyOwner returns (uint){\r\n      //does nothing just accepts and stores the ether\r\n      MoneyAddedForRefund(msg.sender,msg.value,this.balance);\r\n      return this.balance;\r\n    }\r\n\r\n    //@notice Function to allocate tokens to an user.\r\n    //@param `_to` the address of an user\r\n    //@param `_tokens` number of tokens to be allocated.\r\n    //@notice Can be called only when funding is not active and only by the owner\r\n    function allocateTokens(address _to,uint _tokens) isNotFundable onlyOwner external {\r\n      uint numOfTokens = _tokens.mul(1e18);\r\n      totalPresale = totalPresale.add(numOfTokens);\r\n\r\n      if(totalPresale > maxPresaleTokens) throw;\r\n\r\n      balances[_to] = balances[_to].add(numOfTokens);\r\n    }\r\n\r\n    //@notice Function to unPause the contract.\r\n    //@notice Can be called only when funding is active and only by the owner\r\n    function unPauseTokenSale() onlyOwner isNotFundable external returns (bool){\r\n      fundingMode = true;\r\n      return fundingMode;\r\n    }\r\n\r\n    //@notice Function to pause the contract.\r\n    //@notice Can be called only when funding is active and only by the owner\r\n    function pauseTokenSale() onlyOwner isFundable external returns (bool){\r\n      fundingMode = false;\r\n      return !fundingMode;\r\n    }\r\n\r\n    //@notice Function to start the contract.\r\n    //@param `_fundingStartBlock` - block from when ICO commences\r\n    //@param `_fundingStopBlock` - block from when ICO ends.\r\n    //@notice Can be called only when funding is not active and only by the owner\r\n    function startTokenSale(uint _fundingStartBlock, uint _fundingStopBlock) onlyOwner isNotFundable external returns (bool){\r\n      if(_fundingStopBlock <= _fundingStartBlock) throw;\r\n\r\n      fundingStartBlock = _fundingStartBlock;\r\n      fundingStopBlock = _fundingStopBlock;\r\n      fundingMode = true;\r\n      return fundingMode;\r\n    }\r\n\r\n    //@notice Function to get the current funding status.\r\n    function fundingStatus() external constant returns (bool){\r\n      return fundingMode;\r\n    }\r\n}", "OptimizationUsed": "1", "ContractName": "PillarToken", "ByteCode": "0x60606040523615620001d75763ffffffff60e060020a60003504166306fdde038114620001ff578063095ea7b3146200029657806309bf6e4214620002ba57806318160ddd14620002e957806323b872dd146200030e5780632417f31d146200033857806327ea06b8146200035d578063313ce56714620003825780633fb2386514620003a757806349a8d33714620003ce5780634bb278f314620003f3578063517125fa1462000408578063590e1ae3146200042d5780635c20eec6146200044257806364edfbf014620004675780636816521a146200047357806370a0823114620004a25780637160138c14620004d35780637ff9b596146200050257806386ce028514620005275780638da5cb5b146200054b578063915489f6146200057a57806395d89b41146200059f5780639a3d1f3f14620006365780639e3df4581462000665578063a2119a3a1462000694578063a9059cbb14620006b0578063b670a4b114620006d4578063c353c2de1462000703578063cd729a91146200072a578063d02f5463146200074f578063dd62ed3e146200077e578063e454158c14620007b5578063e7eaaa0514620007e4578063ebbfb9941462000809578063f20f24ec1462000836578063f2fde38b146200085d575b620001fd5b60105460ff161515620001ef5760006000fd5b620001f96200087e565b5b5b565b005b34156200020857fe5b6200021262000a0d565b6040805160208082528351818301528351919283929083019185019080838382156200025b575b8051825260208311156200025b57601f19909201916020918201910162000239565b505050905090810190601f168015620002885780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156200029f57fe5b620001fd600160a060020a036004351660243562000a30565b005b3415620002c357fe5b620002cd62000ad2565b60408051600160a060020a039092168252519081900360200190f35b3415620002f257fe5b620002fc62000ae1565b60408051918252519081900360200190f35b34156200031757fe5b620001fd600160a060020a036004358116906024351660443562000ae7565b005b34156200034157fe5b620002fc62000c01565b60408051918252519081900360200190f35b34156200036657fe5b620002fc62000c10565b60408051918252519081900360200190f35b34156200038b57fe5b620002fc62000c41565b60408051918252519081900360200190f35b3415620003b057fe5b620003ba62000c46565b604080519115158252519081900360200190f35b3415620003d757fe5b620002fc62000c50565b60408051918252519081900360200190f35b3415620003fc57fe5b620001fd62000c5f565b005b34156200041157fe5b620002fc62000e07565b60408051918252519081900360200190f35b34156200043657fe5b620001fd62000e16565b005b34156200044b57fe5b620002fc62000f45565b60408051918252519081900360200190f35b620001fd6200087e565b005b34156200047c57fe5b620002cd62000f54565b60408051600160a060020a039092168252519081900360200190f35b3415620004ab57fe5b620002fc600160a060020a036004351662000f63565b60408051918252519081900360200190f35b3415620004dc57fe5b620002cd62000f82565b60408051600160a060020a039092168252519081900360200190f35b34156200050b57fe5b620002fc62000f91565b60408051918252519081900360200190f35b34156200053057fe5b620001fd600160a060020a036004351660243562000f9c565b005b34156200055457fe5b620002cd6200106b565b60408051600160a060020a039092168252519081900360200190f35b34156200058357fe5b620002fc6200107a565b60408051918252519081900360200190f35b3415620005a857fe5b6200021262001089565b6040805160208082528351818301528351919283929083019185019080838382156200025b575b8051825260208311156200025b57601f19909201916020918201910162000239565b505050905090810190601f168015620002885780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156200063f57fe5b620002cd620010a9565b60408051600160a060020a039092168252519081900360200190f35b34156200066e57fe5b620002cd620010b8565b60408051600160a060020a039092168252519081900360200190f35b620002fc620010c7565b60408051918252519081900360200190f35b3415620006b957fe5b620001fd600160a060020a036004351660243562001142565b005b3415620006dd57fe5b620002cd62001204565b60408051600160a060020a039092168252519081900360200190f35b34156200070c57fe5b620003ba62001213565b604080519115158252519081900360200190f35b34156200073357fe5b620002fc6200125e565b60408051918252519081900360200190f35b34156200075857fe5b620002cd6200126d565b60408051600160a060020a039092168252519081900360200190f35b34156200078757fe5b620002fc600160a060020a03600435811690602435166200127c565b60408051918252519081900360200190f35b3415620007be57fe5b620002cd620012a9565b60408051600160a060020a039092168252519081900360200190f35b3415620007ed57fe5b620002fc620012b8565b60408051918252519081900360200190f35b34156200081257fe5b620003ba600435602435620012c8565b604080519115158252519081900360200190f35b34156200083f57fe5b620003ba6200132e565b604080519115158252519081900360200190f35b34156200086657fe5b620001fd600160a060020a036004351662001374565b005b601054600090819060ff161515620008965760006000fd5b600e54431015620008a75760006000fd5b600f54431115620008b85760006000fd5b6011546b01b4c0595a86aa1c100000009010620008d55760006000fd5b6601c6bf52634000341015620008eb5760006000fd5b62000904346601c6bf5263400063ffffffff620013c216565b91506001821015620009165760006000fd5b600d54604051600160a060020a03909116903480156108fc02916000818181858888f1935050505015156200094757fe5b6200096182670de0b6b3a764000063ffffffff620013e016565b60115490915062000979908263ffffffff6200141316565b60118190556b01b4c0595a86aa1c10000000901115620009995760006000fd5b600160a060020a033316600090815260016020526040902054620009c4908263ffffffff6200141316565b600160a060020a033316600081815260016020908152604080832094909455835185815293519293919260008051602062001cde8339815191529281900390910190a35b5b5050565b604080518082019091526006815260d160020a652824a62620a902602082015281565b801580159062000a645750600160a060020a0333811660009081526002602090815260408083209386168352929052205415155b1562000a705760006000fd5b600160a060020a03338116600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a35b5050565b600a54600160a060020a031681565b60005481565b60006060606436101562000afb5760006000fd5b600160a060020a03808616600090815260026020908152604080832033851684528252808320549388168352600190915290205490925062000b44908463ffffffff6200141316565b600160a060020a03808616600090815260016020526040808220939093559087168152205462000b7b908463ffffffff6200143116565b600160a060020a03861660009081526001602052604090205562000ba6828463ffffffff6200143116565b600160a060020a0380871660008181526002602090815260408083203386168452825291829020949094558051878152905192881693919260008051602062001cde833981519152929181900390910190a35b5b5050505050565b6a27b46536c66c8e3000000081565b6000600062000c376011546b01b4c0595a86aa1c100000006200143190919063ffffffff16565b90508091505b5090565b601281565b60105460ff165b90565b6a0d3c21bcecceda1000000081565b60105460009060ff16151562000c755760006000fd5b60035433600160a060020a0390811691161462000c925760006000fd5b600f54431162000ca25760006000fd5b6a1a784379d99db420000000601154101562000cbe5760006000fd5b600b54600160a060020a0316151562000cd75760006000fd5b6010805460ff1916905562000ceb6200145e565b60405190819003906000f080151562000d0057fe5b60048054600160a060020a031916600160a060020a0392831617908190551660009081526001602052604090206a0d3c21bcecceda10000000905562000d4562000c10565b9050600081111562000dce57600b54600a90600160a060020a03168262000d6b6200146f565b928352600160a060020a0390911660208301526040808301919091525190819003606001906000f080151562000d9d57fe5b60058054600160a060020a031916600160a060020a0392831617908190551660009081526001602052604090208190555b600d54604051600160a060020a039182169130163180156108fc02916000818181858888f19350505050151562000e0157fe5b5b5b5b50565b6a1a784379d99db42000000081565b601054600090819060ff16151562000e2e5760006000fd5b600f54431162000e3e5760006000fd5b6011546a1a784379d99db420000000901062000e5a5760006000fd5b600160a060020a033316600090815260016020526040902054915081151562000e835760006000fd5b600160a060020a03331660009081526001602052604081205562000ecf670de0b6b3a764000062000ec2846601c6bf5263400063ffffffff620013e016565b9063ffffffff620013c216565b604051909150600160a060020a0333169082156108fc029083906000818181858888f19350505050151562000f0057fe5b604080518281529051600160a060020a033316917fbb28353e4598c3b9199101a66e0989549b659a59a54d2c27fbb183f1932c8e6d919081900360200190a25b5b5050565b6a422ca8b0a00a425000000081565b600454600160a060020a031681565b600160a060020a0381166000908152600160205260409020545b919050565b600854600160a060020a031681565b6601c6bf5263400081565b60105460009060ff161562000fb15760006000fd5b60035433600160a060020a0390811691161462000fce5760006000fd5b62000fe882670de0b6b3a764000063ffffffff620013e016565b600c5490915062001000908263ffffffff6200141316565b600c8190556a27b46536c66c8e300000009011156200101f5760006000fd5b600160a060020a0383166000908152600160205260409020546200104a908263ffffffff6200141316565b600160a060020a0384166000908152600160205260409020555b5b5b505050565b600354600160a060020a031681565b6a6342fd08f00f637800000081565b604080518082019091526003815260e960020a6228262902602082015281565b600954600160a060020a031681565b600654600160a060020a031681565b60035460009033600160a060020a03908116911614620010e75760006000fd5b60408051600160a060020a0333811682523460208301523016318183015290517f52380f65eb7b0edd2cdf99c37d3a4df7f628f6c5e8653d6e538ba3ae21a668be9181900360600190a150600160a060020a033016315b5b90565b60406044361015620011545760006000fd5b600160a060020a0333166000908152600160205260409020546200117f908363ffffffff6200143116565b600160a060020a033381166000908152600160205260408082209390935590851681522054620011b6908363ffffffff6200141316565b600160a060020a0380851660008181526001602090815260409182902094909455805186815290519193339093169260008051602062001cde83398151915292918290030190a35b5b505050565b600554600160a060020a031681565b60035460009033600160a060020a03908116911614620012335760006000fd5b60105460ff1615620012455760006000fd5b506010805460ff19166001179081905560ff165b5b5b90565b6a069e10de76676d0800000081565b600d54600160a060020a031681565b600160a060020a038083166000908152600260209081526040808320938516835292905220545b92915050565b600754600160a060020a031681565b6b01b4c0595a86aa1c1000000081565b60035460009033600160a060020a03908116911614620012e85760006000fd5b60105460ff1615620012fa5760006000fd5b828211620013085760006000fd5b50600e829055600f8190556010805460ff19166001179081905560ff165b5b5b92915050565b60035460009033600160a060020a039081169116146200134e5760006000fd5b60105460ff161515620013615760006000fd5b506010805460ff1916905560015b5b5b90565b60035433600160a060020a03908116911614620013915760006000fd5b600160a060020a0381161562000e015760038054600160a060020a031916600160a060020a0383161790555b5b5b50565b600060008284811515620013d257fe5b0490508091505b5092915050565b600082820262001408841580620014025750838583811515620013ff57fe5b04145b6200144c565b8091505b5092915050565b600082820162001408848210156200144c565b8091505b5092915050565b600062001441838311156200144c565b508082035b92915050565b80151562000e015760006000fd5b5b50565b60405161043c806200148183390190565b60405161042180620018bd8339019056006060604052600060045560058054600160a060020a031916733f5d90d5cc0652aaa40519114d007bf119afe1cf179055341561003757fe5b5b60005b60008054600160a060020a03191633600160a060020a03161790555b5060028054600160a060020a03191633600160a060020a0316179055630163f50061008f42826401000000006100c181026102d91704565b600155600554600160a060020a031660009081526003602052604090206a0d3c21bcecceda1000000090555b506100fb565b60008282016100df848210156401000000006102f56100ea82021704565b8091505b5092915050565b8015156100f75760006000fd5b5b50565b6103328061010a6000396000f300606060405236156100675763ffffffff60e060020a60003504166315d3b5d88114610069578063213d7a091461008b57806349a8d337146100b75780638cb1e9c1146100d95780638da5cb5b146100fb578063a69df4b514610127578063f2fde38b14610131575bfe5b341561007157fe5b61007961014f565b60408051918252519081900360200190f35b341561009357fe5b61009b61015f565b60408051600160a060020a039092168252519081900360200190f35b34156100bf57fe5b61007961016e565b60408051918252519081900360200190f35b34156100e157fe5b61007961017d565b60408051918252519081900360200190f35b341561010357fe5b61009b610183565b60408051600160a060020a039092168252519081900360200190f35b61012f610192565b005b341561013957fe5b61012f600160a060020a036004351661028d565b005b6a0d3c21bcecceda100000005b90565b600554600160a060020a031681565b6a0d3c21bcecceda1000000081565b60015481565b600054600160a060020a031681565b6001544210156101a25760006000fd5b600454151561021c576002546040805160006020918201819052825160e060020a6370a08231028152600160a060020a033081166004830152935193909416936370a08231936024808301949391928390030190829087803b151561020357fe5b6102c65a03f1151561021157fe5b505060405151600455505b600254600554600480546040805160e060020a63a9059cbb028152600160a060020a0394851693810193909352602483019190915251919092169163a9059cbb91604480830192600092919082900301818387803b151561027957fe5b6102c65a03f1151561028757fe5b5050505b565b60005433600160a060020a039081169116146102a95760006000fd5b600160a060020a038116156102d45760008054600160a060020a031916600160a060020a0383161790555b5b5b50565b60008282016102ea848210156102f5565b8091505b5092915050565b8015156102d45760006000fd5b5b505600a165627a7a723058200c170b71dfe96dea1805f27c53a0944c2e7834e47ef1f9273b827d065207c8fa002960606040526000600555341561001157fe5b6040516060806104218339810160409081528151602083015191909201515b60005b60008054600160a060020a03191633600160a060020a03161790555b83151561005c5760006000fd5b600160a060020a03831615156100725760006000fd5b5060038054600160a060020a03191633600160a060020a03161790556301e1338083026100ac42826401000000006100d981026102b71704565b6001556002829055600160a060020a03831660009081526004602052604090208290555b50505050610113565b60008282016100f7848210156401000000006102a661010282021704565b8091505b5092915050565b80151561010f5760006000fd5b5b50565b6102ff806101226000396000f300606060405263ffffffff60e060020a60003504166315d3b5d881146100425780638da5cb5b14610064578063a69df4b514610090578063f2fde38b1461009a575bfe5b341561004a57fe5b6100526100b8565b60408051918252519081900360200190f35b341561006c57fe5b6100746100bf565b60408051600160a060020a039092168252519081900360200190f35b6100986100ce565b005b34156100a257fe5b610098600160a060020a036004351661020e565b005b6002545b90565b600054600160a060020a031681565b600060006001544210156100e25760006000fd5b600554151561015c576003546040805160006020918201819052825160e060020a6370a08231028152600160a060020a033081166004830152935193909416936370a08231936024808301949391928390030190829087803b151561014357fe5b6102c65a03f1151561015157fe5b505060405151600555505b600160a060020a033316600090815260046020526040812080549190556002546005549193506101a291610196908563ffffffff61025a16565b9063ffffffff61028916565b6003546040805160e060020a63a9059cbb028152600160a060020a03338116600483015260248201859052915193945091169163a9059cbb9160448082019260009290919082900301818387803b15156101f857fe5b6102c65a03f1151561020657fe5b5050505b5050565b60005433600160a060020a0390811691161461022a5760006000fd5b600160a060020a038116156102555760008054600160a060020a031916600160a060020a0383161790555b5b5b50565b600082820261027e841580610279575083858381151561027657fe5b04145b6102a6565b8091505b5092915050565b60006000828481151561029857fe5b0490508091505b5092915050565b8015156102555760006000fd5b5b50565b600082820161027e848210156102a6565b8091505b50929150505600a165627a7a72305820c4ae36a7545c31672d946cd91cf7a40cd2f28581238d70d2980c389d2add4afa0029ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820b71cf7a484b760ec630dc1e345f06a0251f84ac0978d90f31f40b76b770929730029"}