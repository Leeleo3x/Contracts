{"Runs": "200", "SwarmSource": "bzzr://b1ddac2405f8418ca3a5500ef546aec28a6756ee9d0444255dffeae7bdf66eda", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"setTransferAgent\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setReleaseAgent\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"receiver\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"mintAgents\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"setMintAgent\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"upgrade\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"setTokenInformation\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradeAgent\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"releaseTokenTransfer\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradeMaster\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getUpgradeState\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"transferAgents\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"released\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canUpgrade\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeSub\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"addApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalUpgraded\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeMul\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releaseAgent\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"setUpgradeAgent\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"subApproval\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"safeAdd\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"master\",\"type\":\"address\"}],\"name\":\"setUpgradeMaster\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"name\":\"_decimals\",\"type\":\"uint256\"},{\"name\":\"_mintable\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newName\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"newSymbol\",\"type\":\"string\"}],\"name\":\"UpdatedTokenInformation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Upgrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"UpgradeAgentSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"MintingAgentChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.11+commit.68ef5810", "ConstructorArguments": "00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000008457468657269796100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045249594100000000000000000000000000000000000000000000000000000000", "SourceCode": "pragma solidity ^0.4.11;\r\n\r\ncontract SafeMathLib {\r\n\r\n  function safeMul(uint a, uint b) returns (uint) {\r\n    uint c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function safeSub(uint a, uint b) returns (uint) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function safeAdd(uint a, uint b) returns (uint) {\r\n    uint c = a + b;\r\n    assert(c>=a);\r\n    return c;\r\n  }\r\n\r\n  function assert(bool assertion) private {\r\n    if (!assertion) throw;\r\n  }\r\n}\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  function Ownable() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  modifier onlyOwner() {\r\n    if (msg.sender != owner) {\r\n      throw;\r\n    }\r\n    _;\r\n  }\r\n\r\n\r\n  function transferOwnership(address newOwner) onlyOwner {\r\n    if (newOwner != address(0)) {\r\n      owner = newOwner;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\ncontract ERC20Basic {\r\n  uint public totalSupply;\r\n  function balanceOf(address who) constant returns (uint);\r\n  function transfer(address _to, uint _value) returns (bool success);\r\n  event Transfer(address indexed from, address indexed to, uint value);\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n  function allowance(address owner, address spender) constant returns (uint);\r\n  function transferFrom(address _from, address _to, uint _value) returns (bool success);\r\n  function approve(address _spender, uint _value) returns (bool success);\r\n  event Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\n\r\n\r\ncontract StandardToken is ERC20, SafeMathLib{\r\n  \r\n  event Minted(address receiver, uint amount);\r\n\r\n  \r\n  mapping(address => uint) balances;\r\n\r\n  \r\n  mapping (address => mapping (address => uint)) allowed;\r\n\r\n  modifier onlyPayloadSize(uint size) {\r\n     if(msg.data.length != size + 4) {\r\n       throw;\r\n     }\r\n     _;\r\n  }\r\n\r\n  function transfer(address _to, uint _value) onlyPayloadSize(2 * 32) returns (bool success) {\r\n   \r\n   \r\n    balances[msg.sender] = safeSub(balances[msg.sender],_value);\r\n    balances[_to] = safeAdd(balances[_to],_value);\r\n    Transfer(msg.sender, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint _value) returns (bool success) {\r\n    uint _allowance = allowed[_from][msg.sender];\r\n\r\n    balances[_to] = safeAdd(balances[_to],_value);\r\n    balances[_from] = safeSub(balances[_from],_value);\r\n    allowed[_from][msg.sender] = safeSub(_allowance,_value);\r\n    Transfer(_from, _to, _value);\r\n    return true;\r\n  }\r\n\r\n  function balanceOf(address _owner) constant returns (uint balance) {\r\n    return balances[_owner];\r\n  }\r\n\r\n  function approve(address _spender, uint _value) returns (bool success) {\r\n\r\n    if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;\r\n\r\n    allowed[msg.sender][_spender] = _value;\r\n    Approval(msg.sender, _spender, _value);\r\n    return true;\r\n  }\r\n\r\n  function allowance(address _owner, address _spender) constant returns (uint remaining) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n\r\n function addApproval(address _spender, uint _addedValue)\r\n  onlyPayloadSize(2 * 32)\r\n  returns (bool success) {\r\n      uint oldValue = allowed[msg.sender][_spender];\r\n      allowed[msg.sender][_spender] = safeAdd(oldValue,_addedValue);\r\n      Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n      return true;\r\n  }\r\n\r\n  function subApproval(address _spender, uint _subtractedValue)\r\n  onlyPayloadSize(2 * 32)\r\n  returns (bool success) {\r\n\r\n      uint oldVal = allowed[msg.sender][_spender];\r\n\r\n      if (_subtractedValue > oldVal) {\r\n          allowed[msg.sender][_spender] = 0;\r\n      } else {\r\n          allowed[msg.sender][_spender] = safeSub(oldVal,_subtractedValue);\r\n      }\r\n      Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n      return true;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\ncontract UpgradeAgent {\r\n\r\n  uint public originalSupply;\r\n\r\n  \r\n  function isUpgradeAgent() public constant returns (bool) {\r\n    return true;\r\n  }\r\n\r\n  function upgradeFrom(address _from, uint256 _value) public;\r\n\r\n}\r\n\r\n\r\n\r\n contract UpgradeableToken is StandardToken {\r\n\r\n  \r\n  address public upgradeMaster;\r\n\r\n  \r\n  UpgradeAgent public upgradeAgent;\r\n\r\n  \r\n  uint256 public totalUpgraded;\r\n\r\n  \r\n  enum UpgradeState {Unknown, NotAllowed, WaitingForAgent, ReadyToUpgrade, Upgrading}\r\n\r\n  \r\n  event Upgrade(address indexed _from, address indexed _to, uint256 _value);\r\n\r\n  \r\n  event UpgradeAgentSet(address agent);\r\n\r\n  \r\n  function UpgradeableToken(address _upgradeMaster) {\r\n    upgradeMaster = _upgradeMaster;\r\n  }\r\n\r\n  \r\n  function upgrade(uint256 value) public {\r\n\r\n      UpgradeState state = getUpgradeState();\r\n      if(!(state == UpgradeState.ReadyToUpgrade || state == UpgradeState.Upgrading)) {\r\n        \r\n        throw;\r\n      }\r\n\r\n      \r\n      if (value == 0) throw;\r\n\r\n      balances[msg.sender] = safeSub(balances[msg.sender],value);\r\n\r\n      \r\n      totalSupply = safeSub(totalSupply,value);\r\n      totalUpgraded = safeAdd(totalUpgraded,value);\r\n\r\n      \r\n      upgradeAgent.upgradeFrom(msg.sender, value);\r\n      Upgrade(msg.sender, upgradeAgent, value);\r\n  }\r\n\r\n \r\n  function setUpgradeAgent(address agent) external {\r\n\r\n      if(!canUpgrade()) {\r\n        \r\n        throw;\r\n      }\r\n\r\n      if (agent == 0x0) throw;\r\n      \r\n      if (msg.sender != upgradeMaster) throw;\r\n      \r\n      if (getUpgradeState() == UpgradeState.Upgrading) throw;\r\n\r\n      upgradeAgent = UpgradeAgent(agent);\r\n\r\n      \r\n      if(!upgradeAgent.isUpgradeAgent()) throw;\r\n      \r\n      if (upgradeAgent.originalSupply() != totalSupply) throw;\r\n\r\n      UpgradeAgentSet(upgradeAgent);\r\n  }\r\n\r\n  function getUpgradeState() public constant returns(UpgradeState) {\r\n    if(!canUpgrade()) return UpgradeState.NotAllowed;\r\n    else if(address(upgradeAgent) == 0x00) return UpgradeState.WaitingForAgent;\r\n    else if(totalUpgraded == 0) return UpgradeState.ReadyToUpgrade;\r\n    else return UpgradeState.Upgrading;\r\n  }\r\n\r\n  \r\n  function setUpgradeMaster(address master) public {\r\n      if (master == 0x0) throw;\r\n      if (msg.sender != upgradeMaster) throw;\r\n      upgradeMaster = master;\r\n  }\r\n\r\n  \r\n  function canUpgrade() public constant returns(bool) {\r\n     return true;\r\n  }\r\n\r\n}\r\n\r\n\r\ncontract ReleasableToken is ERC20, Ownable {\r\n\r\n  \r\n  address public releaseAgent;\r\n\r\n  \r\n  bool public released = false;\r\n\r\n  \r\n  mapping (address => bool) public transferAgents;\r\n\r\n\r\n  modifier canTransfer(address _sender) {\r\n\r\n    if(!released) {\r\n        if(!transferAgents[_sender]) {\r\n            throw;\r\n        }\r\n    }\r\n\r\n    _;\r\n  }\r\n\r\n\r\n  function setReleaseAgent(address addr) onlyOwner inReleaseState(false) public {\r\n    releaseAgent = addr;\r\n  }\r\n\r\n\r\n  function setTransferAgent(address addr, bool state) onlyOwner inReleaseState(false) public {\r\n    transferAgents[addr] = state;\r\n  }\r\n\r\n\r\n  function releaseTokenTransfer() public onlyReleaseAgent {\r\n    released = true;\r\n  }\r\n\r\n  \r\n  modifier inReleaseState(bool releaseState) {\r\n    if(releaseState != released) {\r\n        throw;\r\n    }\r\n    _;\r\n  }\r\n\r\n  \r\n  modifier onlyReleaseAgent() {\r\n    if(msg.sender != releaseAgent) {\r\n        throw;\r\n    }\r\n    _;\r\n  }\r\n\r\n  function transfer(address _to, uint _value) canTransfer(msg.sender) returns (bool success) {\r\n    \r\n   return super.transfer(_to, _value);\r\n  }\r\n\r\n  function transferFrom(address _from, address _to, uint _value) canTransfer(_from) returns (bool success) {\r\n    \r\n    return super.transferFrom(_from, _to, _value);\r\n  }\r\n\r\n}\r\n\r\ncontract MintableToken is StandardToken, Ownable {\r\n\r\n  bool public mintingFinished = false;\r\n\r\n  \r\n  mapping (address => bool) public mintAgents;\r\n\r\n  event MintingAgentChanged(address addr, bool state  );\r\n\r\n\r\n  function mint(address receiver, uint amount) onlyMintAgent canMint public {\r\n    totalSupply = safeAdd(totalSupply,amount);\r\n    balances[receiver] = safeAdd(balances[receiver],amount);\r\n\r\n\r\n    Transfer(0, receiver, amount);\r\n  }\r\n\r\n\r\n  function setMintAgent(address addr, bool state) onlyOwner canMint public {\r\n    mintAgents[addr] = state;\r\n    MintingAgentChanged(addr, state);\r\n  }\r\n\r\n  modifier onlyMintAgent() {\r\n    \r\n    if(!mintAgents[msg.sender]) {\r\n        throw;\r\n    }\r\n    _;\r\n  }\r\n\r\n  \r\n  modifier canMint() {\r\n    if(mintingFinished) throw;\r\n    _;\r\n  }\r\n}\r\n\r\n\r\ncontract CrowdsaleToken is ReleasableToken, MintableToken, UpgradeableToken {\r\n\r\n  event UpdatedTokenInformation(string newName, string newSymbol);\r\n\r\n  string public name;\r\n\r\n  string public symbol;\r\n\r\n  uint public decimals;\r\n\r\n  function CrowdsaleToken(string _name, string _symbol, uint _initialSupply, uint _decimals, bool _mintable)\r\n    UpgradeableToken(msg.sender) {\r\n\r\n    owner = msg.sender;\r\n\r\n    name = _name;\r\n    symbol = _symbol;\r\n\r\n    totalSupply = _initialSupply;\r\n\r\n    decimals = _decimals;\r\n\r\n    \r\n    balances[owner] = totalSupply;\r\n\r\n    if(totalSupply > 0) {\r\n      Minted(owner, totalSupply);\r\n    }\r\n\r\n    \r\n    if(!_mintable) {\r\n      mintingFinished = true;\r\n      if(totalSupply == 0) {\r\n        throw; \r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  function releaseTokenTransfer() public onlyReleaseAgent {\r\n    mintingFinished = true;\r\n    super.releaseTokenTransfer();\r\n  }\r\n\r\n\r\n  function canUpgrade() public constant returns(bool) {\r\n    return released && super.canUpgrade();\r\n  }\r\n\r\n\r\n  function setTokenInformation(string _name, string _symbol) onlyOwner {\r\n    name = _name;\r\n    symbol = _symbol;\r\n\r\n    UpdatedTokenInformation(name, symbol);\r\n  }\r\n\r\n}", "OptimizationUsed": "1", "ContractName": "CrowdsaleToken", "ByteCode": "0x606060405236156101b45763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166302f652a381146101b657806305d2035b146101d957806306fdde03146101fd578063095ea7b31461028d57806318160ddd146102c057806323b872dd146102e257806329ff4f531461031b578063313ce5671461033957806340c10f191461035b57806342c1867b1461037c57806343214675146103ac57806345977d03146103cf5780634eee966f146103e45780635de4ccb0146104795780635f412d4f146104a5578063600440cb146104b757806370a08231146104e35780638444b39114610511578063867c2857146105455780638da5cb5b1461057557806395d89b41146105a157806396132521146106315780639738968c14610655578063a293d1e814610679578063a9059cbb146106a1578063ac3cb72c146106d4578063c752ff6214610707578063d05c78da14610729578063d1f276d314610751578063d7e7088a1461077d578063dd62ed3e1461079b578063e2301d02146107cf578063e6cb901314610802578063f2fde38b1461082a578063ffeb7d7514610848575bfe5b34156101be57fe5b6101d7600160a060020a03600435166024351515610866565b005b34156101e157fe5b6101e96108c9565b604080519115158252519081900360200190f35b341561020557fe5b61020d6108d2565b604080516020808252835181830152835191928392908301918501908083838215610253575b80518252602083111561025357601f199092019160209182019101610233565b505050905090810190601f16801561027f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561029557fe5b6101e9600160a060020a0360043516602435610960565b604080519115158252519081900360200190f35b34156102c857fe5b6102d0610a07565b60408051918252519081900360200190f35b34156102ea57fe5b6101e9600160a060020a0360043581169060243516604435610a0d565b604080519115158252519081900360200190f35b341561032357fe5b6101d7600160a060020a0360043516610a65565b005b341561034157fe5b6102d0610acb565b60408051918252519081900360200190f35b341561036357fe5b6101d7600160a060020a0360043516602435610ad1565b005b341561038457fe5b6101e9600160a060020a0360043516610b96565b604080519115158252519081900360200190f35b34156103b457fe5b6101d7600160a060020a03600435166024351515610bab565b005b34156103d757fe5b6101d7600435610c3f565b005b34156103ec57fe5b6101d7600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284375050604080516020601f89358b01803591820183900483028401830190945280835297999881019791965091820194509250829150840183828082843750949650610daf95505050505050565b005b341561048157fe5b610489610f23565b60408051600160a060020a039092168252519081900360200190f35b34156104ad57fe5b6101d7610f32565b005b34156104bf57fe5b610489610f67565b60408051600160a060020a039092168252519081900360200190f35b34156104eb57fe5b6102d0600160a060020a0360043516610f76565b60408051918252519081900360200190f35b341561051957fe5b610521610f95565b6040518082600481111561053157fe5b60ff16815260200191505060405180910390f35b341561054d57fe5b6101e9600160a060020a0360043516610fe2565b604080519115158252519081900360200190f35b341561057d57fe5b610489610ff7565b60408051600160a060020a039092168252519081900360200190f35b34156105a957fe5b61020d611006565b604080516020808252835181830152835191928392908301918501908083838215610253575b80518252602083111561025357601f199092019160209182019101610233565b505050905090810190601f16801561027f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561063957fe5b6101e9611094565b604080519115158252519081900360200190f35b341561065d57fe5b6101e96110a4565b604080519115158252519081900360200190f35b341561068157fe5b6102d06004356024356110ca565b60408051918252519081900360200190f35b34156106a957fe5b6101e9600160a060020a03600435166024356110e3565b604080519115158252519081900360200190f35b34156106dc57fe5b6101e9600160a060020a0360043516602435611139565b604080519115158252519081900360200190f35b341561070f57fe5b6102d06111ed565b60408051918252519081900360200190f35b341561073157fe5b6102d06004356024356111f3565b60408051918252519081900360200190f35b341561075957fe5b610489611222565b60408051600160a060020a039092168252519081900360200190f35b341561078557fe5b6101d7600160a060020a0360043516611231565b005b34156107a357fe5b6102d0600160a060020a036004358116906024351661140e565b60408051918252519081900360200190f35b34156107d757fe5b6101e9600160a060020a036004351660243561143b565b604080519115158252519081900360200190f35b341561080a57fe5b6102d0600435602435611545565b60408051918252519081900360200190f35b341561083257fe5b6101d7600160a060020a0360043516611561565b005b341561085057fe5b6101d7600160a060020a03600435166115ba565b005b60035433600160a060020a039081169116146108825760006000fd5b60045460009060a060020a900460ff161561089d5760006000fd5b600160a060020a0383166000908152600560205260409020805460ff19168315151790555b5b505b5050565b60065460ff1681565b600b805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109585780601f1061092d57610100808354040283529160200191610958565b820191906000526020600020905b81548152906001019060200180831161093b57829003601f168201915b505050505081565b600081158015906109955750600160a060020a0333811660009081526002602090815260408083209387168352929052205415155b156109a05760006000fd5b600160a060020a03338116600081815260026020908152604080832094881680845294825291829020869055815186815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a35060015b92915050565b60005481565b600454600090849060a060020a900460ff161515610a4d57600160a060020a03811660009081526005602052604090205460ff161515610a4d5760006000fd5b5b610a59858585611618565b91505b5b509392505050565b60035433600160a060020a03908116911614610a815760006000fd5b60045460009060a060020a900460ff1615610a9c5760006000fd5b6004805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0384161790555b5b505b50565b600d5481565b600160a060020a03331660009081526007602052604090205460ff161515610af95760006000fd5b60065460ff1615610b0a5760006000fd5b610b1660005482611545565b6000908155600160a060020a038316815260016020526040902054610b3b9082611545565b600160a060020a03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35b5b5b5050565b60076020526000908152604090205460ff1681565b60035433600160a060020a03908116911614610bc75760006000fd5b60065460ff1615610bd85760006000fd5b600160a060020a038216600081815260076020908152604091829020805460ff191685151590811790915582519384529083015280517f4b0adf6c802794c7dde28a08a4e07131abcff3bf9603cd71f14f90bec7865efa9281900390910190a15b5b5b5050565b6000610c49610f95565b905060035b816004811115610c5a57fe5b1480610c72575060045b816004811115610c7057fe5b145b1515610c7e5760006000fd5b811515610c8b5760006000fd5b600160a060020a033316600090815260016020526040902054610cae90836110ca565b600160a060020a03331660009081526001602052604081209190915554610cd590836110ca565b600055600a54610ce59083611545565b600a55600954604080517f753e88e5000000000000000000000000000000000000000000000000000000008152600160a060020a033381166004830152602482018690529151919092169163753e88e591604480830192600092919082900301818387803b1515610d5257fe5b6102c65a03f11515610d6057fe5b5050600954604080518581529051600160a060020a03928316935033909216917f7e5c344a8141a805725cb476f76c6953b842222b967edd1f78ddb6e8b3f397ac9181900360200190a35b5050565b60035433600160a060020a03908116911614610dcb5760006000fd5b8151610dde90600b90602085019061183f565b508051610df290600c90602084019061183f565b5060408051818152600b8054600260001961010060018416150201909116049282018390527fd131ab1e6f279deea74e13a18477e13e2107deb6dc8ae955648948be5841fb46929091600c9181906020820190606083019086908015610e995780601f10610e6e57610100808354040283529160200191610e99565b820191906000526020600020905b815481529060010190602001808311610e7c57829003601f168201915b5050838103825284546002600019610100600184161502019091160480825260209091019085908015610f0d5780601f10610ee257610100808354040283529160200191610f0d565b820191906000526020600020905b815481529060010190602001808311610ef057829003601f168201915b505094505050505060405180910390a15b5b5050565b600954600160a060020a031681565b60045433600160a060020a03908116911614610f4e5760006000fd5b6006805460ff19166001179055610f6361171b565b5b5b565b600854600160a060020a031681565b600160a060020a0381166000908152600160205260409020545b919050565b6000610f9f6110a4565b1515610fad57506001610fdc565b600954600160a060020a03161515610fc757506002610fdc565b600a541515610fd857506003610fdc565b5060045b5b5b5b90565b60056020526000908152604090205460ff1681565b600354600160a060020a031681565b600c805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109585780601f1061092d57610100808354040283529160200191610958565b820191906000526020600020905b81548152906001019060200180831161093b57829003601f168201915b505050505081565b60045460a060020a900460ff1681565b60045460009060a060020a900460ff1680156110c357506110c361175f565b5b90505b90565b60006110d883831115611765565b508082035b92915050565b600454600090339060a060020a900460ff16151561112357600160a060020a03811660009081526005602052604090205460ff1615156111235760006000fd5b5b61112e8484611776565b91505b5b5092915050565b60008060403660441461114c5760006000fd5b600160a060020a03338116600090815260026020908152604080832093891683529290522054915061117e8285611545565b600160a060020a033381166000818152600260209081526040808320948b168084529482529182902085905581519485529051929391927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3600192505b5b505092915050565b600a5481565b6000828202611217841580611212575083858381151561120f57fe5b04145b611765565b8091505b5092915050565b600454600160a060020a031681565b6112396110a4565b15156112455760006000fd5b600160a060020a038116151561125b5760006000fd5b60085433600160a060020a039081169116146112775760006000fd5b60045b611282610f95565b600481111561128d57fe5b14156112995760006000fd5b6009805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038381169190911791829055604080516000602091820181905282517f61d3d7a6000000000000000000000000000000000000000000000000000000008152925194909316936361d3d7a6936004808501948390030190829087803b151561131f57fe5b6102c65a03f1151561132d57fe5b505060405151151590506113415760006000fd5b6000805460095460408051602090810185905281517f4b2ba0dd00000000000000000000000000000000000000000000000000000000815291519394600160a060020a0390931693634b2ba0dd936004808501948390030190829087803b15156113a757fe5b6102c65a03f115156113b557fe5b5050604051519190911490506113cb5760006000fd5b60095460408051600160a060020a039092168252517f7845d5aa74cc410e35571258d954f23b82276e160fe8c188fa80566580f279cc9181900360200190a15b50565b600160a060020a038083166000908152600260209081526040808320938516835292905220545b92915050565b60008060403660441461144e5760006000fd5b600160a060020a033381166000908152600260209081526040808320938916835292905220549150818411156114ab57600160a060020a0333811660009081526002602090815260408083209389168352929052908120556114dc565b61117e82856110ca565b600160a060020a033381166000908152600260209081526040808320938a16835292905220555b600160a060020a033381166000818152600260209081526040808320948a168084529482529182902054825190815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3600192505b5b505092915050565b600082820161121784821015611765565b8091505b5092915050565b60035433600160a060020a0390811691161461157d5760006000fd5b600160a060020a03811615610ac8576003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b5b50565b600160a060020a03811615156115d05760006000fd5b60085433600160a060020a039081169116146115ec5760006000fd5b6008805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b600160a060020a0380841660009081526002602090815260408083203385168452825280832054938616835260019091528120549091906116599084611545565b600160a060020a03808616600090815260016020526040808220939093559087168152205461168890846110ca565b600160a060020a0386166000908152600160205260409020556116ab81846110ca565b600160a060020a038087166000818152600260209081526040808320338616845282529182902094909455805187815290519288169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3600191505b509392505050565b60045433600160a060020a039081169116146117375760006000fd5b6004805474ff0000000000000000000000000000000000000000191660a060020a1790555b5b565b60015b90565b801515610ac85760006000fd5b5b50565b60006040366044146117885760006000fd5b600160a060020a0333166000908152600160205260409020546117ab90846110ca565b600160a060020a0333811660009081526001602052604080822093909355908616815220546117da9084611545565b600160a060020a038086166000818152600160209081526040918290209490945580518781529051919333909316927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3600191505b5b5092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061188057805160ff19168380011785556118ad565b828001600101855582156118ad579182015b828111156118ad578251825591602001919060010190611892565b5b506118ba9291506118be565b5090565b610fdc91905b808211156118ba57600081556001016118c4565b5090565b905600a165627a7a72305820b1ddac2405f8418ca3a5500ef546aec28a6756ee9d0444255dffeae7bdf66eda0029"}