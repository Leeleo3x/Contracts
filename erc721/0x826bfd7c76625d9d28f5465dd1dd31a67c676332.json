{"Runs": "200", "SwarmSource": "bzzr://dde3b9f0be6f153b353add822338c34dbfb434ef95de8c5d5f35f5bcbbc01fb5", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"mintToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementsERC721\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"total\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"tokenType\",\"type\":\"uint8\"},{\"name\":\"amount\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"superUsers\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenType\",\"outputs\":[{\"name\":\"tokenType\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"setSuperUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"superTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"takeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenAmount\",\"outputs\":[{\"name\":\"tokenAmount\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.25+commit.59dbf8f1", "ConstructorArguments": "", "SourceCode": "pragma solidity ^0.4.25;\r\n\r\n\r\ncontract Ownable {\r\n    \r\n    address public owner;\r\n    mapping (address => bool) public superUsers;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    \r\n    constructor() public {\r\n        owner = msg.sender;\r\n        superUsers[msg.sender] = true;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n     modifier onlySuperUser() {\r\n        require(superUsers[msg.sender] == true);\r\n        _;\r\n    }\r\n    \r\n    function setSuperUser(address user) public onlyOwner {\r\n        superUsers[user] = true;\r\n    }\r\n    \r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract SuperToken is Ownable {\r\n    struct Token {\r\n        address owner;\r\n        uint8 tokenType;\r\n        uint32 amount;\r\n    }\r\n\r\n    Token[] public tokens;\r\n    bool public implementsERC721 = true;\r\n    string public name = \"ever test token\";\r\n    string public symbol = \"ST\";\r\n    mapping(uint256 => address) public approved;\r\n    mapping(address => uint256) public balances;\r\n    \r\n    \r\n    modifier onlyTokenOwner(uint256 _tokenId) {\r\n        require(tokens[_tokenId].owner == msg.sender);\r\n        _;\r\n    }\r\n   \r\n    function mintToken(address _owner) public onlyOwner() {\r\n        tokens.length ++;\r\n        Token storage Token_demo = tokens[tokens.length - 1];\r\n        Token_demo.owner = _owner;\r\n        balances[_owner] += 1;\r\n        emit Transfer(address(0), _owner, tokens.length - 1);\r\n    }\r\n\r\n    function getTokenType(uint256 _tokenId) view public returns (uint8 tokenType) {\r\n        tokenType = tokens[_tokenId].tokenType;\r\n    }\r\n\r\n    function getTokenAmount(uint256 _tokenId) view public returns (uint32 tokenAmount) {\r\n        tokenAmount = tokens[_tokenId].amount;\r\n    }\r\n\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    function totalSupply() public view returns (uint256 total) {\r\n        total = tokens.length;\r\n    }\r\n\r\n    function balanceOf(address _owner) public view returns (uint256 balance){\r\n        balance = balances[_owner];\r\n    }\r\n\r\n    function ownerOf(uint256 _tokenId) public view returns (address owner){\r\n        owner = tokens[_tokenId].owner;\r\n    }\r\n\r\n    function _transfer(address _from, address _to, uint256 _tokenId) internal {\r\n        require(tokens[_tokenId].owner == _from);\r\n        tokens[_tokenId].owner = _to;\r\n        approved[_tokenId] = address(0);\r\n        balances[_from] -= 1;\r\n        balances[_to] += 1;\r\n        emit Transfer(_from, _to, _tokenId);\r\n    }\r\n\r\n    function transfer(address _to, uint256 _tokenId) public onlyTokenOwner(_tokenId) returns (bool){\r\n        _transfer(msg.sender, _to, _tokenId);\r\n        return true;\r\n    }\r\n    \r\n    function superTransfer(address _from, address _to, uint256 _tokenId) public onlySuperUser returns(bool){\r\n        _transfer(_from, _to, _tokenId);\r\n        return true;\r\n    }\r\n    \r\n    function approve(address _to, uint256 _tokenId) public onlyTokenOwner(_tokenId){\r\n        approved[_tokenId] = _to;\r\n        emit Approval(msg.sender, _to, _tokenId);\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _tokenId) public returns (bool) {\r\n        require(approved[_tokenId] == msg.sender);\r\n        _transfer(_from, _to, _tokenId);\r\n        return true;\r\n    }\r\n\r\n\r\n    function takeOwnership(uint256 _tokenId) public {\r\n        require(approved[_tokenId] == msg.sender);\r\n        _transfer(ownerOf(_tokenId), msg.sender, _tokenId);\r\n    }\r\n}", "OptimizationUsed": "1", "ContractName": "SuperToken", "ByteCode": "0x60806040526004361061011c5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301173a74811461012157806306fdde0314610144578063095ea7b3146101ce5780631051db34146101f257806318160ddd1461021b57806323b872dd1461024257806327e235e31461026c5780634f64b2be1461028d5780636352211e146102d5578063654dcefa1461030957806370a082311461032a57806376aed2e11461034b5780637d4061e6146103795780638cd9ed99146103915780638da5cb5b146103b2578063905bd5e4146103c757806395d89b41146103f1578063a9059cbb14610406578063b2e6ceeb1461042a578063c2507ac114610442578063f2fde38b14610473575b600080fd5b34801561012d57600080fd5b50610142600160a060020a0360043516610494565b005b34801561015057600080fd5b50610159610552565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561019357818101518382015260200161017b565b50505050905090810190601f1680156101c05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101da57600080fd5b50610142600160a060020a03600435166024356105e0565b3480156101fe57600080fd5b50610207610678565b604080519115158252519081900360200190f35b34801561022757600080fd5b50610230610681565b60408051918252519081900360200190f35b34801561024e57600080fd5b50610207600160a060020a0360043581169060243516604435610687565b34801561027857600080fd5b50610230600160a060020a03600435166106bf565b34801561029957600080fd5b506102a56004356106d1565b60408051600160a060020a03909416845260ff909216602084015263ffffffff1682820152519081900360600190f35b3480156102e157600080fd5b506102ed600435610735565b60408051600160a060020a039092168252519081900360200190f35b34801561031557600080fd5b50610207600160a060020a0360043516610761565b34801561033657600080fd5b50610230600160a060020a0360043516610776565b34801561035757600080fd5b50610363600435610791565b6040805160ff9092168252519081900360200190f35b34801561038557600080fd5b506102ed6004356107cf565b34801561039d57600080fd5b50610142600160a060020a03600435166107ea565b3480156103be57600080fd5b506102ed610828565b3480156103d357600080fd5b50610207600160a060020a0360043581169060243516604435610837565b3480156103fd57600080fd5b50610159610858565b34801561041257600080fd5b50610207600160a060020a03600435166024356108b3565b34801561043657600080fd5b506101426004356108f9565b34801561044e57600080fd5b5061045a600435610932565b6040805163ffffffff9092168252519081900360200190f35b34801561047f57600080fd5b50610142600160a060020a0360043516610974565b60008054600160a060020a031633146104ac57600080fd5b60028054906104be9060018301610aee565b506002805460001981019081106104d157fe5b600091825260208083209091018054600160a060020a03861673ffffffffffffffffffffffffffffffffffffffff1990911681178255808452600790925260408084208054600101905560025490519194506000190192907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105d85780601f106105ad576101008083540402835291602001916105d8565b820191906000526020600020905b8154815290600101906020018083116105bb57829003601f168201915b505050505081565b6002805482913391839081106105f257fe5b600091825260209091200154600160a060020a03161461061157600080fd5b600082815260066020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0387169081179091559051849233917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a4505050565b60035460ff1681565b60025490565b600081815260066020526040812054600160a060020a031633146106aa57600080fd5b6106b5848484610a08565b5060019392505050565b60076020526000908152604090205481565b60028054829081106106df57fe5b600091825260209091200154600160a060020a038116915074010000000000000000000000000000000000000000810460ff16907501000000000000000000000000000000000000000000900463ffffffff1683565b600060028281548110151561074657fe5b600091825260209091200154600160a060020a031692915050565b60016020526000908152604090205460ff1681565b600160a060020a031660009081526007602052604090205490565b60006002828154811015156107a257fe5b60009182526020909120015474010000000000000000000000000000000000000000900460ff1692915050565b600660205260009081526040902054600160a060020a031681565b600054600160a060020a0316331461080157600080fd5b600160a060020a03166000908152600160208190526040909120805460ff19169091179055565b600054600160a060020a031681565b33600090815260016020819052604082205460ff161515146106aa57600080fd5b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105d85780601f106105ad576101008083540402835291602001916105d8565b60008133600160a060020a03166002828154811015156108cf57fe5b600091825260209091200154600160a060020a0316146108ee57600080fd5b6106b5338585610a08565b600081815260066020526040902054600160a060020a0316331461091c57600080fd5b61092f61092882610735565b3383610a08565b50565b600060028281548110151561094357fe5b6000918252602090912001547501000000000000000000000000000000000000000000900463ffffffff1692915050565b600054600160a060020a0316331461098b57600080fd5b600160a060020a03811615156109a057600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b82600160a060020a0316600282815481101515610a2157fe5b600091825260209091200154600160a060020a031614610a4057600080fd5b81600282815481101515610a5057fe5b600091825260208083209091018054600160a060020a0394851673ffffffffffffffffffffffffffffffffffffffff19918216179091558483526006825260408084208054909216909155868416808452600790925280832080546000190190559285168083528383208054600101905592518493927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b815481835581811115610b1257600083815260209020610b12918101908301610b17565b505050565b610b5191905b80821115610b4d57805478ffffffffffffffffffffffffffffffffffffffffffffffffff19168155600101610b1d565b5090565b905600a165627a7a72305820dde3b9f0be6f153b353add822338c34dbfb434ef95de8c5d5f35f5bcbbc01fb50029"}