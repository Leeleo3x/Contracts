{"Runs": "200", "SwarmSource": "bzzr://d7da1e53d56277042babef411ed0e9f515e3553ec81a1f7c8d87a27dba1db214", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementsERC721\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenIndexToOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"pack\",\"type\":\"uint256\"},{\"name\":\"uri\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"option\",\"type\":\"uint256\"},{\"name\":\"struri\",\"type\":\"string\"}],\"name\":\"getToken\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenMetadata\",\"outputs\":[{\"name\":\"infoUrl\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"count\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenIndexToApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"idToken\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.25+commit.59dbf8f1", "ConstructorArguments": "", "SourceCode": "pragma solidity ^0.4.25;\r\n\r\n/*\r\nVERSION DATE: 24/10/2018\r\n*/\r\n\r\ncontract ERC721\r\n{\r\n\tstring constant public   name = \"SuperFan\";\r\n\tstring constant public symbol = \"SFT\";\r\n\r\n\tuint256 public totalSupply;\r\n\t\r\n\tstruct Token\r\n\t{\r\n\t\tuint256 price;\r\n\t\tuint256\tpack;\r\n\t\tstring uri;\r\n\t}\r\n\t\r\n\tevent Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\tevent Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\t\r\n\tmapping (uint256 => Token) public tokens;\r\n\t\r\n\t// A mapping from tokens IDs to the address that owns them. All tokens have some valid owner address\r\n\tmapping (uint256 => address) public tokenIndexToOwner;\r\n\t\r\n\t// A mapping from owner address to count of tokens that address owns.\t\r\n\tmapping (address => uint256) ownershipTokenCount; \r\n\r\n\t// A mapping from tokenIDs to an address that has been approved to call transferFrom().\r\n\t// Each token can only have one approved address for transfer at any time.\r\n\t// A zero value means no approval is outstanding.\r\n\tmapping (uint256 => address) public tokenIndexToApproved;\r\n\t\r\n\tfunction implementsERC721() public pure returns (bool)\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction balanceOf(address _owner) public view returns (uint256 count) \r\n\t{\r\n\t\treturn ownershipTokenCount[_owner];\r\n\t}\r\n\t\r\n\tfunction ownerOf(uint256 _tokenId) public view returns (address owner)\r\n\t{\r\n\t\towner = tokenIndexToOwner[_tokenId];\r\n\t\trequire(owner != address(0));\r\n\t}\r\n\t\r\n\t// Marks an address as being approved for transferFrom(), overwriting any previous approval. \r\n\t// Setting _approved to address(0) clears all transfer approval.\r\n\tfunction _approve(uint256 _tokenId, address _approved) internal \r\n\t{\r\n\t\ttokenIndexToApproved[_tokenId] = _approved;\r\n\t}\r\n\t\r\n\t// Checks if a given address currently has transferApproval for a particular token.\r\n\t// param _claimant the address we are confirming token is approved for.\r\n\t// param _tokenId token id, only valid when > 0\r\n\tfunction _approvedFor(address _claimant, uint256 _tokenId) internal view returns (bool)\r\n\t{\r\n\t\treturn tokenIndexToApproved[_tokenId] == _claimant;\r\n\t}\r\n\t\r\n\tfunction approve( address _to, uint256 _tokenId ) public\r\n\t{\r\n\t\t// Only an owner can grant transfer approval.\r\n\t\trequire(_owns(msg.sender, _tokenId));\r\n\r\n\t\t// Register the approval (replacing any previous approval).\r\n\t\t_approve(_tokenId, _to);\r\n\r\n\t\t// Emit approval event.\r\n\t\temit Approval(msg.sender, _to, _tokenId);\r\n\t}\r\n\t\r\n\tfunction transferFrom( address _from, address _to, uint256 _tokenId ) public\r\n\t{\r\n\t\t// Check for approval and valid ownership\r\n\t\trequire(_approvedFor(msg.sender, _tokenId));\r\n\t\trequire(_owns(_from, _tokenId));\r\n\r\n\t\t// Reassign ownership (also clears pending approvals and emits Transfer event).\r\n\t\t_transfer(_from, _to, _tokenId);\r\n\t}\r\n\t\r\n\tfunction _owns(address _claimant, uint256 _tokenId) internal view returns (bool)\r\n\t{\r\n\t\treturn tokenIndexToOwner[_tokenId] == _claimant;\r\n\t}\r\n\t\r\n\tfunction _transfer(address _from, address _to, uint256 _tokenId) internal \r\n\t{\r\n\t\townershipTokenCount[_to]++;\r\n\t\ttokenIndexToOwner[_tokenId] = _to;\r\n\r\n\t\tif (_from != address(0)) \r\n\t\t{\r\n\t\t\townershipTokenCount[_from]--;\r\n\t\t\t// clear any previously approved ownership exchange\r\n\t\t\tdelete tokenIndexToApproved[_tokenId];\r\n\t\t}\r\n\t\t\r\n\t\temit Transfer(_from, _to, _tokenId);\r\n\t\t\t\r\n\t}\r\n\t\r\n\tfunction transfer(address _to, uint256 _tokenId) public\r\n\t{\r\n\t\trequire(_to != address(0));\r\n\t\trequire(_owns(msg.sender, _tokenId));\r\n\t\t_transfer(msg.sender, _to, _tokenId);\r\n\t}\r\n\t\r\n\t/*\r\n\tfunction transfers(address _to, uint256[] _tokens) public\r\n    {\r\n\t\trequire(_to != address(0));\r\n        for(uint i = 0; i < _tokens.length; i++)\r\n        {\r\n\t\t\trequire(_owns(msg.sender, _tokens[i]));\r\n\t\t\t_transfer(msg.sender, _to, _tokens[i]);\r\n        }\r\n    }\r\n\t*/\r\n\t\r\n\tfunction tokenMetadata(uint256 _tokenId) public view returns (string infoUrl)\r\n\t{\r\n\t\tToken storage tkn = tokens[_tokenId];\r\n\t\treturn tkn.uri;\r\n\t}\r\n\t\r\n\t/*\r\n\tfunction tokenURI(uint256 _tokenId) public view returns (string infoUrl)\r\n\t{\r\n\t\tToken storage tkn = tokens[_tokenId];\r\n\t\treturn tkn.uri;\r\n\t}\r\n\t*/\r\n\r\n}\r\n\r\n/*\r\ncontract Owned \r\n{\r\n    address private candidate;\r\n\taddress public owner;\r\n\r\n\tmapping(address => bool) public admins;\r\n\t\r\n    constructor() public \r\n\t{\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function changeOwner(address newOwner) public \r\n\t{\r\n\t\trequire(msg.sender == owner);\r\n        candidate = newOwner;\r\n    }\r\n\t\r\n\tfunction confirmOwner() public \r\n\t{\r\n        require(candidate == msg.sender);\r\n\t\towner = candidate;\r\n    }\r\n\t\r\n    function addAdmin(address addr) external \r\n\t{\r\n\t\trequire(msg.sender == owner);\r\n        admins[addr] = true;\r\n    }\r\n\r\n    function removeAdmin(address addr) external\r\n\t{\r\n\t\trequire(msg.sender == owner);\r\n        admins[addr] = false;\r\n    }\r\n\t\r\n\tmodifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\t\r\n}\r\n*/\r\n\r\ncontract SuperFan is ERC721 /*, Owned*/\r\n{\r\n\tconstructor() public {}\r\n\t\r\n\tevent LogToken(address user, uint256 idToken, uint256 amount);\r\n\t\r\n\tfunction getToken(uint256 option, string struri) public payable\r\n\t{\r\n\t\r\n\t\tToken memory _token = Token({\r\n\t\t\tprice: msg.value,\r\n\t\t\tpack : option,\r\n\t\t\turi : struri\r\n\t\t});\r\n\r\n\t\tuint256 newTokenId = totalSupply++;\r\n\t\ttokens[newTokenId] = _token;\r\n\t\t\r\n\t\t_transfer(0x0, msg.sender, newTokenId);\r\n\t\t\r\n\t\t//emit LogToken( msg.sender, newTokenId, msg.value);\r\n\t}\r\n\t\r\n}", "OptimizationUsed": "1", "ContractName": "SuperFan", "ByteCode": "0x6080604052600436106100cf5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100d4578063095ea7b31461015e5780631051db341461018457806318160ddd146101ad5780631d36e06c146101d457806323b872dd146102085780634f64b2be146102325780635fa3b2bc146102d05780636352211e146103215780636914db601461033957806370a082311461035157806395d89b4114610372578063a8bd9c3214610387578063a9059cbb1461039f575b600080fd5b3480156100e057600080fd5b506100e96103c3565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012357818101518382015260200161010b565b50505050905090810190601f1680156101505780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561016a57600080fd5b50610182600160a060020a03600435166024356103fa565b005b34801561019057600080fd5b50610199610455565b604080519115158252519081900360200190f35b3480156101b957600080fd5b506101c261045b565b60408051918252519081900360200190f35b3480156101e057600080fd5b506101ec600435610461565b60408051600160a060020a039092168252519081900360200190f35b34801561021457600080fd5b50610182600160a060020a036004358116906024351660443561047c565b34801561023e57600080fd5b5061024a6004356104b6565b6040518084815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561029357818101518382015260200161027b565b50505050905090810190601f1680156102c05780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b60408051602060046024803582810135601f81018590048502860185019096528585526101829583359536956044949193909101919081908401838280828437509497506105789650505050505050565b34801561032d57600080fd5b506101ec6004356105ed565b34801561034557600080fd5b506100e9600435610616565b34801561035d57600080fd5b506101c2600160a060020a03600435166106bc565b34801561037e57600080fd5b506100e96106d7565b34801561039357600080fd5b506101ec60043561070e565b3480156103ab57600080fd5b50610182600160a060020a0360043516602435610729565b60408051808201909152600881527f537570657246616e000000000000000000000000000000000000000000000000602082015281565b6104043382610762565b151561040f57600080fd5b6104198183610782565b6040518190600160a060020a0384169033907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590600090a45050565b60015b90565b60005481565b600260205260009081526040902054600160a060020a031681565b61048633826107bd565b151561049157600080fd5b61049b8382610762565b15156104a657600080fd5b6104b18383836107dd565b505050565b6001602052806000526040600020600091509050806000015490806001015490806002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056e5780601f106105435761010080835404028352916020019161056e565b820191906000526020600020905b81548152906001019060200180831161055157829003601f168201915b5050505050905083565b6105806108be565b506040805160608101825234815260208082018581528284018581526000805460018082018355818352808652969091208551815592519583019590955551805193949385936105d79260028501929101906108e0565b509050506105e7600033836107dd565b50505050565b600081815260026020526040902054600160a060020a031680151561061157600080fd5b919050565b6000818152600160208181526040928390206002808201805486519581161561010002600019011691909104601f81018490048402850184019095528484526060949193929091908301828280156106af5780601f10610684576101008083540402835291602001916106af565b820191906000526020600020905b81548152906001019060200180831161069257829003601f168201915b5050505050915050919050565b600160a060020a031660009081526003602052604090205490565b60408051808201909152600381527f5346540000000000000000000000000000000000000000000000000000000000602082015281565b600460205260009081526040902054600160a060020a031681565b600160a060020a038216151561073e57600080fd5b6107483382610762565b151561075357600080fd5b61075e3383836107dd565b5050565b600090815260026020526040902054600160a060020a0391821691161490565b600091825260046020526040909120805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909216919091179055565b600090815260046020526040902054600160a060020a0391821691161490565b600160a060020a0380831660008181526003602090815260408083208054600101905585835260029091529020805473ffffffffffffffffffffffffffffffffffffffff1916909117905583161561087857600160a060020a0383166000908152600360209081526040808320805460001901905583835260049091529020805473ffffffffffffffffffffffffffffffffffffffff191690555b8082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6060604051908101604052806000815260200160008152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061092157805160ff191683800117855561094e565b8280016001018555821561094e579182015b8281111561094e578251825591602001919060010190610933565b5061095a92915061095e565b5090565b61045891905b8082111561095a57600081556001016109645600a165627a7a72305820d7da1e53d56277042babef411ed0e9f515e3553ec81a1f7c8d87a27dba1db2140029"}