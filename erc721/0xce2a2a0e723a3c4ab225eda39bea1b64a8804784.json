{"Runs": "200", "SwarmSource": "bzzr://72746b80facd4d6feaca34a8498cae91f8af3fdb9c897ad78b49a53e68a6ac50", "ABI": "[{\"constant\":true,\"inputs\":[{\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementsERC721\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"InterfaceId_ERC165\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCoreAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"chainIDToTokenID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenID\",\"type\":\"uint256\"},{\"name\":\"_startingPrice\",\"type\":\"uint256\"},{\"name\":\"_endingPrice\",\"type\":\"uint256\"},{\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"createSaleAuction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_chainID\",\"type\":\"bytes32\"},{\"name\":\"_author\",\"type\":\"bytes32\"},{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_metaUrl\",\"type\":\"string\"}],\"name\":\"createAuthorDrawings\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSaleAuctionAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_chainID\",\"type\":\"bytes32\"}],\"name\":\"getChainDrawingsByChainID\",\"outputs\":[{\"name\":\"tokenID\",\"type\":\"uint256\"},{\"name\":\"chainID\",\"type\":\"bytes32\"},{\"name\":\"author\",\"type\":\"bytes32\"},{\"name\":\"createTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getTokensCountOfUser\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_chainID\",\"type\":\"bytes32\"},{\"name\":\"_author\",\"type\":\"bytes32\"},{\"name\":\"_startingPrice\",\"type\":\"uint256\"},{\"name\":\"_endingPrice\",\"type\":\"uint256\"},{\"name\":\"_duration\",\"type\":\"uint256\"},{\"name\":\"_metaUrl\",\"type\":\"string\"}],\"name\":\"createInternalAuction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getAllTokensOfUser\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newContractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setSaleAuctionAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"setNewAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBatchCreateDrawingsAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"name\":\"ownerTokens\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getFund\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawAuctionBalances\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getAllChainIDsOfUser\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getChainDrawings\",\"outputs\":[{\"name\":\"tokenID\",\"type\":\"uint256\"},{\"name\":\"chainID\",\"type\":\"bytes32\"},{\"name\":\"author\",\"type\":\"bytes32\"},{\"name\":\"createTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"batchCreateDrawings\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setBatchCreateDrawingsAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"saleAuction\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setNewOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"drawingsID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"chainID\",\"type\":\"bytes32\"}],\"name\":\"Create\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractUpgrade\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.24+commit.e67f0147", "ConstructorArguments": "", "SourceCode": "pragma solidity ^0.4.24;\r\n\r\n// File: contracts/SafeMath.sol\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256){\r\n    if(a==0){\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256){\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256){\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    require(b != 0);\r\n    return a % b;\r\n  }\r\n}\r\n\r\n// File: contracts/AddressUtils.sol\r\n\r\n//Utility library of inline functions on addresses\r\nlibrary AddressUtils {\r\n  function isContract(address addr) internal view returns (bool) {\r\n    uint256 size;\r\n    assembly { size := extcodesize(addr) }\r\n    return size > 0;\r\n  }\r\n}\r\n\r\n// File: contracts/ERC165.sol\r\n\r\ninterface ERC165 {\r\n  function supportsInterface(bytes4 _interfaceId) external view returns (bool);\r\n}\r\n\r\n// File: contracts/ERC721Basic.sol\r\n\r\ncontract ERC721Basic is ERC165 {\r\n  bytes4 internal constant InterfaceId_ERC721 = 0x80ac58cd;\r\n  bytes4 internal constant InterfaceId_ERC721Enumerable = 0x780e9d63;\r\n  bytes4 internal constant InterfaceId_ERC721Metadata = 0x5b5e139f;\r\n\r\n  //Events\r\n  event Transfer(address indexed _from, address indexed _to, uint256 indexed _tokenId );\r\n  event Approval(address indexed _owner, address indexed _approved, uint256 indexed _tokenId );\r\n  event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved );\r\n  \r\n  //Required methods\r\n  function balanceOf(address _owner) public view returns (uint256 balance);\r\n  function ownerOf(uint256 _tokenId) public view returns (address owner);\r\n\r\n  function approve(address _to, uint256 _tokenId) public;\r\n  function getApproved(uint256 _tokenId) public view returns (address _operator);\r\n\r\n  function setApprovalForAll(address _operator, bool _approved) public;\r\n  function isApprovedForAll(address _owner, address _operator) public view returns (bool);\r\n\r\n  function transfer(address _to, uint256 _tokenId) public;\r\n  function transferFrom(address _from, address _to, uint256 _tokenId) public;\r\n  function safeTransferFrom(address _from, address _to, uint256 _tokenId) public;\r\n  function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes _data) public;\r\n\r\n  function implementsERC721() public pure returns(bool);\r\n}\r\n\r\n// File: contracts/ERC721TokenReceiver.sol\r\n\r\ncontract ERC721TokenReceiver {\r\n  bytes4 internal constant ERC721_RECEIVED = 0x150b7a02;\r\n  bytes4 retval;\r\n  bool reverts;\r\n\r\n  constructor(bytes4 _retval, bool _reverts) public {\r\n    retval = _retval;\r\n    reverts = _reverts;\r\n  }\r\n\r\n  event Received(address _operator, address _from, uint256 _tokenId, bytes _data, uint256 _gas );\r\n\r\n  function onERC721Received(address _operator, address _from, uint256 _tokenId, bytes _data ) public returns(bytes4) {\r\n    require(!reverts);\r\n    emit Received(\r\n      _operator,\r\n      _from,\r\n      _tokenId,\r\n      _data,\r\n      gasleft()\r\n    );\r\n    return retval;\r\n  }\r\n}\r\n\r\n// File: contracts/SupportsInterfaceWithLookup.sol\r\n\r\ncontract SupportsInterfaceWithLookup is ERC165 {\r\n  bytes4 public constant InterfaceId_ERC165 = 0x01ffc9a7;\r\n  mapping(bytes4 => bool) internal supportedInterfaces;\r\n  \r\n  constructor() public {\r\n    _registerInterface(InterfaceId_ERC165);\r\n  }\r\n\r\n  function supportsInterface(bytes4 _interfaceId) external view returns (bool) {\r\n    return supportedInterfaces[_interfaceId];\r\n  }\r\n\r\n  function _registerInterface(bytes4 _interfaceId) internal {\r\n    require(_interfaceId != 0xffffffff);\r\n    supportedInterfaces[_interfaceId] = true;\r\n  }\r\n}\r\n\r\n// File: contracts/ERC721BasicToken.sol\r\n\r\ncontract ERC721BasicToken is SupportsInterfaceWithLookup, ERC721Basic{\r\n  using SafeMath for uint256;\r\n  using AddressUtils for address;\r\n  \r\n  bytes4 private constant ERC721_RECEIVED = 0x150b7a02;\r\n  mapping (uint256 => address) internal tokenIDToOwner;\r\n  mapping (uint256 => address) internal tokenIDToApproved;\r\n  mapping (address => uint256) internal ownershipTokenCount;\r\n  mapping (address => mapping (address => bool)) internal operatorApprovals;\r\n\r\n  constructor() public {\r\n    _registerInterface(InterfaceId_ERC721);\r\n  }\r\n  function implementsERC721() public pure returns(bool){\r\n      return true;\r\n  }\r\n  function balanceOf(address _owner) public view returns (uint256) {\r\n    require(_owner != address(0));\r\n    return ownershipTokenCount[_owner];\r\n  }\r\n  function ownerOf(uint256 _tokenId) public view returns (address) {\r\n    address owner = tokenIDToOwner[_tokenId];\r\n    require(owner != address(0));\r\n    return owner;\r\n  }\r\n  \r\n  function getApproved(uint256 _tokenId) public view returns (address) {\r\n    return tokenIDToApproved[_tokenId];\r\n  }\r\n  function setApprovalForAll(address _to, bool _approved) public {\r\n    require(_to != msg.sender);\r\n    operatorApprovals[msg.sender][_to] = _approved;\r\n    emit ApprovalForAll(msg.sender, _to, _approved);\r\n  }\r\n  function isApprovedForAll(address _owner, address _operator ) public view returns (bool) {\r\n    return operatorApprovals[_owner][_operator];\r\n  }\r\n  function _exists(uint256 _tokenId) internal view returns (bool) {\r\n    address owner = tokenIDToOwner[_tokenId];\r\n    return owner != address(0);\r\n  }\r\n  function isApprovedOrOwner(address _spender, uint256 _tokenId ) internal view returns (bool) {\r\n    address owner = ownerOf(_tokenId);\r\n    return (\r\n      _spender == owner || getApproved(_tokenId) == _spender || isApprovedForAll(owner, _spender)\r\n    );\r\n  }\r\n  function checkAndCallSafeTransfer(address _from, address _to, uint256 _tokenId, bytes _data ) internal returns (bool) {\r\n    if (!_to.isContract()) {\r\n      return true;\r\n    }\r\n    bytes4 retval = ERC721TokenReceiver(_to).onERC721Received(msg.sender, _from, _tokenId, _data);\r\n    return (retval == ERC721_RECEIVED);\r\n  }\r\n}\r\n\r\n// File: contracts/ERC721Enumerable.sol\r\n\r\ncontract ERC721Enumerable is ERC721Basic {\r\n    function totalSupply() public view returns (uint256);\r\n    function tokenOfOwnerByIndex(address _owner, uint256 _index) public view returns (uint256 _tokenId);\r\n    function tokenByIndex(uint256 _index) public view returns (uint256);\r\n}\r\n\r\n// File: contracts/ERC721Metadata.sol\r\n\r\ncontract ERC721Metadata is ERC721Basic {\r\n  function name() external view returns (string _name);\r\n  function symbol() external view returns (string _symbol);\r\n  function tokenURI(uint256 _tokenId) public view returns (string);\r\n}\r\n\r\n// File: contracts/ChainDrawingsAccess.sol\r\n\r\ncontract ChainDrawingsAccess{\r\n  event ContractUpgrade(address newContract);\r\n\r\n  address public owner;\r\n\r\n  bool public paused = false;\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function setNewOwner(address _newOwner) public onlyOwner {\r\n    require(_newOwner != address(0));\r\n    owner = _newOwner;\r\n  }\r\n\r\n  function withdrawBalance() external onlyOwner {\r\n    owner.transfer(address(this).balance);\r\n  }\r\n\r\n  modifier whenNotPaused() {\r\n    require(!paused);\r\n    _;\r\n  }\r\n\r\n  modifier whenPaused {\r\n    require(paused);\r\n    _;\r\n  }\r\n \r\n  function pause() public onlyOwner whenNotPaused {\r\n    paused = true;\r\n  }\r\n\r\n  function unpause() public onlyOwner whenPaused {\r\n    paused = false;\r\n  }\r\n}\r\n\r\n// File: contracts/Ownable.sol\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    if(newOwner != address(0)){\r\n      owner = newOwner;\r\n    }\r\n  }\r\n}\r\n\r\n// File: contracts/Pausable.sol\r\n\r\ncontract Pausable is Ownable {\r\n  event Pause();\r\n  event Unpause();\r\n\r\n  bool public paused = false;\r\n\r\n  modifier whenNotPaused() {\r\n    require(!paused);\r\n    _;\r\n  }\r\n\r\n  modifier whenPaused {\r\n    require(paused);\r\n    _;\r\n  }\r\n\r\n  function pause() onlyOwner whenNotPaused public returns (bool){\r\n    paused = true;\r\n    emit Pause();\r\n    return true;   \r\n  }\r\n\r\n  function unpause() onlyOwner whenPaused public returns (bool){\r\n    paused = false;\r\n    emit Unpause();\r\n    return true;   \r\n  } \r\n}\r\n\r\n// File: contracts/SaleClockAuction.sol\r\n\r\ncontract SaleClockAuction is Pausable {\r\n  bool public isSaleClockAuction = true;\r\n\r\n  struct Auction {\r\n    address seller;\r\n    uint128 startingPrice;  //wei\r\n    uint128 endingPrice;    //wei\r\n    uint64 duration; //\u79d2\r\n    uint64 startedAt; //\u51fa\u552e\u5f00\u59cb\u65f6\u95f4\uff0c\u5982\u679c\u51fa\u552e\u7ec8\u6b62\u5219\u4e3a0\r\n  }\r\n\r\n  ERC721Basic public nonFungibleContract;    //NFT \u5408\u7ea6\u5730\u5740\r\n\r\n  uint256 public commission;    //\u4ea4\u6613\u4f63\u91d1\uff0c\u6309\u4ea4\u6613\u603b\u989d\u7684\u767e\u5206\u6bd4\u6536\u53d6\u30020 - 10000 \u8868\u793a0% - 100%\r\n  mapping (uint256 => Auction) tokenIdToAuction;   //mapping \u6240\u6709\u53c2\u4e0e\u7ade\u62cd\u7684\u8dd1\u56feID\r\n  mapping (address => uint256[]) public ownershipAuctionTokenIDs;   //\u8bb0\u5f55\u7528\u6237\u5f53\u524d\u6b63\u5728\u62cd\u5356\u7684\u5168\u90e8\u8dd1\u56feID\r\n\r\n  event AuctionCreated(uint256 tokenId, uint256 startingPrice, uint256 endingPrice, uint256 duration);\r\n  event AuctionSuccessful(uint256 tokenId, uint256 totalPrice, address winner);\r\n  event AuctionCancelled(uint256 tokenId);\r\n\r\n  bytes4 constant InterfaceSignature_ERC721 = 0x80ac58cd;\r\n\r\n  constructor(address _nftAddress, uint256 _commission) public {\r\n    require(_commission <= 10000);\r\n    commission = _commission;\r\n   \r\n    ERC721Basic candidateContract = ERC721Basic(_nftAddress);\r\n    require(candidateContract.implementsERC721());\r\n    require(candidateContract.supportsInterface(InterfaceSignature_ERC721));\r\n    nonFungibleContract = candidateContract;\r\n  }\r\n\r\n  function () external {}\t//\u4e0d\u76f4\u63a5\u63a5\u6536\u6570\u5b57\u8d27\u5e01\r\n\r\n  //\u8f93\u5165\u53c2\u6570\u5408\u6cd5\u6027\u6821\u9a8c\r\n  modifier canBeStoredWith64Bits(uint256 _value){\r\n    require(_value <= 18446744073709551615);\r\n    _;\r\n  }\r\n\r\n  modifier canBeStoredWith128Bits(uint256 _value){\r\n    require(_value < 340282366920938463463374607431768211455);\r\n    _;\r\n  }\r\n\r\n  function _owns(address _claimant, uint256 _tokenId) internal view returns (bool){\r\n    return (nonFungibleContract.ownerOf(_tokenId) == _claimant);\r\n  }\r\n\r\n  function _escrow(address _owner, uint256 _tokenId) internal {\r\n    nonFungibleContract.transferFrom(_owner, this, _tokenId);\r\n    //\u589e\u52a0-\u4fdd\u5b58\u7528\u6237\u6b63\u5728\u62cd\u5356\u7684\u8dd1\u56feID\u96c6\u5408\r\n    ownershipAuctionTokenIDs[_owner].push(_tokenId);\r\n  }\r\n\r\n  //\u6dfb\u52a0\u7ade\u62cd\uff08\u4f1a\u5c06\u8dd1\u56fe\u4ece\u5f53\u524d\u4e3b\u4eba\u5730\u5740\u8f6c\u79fb\u5230\u62cd\u5356\u5408\u7ea6\u8d26\u6237\u4e0b\uff0c\u51bb\u7ed3\uff09\r\n  function _addAuction(uint256 _tokenId, Auction _auction) internal {\r\n    require(_auction.duration >= 1 minutes);\r\n\r\n    tokenIdToAuction[_tokenId] = _auction;\r\n\r\n    emit AuctionCreated(\r\n      uint256(_tokenId),\r\n      uint256(_auction.startingPrice),\r\n      uint256(_auction.endingPrice),\r\n      uint256(_auction.duration)\r\n    );\r\n  }\r\n\r\n  //\u53d6\u6d88\u62cd\u5356\r\n  function _cancelAuction(uint256 _tokenId, address _seller) internal {\r\n    _removeAuction(_tokenId);\r\n    nonFungibleContract.transfer(_seller, _tokenId);\r\n    //\u5c06\u53d6\u6d88\u62cd\u5356\u7684tokentID\u4ece\u7528\u6237\u6b63\u5728\u62cd\u5356\u7684\u8dd1\u56feID\u96c6\u5408\u5217\u8868\u91cc\u5220\u9664\r\n    removeFromOwnershipAuctionTokenIDs(_seller, _tokenId);\r\n    \r\n    emit AuctionCancelled(_tokenId);\r\n  }\r\n\r\n  //\u4ece\u7528\u6237\u6b63\u5728\u62cd\u5356\u7684\u8dd1\u56feID\u96c6\u5408\u5217\u8868\u91cc\u5220\u9664\r\n  function removeFromOwnershipAuctionTokenIDs(address seller, uint256 tokenId) internal {\r\n    uint len = ownershipAuctionTokenIDs[seller].length;\r\n    if(len > 0){\r\n      bool hasFound = false;\r\n      for(uint i=0; i<len-1; i++){\r\n        if(!hasFound && ownershipAuctionTokenIDs[seller][i] == tokenId){\r\n          hasFound = true;\r\n          ownershipAuctionTokenIDs[seller][i] = ownershipAuctionTokenIDs[seller][i+1];\r\n        }else if(hasFound){\r\n          ownershipAuctionTokenIDs[seller][i] = ownershipAuctionTokenIDs[seller][i+1];\r\n        }\r\n      }\r\n\r\n      if(!hasFound && ownershipAuctionTokenIDs[seller][len - 1] == tokenId){  //\u5982\u679c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u624d\u662f\u8981\u5220\u9664\u7684\r\n        hasFound = true;\r\n      }\r\n      \r\n      if(hasFound){\r\n        delete ownershipAuctionTokenIDs[seller][len-1];\r\n        ownershipAuctionTokenIDs[seller].length--; //\u9700\u8981\u5c06\u6570\u7ec4\u7684\u957f\u5ea6\u51cf\u4e00\r\n      }\r\n    }\r\n  }\r\n\r\n  function _bid(uint256 _tokenId, uint256 _bidAmount) internal returns(uint256){\r\n    Auction storage auction = tokenIdToAuction[_tokenId];\r\n\r\n    require(_isOnAuction(auction));\r\n\r\n    uint256 price = _currentPrice(auction);\r\n    require(_bidAmount >= price);\r\n\r\n    address seller = auction.seller;\r\n    _removeAuction(_tokenId);\r\n\r\n    //\u5c06\u53d6\u6d88\u62cd\u5356\u7684tokentID\u4ece\u7528\u6237\u6b63\u5728\u62cd\u5356\u7684\u8dd1\u56feID\u96c6\u5408\u5217\u8868\u91cc\u5220\u9664\r\n    removeFromOwnershipAuctionTokenIDs(seller, _tokenId);\r\n    \r\n    //\u5411\u51fa\u552e\u8005\u652f\u4ed8\u552e\u5356\u6240\u5f97\u3002\r\n    if(price > 0) {\r\n      uint256 auctioneerCommission = _computeCommission(price);\r\n      uint256 sellerProceeds = price - auctioneerCommission;\r\n\r\n      seller.transfer(sellerProceeds);\r\n    }\r\n\r\n    //\u5c06\u4f59\u989d\u8fd8\u7ed9\u51fa\u552e\u8005\r\n    uint256 bidExcess = _bidAmount - price;\r\n    msg.sender.transfer(bidExcess);\r\n\r\n    emit AuctionSuccessful(_tokenId, price, msg.sender);\r\n\r\n    return price;\r\n  } \r\n\r\n  function _removeAuction(uint256 _tokenId) internal {\r\n    delete tokenIdToAuction[_tokenId];\r\n  }\r\n\r\n  function _isOnAuction(Auction storage _auction) internal view returns (bool){\r\n    return (_auction.startedAt > 0);\r\n  }\r\n\r\n  function _currentPrice(Auction storage _auction) internal view returns (uint256) {\r\n    uint256 secondsPassed = 0;\r\n    \r\n    if(now > _auction.startedAt){\r\n      secondsPassed = now - _auction.startedAt;\r\n    }\r\n\r\n    return _computeCurrentPrice(\r\n      _auction.startingPrice,\r\n      _auction.endingPrice,\r\n      _auction.duration,\r\n      secondsPassed\r\n    );\r\n  }\r\n\r\n  //\u6839\u636e\u62cd\u5356\u65f6\u95f4\u8ba1\u7b97\u5f53\u524d\u8dd1\u56fe\u4ef7\u683c\r\n  function _computeCurrentPrice(\r\n    uint256 _startingPrice,\r\n    uint256 _endingPrice,\r\n    uint256 _duration,\r\n    uint256 _secondsPassed\r\n  ) internal pure returns (uint256){\r\n    \r\n    if(_secondsPassed >= _duration){\t//\u5982\u679c\u8d85\u8fc7\u7ade\u62cd\u65f6\u95f4\uff0c\u76f4\u63a5\u53d6\u6700\u5c0f\u4ef7\u683c\r\n      return _endingPrice;  \r\n    } else {\r\n      int256 totalPriceChange = int256(_endingPrice) - int256(_startingPrice);\r\n      int256 currentPriceChange = totalPriceChange * int256(_secondsPassed) / int256(_duration);\r\n\r\n      int256 currentPrice = int256(_startingPrice) + currentPriceChange;\r\n\r\n      return uint256(currentPrice); \r\n    }\r\n  }\r\n\r\n  //\u8ba1\u7b97\u8dd1\u56fe\u51fa\u552e\u4f63\u91d1\r\n  function _computeCommission(uint256 _price) internal view returns (uint256) { \r\n    return _price * commission / 10000;\r\n  }\r\n\r\n  //\u63d0\u53d6\u8d26\u6237\u8d44\u91d1\r\n  function withdrawBalance() external {\r\n    address nftAddress = address(nonFungibleContract);  \r\n    require(msg.sender == owner || msg.sender == nftAddress);\r\n\r\n    nftAddress.transfer(address(this).balance);\r\n  }\r\n\r\n  //\u521b\u5efa\u62cd\u5356\r\n  function createAuction(\r\n    uint256 _tokenId,\r\n    uint256 _startingPrice,\r\n    uint256 _endingPrice,\r\n    uint256 _duration,\r\n    address _seller\r\n  ) public\r\n    canBeStoredWith128Bits(_startingPrice)\r\n    canBeStoredWith128Bits(_endingPrice)\r\n    canBeStoredWith64Bits(_duration)\r\n  {\r\n    require(msg.sender == address(nonFungibleContract));\r\n    require(_owns(_seller, _tokenId));\r\n    _escrow(_seller, _tokenId);\r\n    Auction memory auction = Auction(\r\n      _seller,\r\n      uint128(_startingPrice),\r\n      uint128(_endingPrice),\r\n      uint64(_duration),\r\n      uint64(now)\r\n    );\r\n    _addAuction(_tokenId, auction);\r\n  }\r\n\r\n  function bid(uint256 _tokenId) public payable whenNotPaused {\r\n    _bid(_tokenId, msg.value);\r\n    nonFungibleContract.transfer(msg.sender, _tokenId);\r\n  }\r\n\r\n  function cancelAuction(uint256 _tokenId) public {\r\n    Auction storage auction = tokenIdToAuction[_tokenId];\r\n    require(_isOnAuction(auction));\r\n    address seller = auction.seller;\r\n    require(msg.sender == seller);\r\n\r\n    _cancelAuction(_tokenId, seller);\r\n  }\r\n\r\n  function cancelAuctionWhenPaused(uint256 _tokenId) public onlyOwner whenPaused {\r\n    Auction storage auction = tokenIdToAuction[_tokenId];\r\n    require(_isOnAuction(auction));\r\n    _cancelAuction(_tokenId, auction.seller);\r\n  }\r\n\r\n  function getAuction(uint256 _tokenId) public view returns(\r\n    address seller,\r\n    uint256 startingPrice,\r\n    uint256 endingPrice,\r\n    uint256 duration,\r\n    uint256 startedAt\r\n  ){\r\n    Auction storage auction = tokenIdToAuction[_tokenId];\r\n    require(_isOnAuction(auction));\r\n    return(\r\n      auction.seller,\r\n      auction.startingPrice,\r\n      auction.endingPrice,\r\n      auction.duration,\r\n      auction.startedAt\r\n    );\r\n  }\r\n\r\n  function getCurrentPrice(uint256 _tokenId) public view returns (uint256){\r\n    Auction storage auction = tokenIdToAuction[_tokenId];\r\n    require(_isOnAuction(auction));\r\n    return _currentPrice(auction);\r\n  }\r\n\r\n  function getFund() public view returns (uint256 balance){\r\n    return address(this).balance;\r\n  }\r\n\r\n  //\u83b7\u53d6\u7528\u6237\u5f53\u524d\u6240\u6709\u6b63\u5728\u62cd\u5356\u7684\u8dd1\u56feID\r\n  function getAuctionTokenIDsOfOwner(address owner) public view returns(uint256[]){\r\n    return ownershipAuctionTokenIDs[owner];\r\n  }\r\n}\r\n\r\n// File: contracts/ChainDrawingsBase.sol\r\n\r\ncontract ChainDrawingsBase is ChainDrawingsAccess, SupportsInterfaceWithLookup, ERC721BasicToken, ERC721Enumerable, ERC721Metadata {\r\n  using SafeMath for uint256;\r\n  using AddressUtils for address;\r\n\r\n  string internal name_ = \"LianPaoTu\";\r\n  string internal symbol_ = \"LPT\";\r\n  \r\n  //Event\r\n  event Create(address owner, uint256 drawingsID, bytes32 chainID);\r\n\r\n  //\u8dd1\u56fe\u6570\u636e\u7ed3\u6784-\u76ee\u524d\u4fdd\u5b58\u8dd1\u56feID\u548c\u8dd1\u56fe\u539f\u521b\u8005\u540d\u79f0\u3002\u8dd1\u56fe\u5c5e\u6027\u3001\u8dd1\u56fegps\u6570\u636e\u3001\u8dd1\u56fe\u793a\u4f8b\u56fe\u7247\u4e0d\u9002\u5408\u653e\u5728\u4ee5\u592a\u574a\u94fe\uff0c\u9700\u8981\u653e\u5728Fabric\u6216IPFS\u7cfb\u7edf\u91cc\r\n  struct ChainDrawings {\r\n    bytes32 chainID;\t\t//\u94fe\u8dd1\u56feID\u3002\uff08\u5bf9\u5e94\u94fe\u8dd1\u56feID\u3001\u521b\u610f\u8dd1\u6b65App\u5185\u8dd1\u56feID\uff09\uff08utf8\u8f6c\u7801\u5fc5\u987b\u662fbytes32 \u6216 bytes\uff09\r\n    bytes32 author;\t//\u539f\u521b\u8005\u540d\u79f0\r\n    uint64 createTime;\t//\u94fe\u8dd1\u56fe\u521b\u5efa\u65f6\u95f4\r\n  }\r\n\r\n  //\u94fe\u8dd1\u56fe\u6570\u7ec4\r\n  ChainDrawings[] drawings;\r\n\r\n  mapping (bytes32 => uint256) public chainIDToTokenID;   //chainID\u5bf9\u5e94\u7684\u94fe\u8dd1\u56feID\uff0c\u7528\u6765\u65b9\u4fbf\u67e5\u627e\u548c\u5224\u65ad\u8dd1\u56fe\u662f\u5426\u5df2\u4e0a\u94fe (tokenID)\r\n  mapping (uint256 => string) internal tokenIDToUri; //Mapping from NFT ID to metadata uri. (tokenID)\r\n\r\n\r\n  // ERC721Enumerable\r\n  mapping(address => uint256[]) internal ownedTokens;  //Mapping from owner to list of owned token IDs(\u4e0d\u5305\u542b\u6b63\u5728\u62cd\u5356\u7684\u8dd1\u56fe tokenID)\r\n  mapping(uint256 => uint256) internal ownedTokensIndex; //Mapping from token ID to index of the owner tokens list(\u4e0d\u5305\u542b\u6b63\u5728\u62cd\u5356\u7684\u8dd1\u56fe tokenID, index)\r\n  uint256[] internal allTokens; //Array with all token ids, used for enumeration (tokenID)\r\n  mapping(uint256 => uint256) internal allTokensIndex;  //Mapping from token id to position in the allTokens array(tokenID, index)\r\n\r\n\r\n  SaleClockAuction public saleAuction;\r\n  \r\n  constructor() public {\r\n    _registerInterface(InterfaceId_ERC721Enumerable);\r\n    _registerInterface(InterfaceId_ERC721Metadata);\r\n  }\r\n  \r\n  // Guarantees that _tokenId is a valid Token.  _tokenId ID of the NFT to validate.\r\n  modifier validNFToken(uint256 _tokenId) {\r\n    require(tokenIDToOwner[_tokenId] != address(0));\r\n    _;\r\n  }\r\n  \r\n  function name() external view returns (string) {\r\n    return name_;\r\n  }\r\n  function symbol() external view returns (string) {\r\n    return symbol_;\r\n  }\r\n  function tokenURI(uint256 _tokenId) public view returns (string) {\r\n    require(_exists(_tokenId));\r\n    return tokenIDToUri[_tokenId];\r\n  }\r\n  function tokenOfOwnerByIndex(address _owner, uint256 _index ) public view returns (uint256) {\r\n    require(_index < balanceOf(_owner));\r\n    return ownedTokens[_owner][_index];\r\n  }\r\n  function totalSupply() public view returns (uint256) {\r\n    return allTokens.length;\r\n  }\r\n  function tokenByIndex(uint256 _index) public view returns (uint256) {\r\n    require(_index < totalSupply());\r\n    return allTokens[_index];\r\n  }\r\n  \r\n  //\u62cd\u5356\u65f6\uff0ctoken\u5730\u5740\u4f1a\u8f6c\u5165\u62cd\u5356\u5408\u7ea6 ownershipTokenCount\r\n  function _transfer(address _from, address _to, uint256 _tokenId) internal {\r\n    if(_from != address(0)){\r\n      ownershipTokenCount[_from] = ownershipTokenCount[_from].sub(1);  //\u65e7\u7684\u8dd1\u56fe\u62e5\u6709\u8005\uff0c\u8dd1\u56fe\u6570\u91cf\u51cf1\r\n      delete tokenIDToApproved[_tokenId];\r\n      removeFromOwnedTokens(_from, _tokenId);\r\n    }\r\n\r\n    ownershipTokenCount[_to] = ownershipTokenCount[_to].add(1);  //\u65b0\u7684\u62e5\u6709\u8005\uff0c\u8dd1\u56fe\u6570\u91cf\u52a01\r\n    tokenIDToOwner[_tokenId] = _to;\r\n\r\n    uint256 length = ownedTokens[_to].push(_tokenId);\r\n    ownedTokensIndex[_tokenId] = length.sub(1);\r\n\r\n    emit Transfer(_from, _to, _tokenId);\r\n  }\r\n  \r\n  function _owns(address _claimant, uint256 _tokenId) internal view returns (bool){\r\n    return tokenIDToOwner[_tokenId] == _claimant;\r\n  }\r\n\r\n  function _approvedFor(address _claimant, uint256 _tokenId) internal view returns (bool) {\r\n    return tokenIDToApproved[_tokenId] == _claimant;\r\n  }\r\n\r\n  function _approve(uint256 _tokenId, address _approved) internal {\r\n    tokenIDToApproved[_tokenId] = _approved;\r\n    emit Approval(msg.sender, _approved, _tokenId);\r\n  }\r\n\r\n  //Required for ERC-721\r\n  function approve(address _to, uint256 _tokenId) public whenNotPaused {\r\n    require(_owns(msg.sender, _tokenId));\r\n    _approve(_tokenId, _to);\r\n  }\r\n\r\n  //Required for ERC-721\r\n  function transfer(address _to, uint256 _tokenId) public whenNotPaused{\r\n    require(_to != address(0));\r\n    require(_to != address(this));\r\n    require(_to != address(saleAuction));\r\n    require(_owns(msg.sender, _tokenId));\r\n\r\n    _transfer(msg.sender, _to, _tokenId);\r\n  }\r\n\r\n  //Required for ERC-721\r\n  function transferFrom(address _from, address _to, uint256 _tokenId) public whenNotPaused{\r\n    require(_to != address(0));\r\n    require(_to != address(this));\r\n    require(_approvedFor(msg.sender, _tokenId));\r\n    require(_owns(_from, _tokenId));\r\n    _transfer(_from, _to, _tokenId);\r\n  }\r\n  \r\n  //Optional for ERC-721\r\n  function safeTransferFrom(address _from, address _to, uint256 _tokenId) public whenNotPaused {\r\n    _safeTransferFrom(_from, _to, _tokenId, \"\");\r\n  }\r\n  \r\n  //Optional for ERC-721\r\n  function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes _data) public whenNotPaused {\r\n    _safeTransferFrom(_from, _to, _tokenId, _data);\r\n  }\r\n  \r\n  function _safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes _data) internal validNFToken(_tokenId) {\r\n    transferFrom(_from, _to, _tokenId);\r\n    require(checkAndCallSafeTransfer(_from, _to, _tokenId, _data));\r\n  }\r\n \r\n  // Optional method for ERC-721(\u4e0d\u5305\u542b\u6b63\u5728\u51fa\u552e\u7684)\r\n  function tokensOfOwner(address _owner) public view returns(uint256[] ownerTokens){\r\n    if(balanceOf(_owner) == 0){\r\n      return new uint256[](0);\r\n    }else{\r\n      return ownedTokens[_owner];\r\n    }\r\n  }\r\n\r\n  //\u521b\u5efa\u94fe\u8dd1\u56fe\r\n  function _createDrawings(bytes32 _chainID, bytes32 _author, address _owner, string metaUrl) internal returns(uint) {\r\n    ChainDrawings memory _drawings = ChainDrawings({\r\n      chainID: _chainID,\r\n      author: _author,\r\n      createTime: uint64(now)\r\n    });\r\n\r\n    uint256 _tokenId = drawings.push(_drawings);\r\n    _tokenId = _tokenId.sub(1);\r\n    chainIDToTokenID[_chainID] = _tokenId;\r\n    require(_tokenId == uint256(uint32(_tokenId)));\r\n\r\n    allTokensIndex[_tokenId] = allTokens.length;\r\n    allTokens.push(_tokenId);\r\n    tokenIDToUri[_tokenId] = metaUrl;\r\n\r\n    //emit\r\n    emit Create(_owner, _tokenId, _chainID);\r\n    _transfer(address(0), _owner, _tokenId);\r\n\r\n    return _tokenId;\r\n  }\r\n\r\n  //\u4ece\u7528\u6237\u8dd1\u56fe\u5217\u8868\u4e2d\u5220\u9664\uff08ERC721Enumerable\uff09\r\n  function removeFromOwnedTokens(address _owner, uint256 _tokenId) internal {\r\n    require(tokenIDToOwner[_tokenId] == _owner);\r\n    uint len = ownedTokens[_owner].length;\r\n    assert(len > 0);\r\n\r\n    if(len == 1){\r\n      delete ownedTokens[_owner];\r\n      delete ownedTokensIndex[_tokenId];\r\n      return;\r\n    }\r\n\r\n    uint256 tokenToRemoveIndex = ownedTokensIndex[_tokenId];\r\n\r\n    if(tokenToRemoveIndex == len.sub(1)){\r\n      ownedTokens[_owner].length = ownedTokens[_owner].length.sub(1);\r\n      delete ownedTokensIndex[_tokenId];\r\n      return;\r\n    }\r\n\r\n    uint256 lastToken = ownedTokens[_owner][len.sub(1)];\r\n\r\n    ownedTokens[_owner][tokenToRemoveIndex] = lastToken;\r\n    ownedTokensIndex[lastToken] = tokenToRemoveIndex;\r\n    ownedTokens[_owner].length = ownedTokens[_owner].length.sub(1);\r\n    delete ownedTokensIndex[_tokenId];\r\n  }\r\n}\r\n\r\n// File: contracts/ChainDrawingsAuction.sol\r\n\r\ncontract ChainDrawingsAuction is ChainDrawingsBase {\r\n\r\n  function setSaleAuctionAddress(address _address) public onlyOwner {\r\n    SaleClockAuction candidateContract = SaleClockAuction(_address);\r\n    require(candidateContract.isSaleClockAuction());\r\n\r\n    saleAuction = candidateContract;\r\n  }\r\n\r\n  function createSaleAuction(\r\n    uint256 _tokenID,\r\n    uint256 _startingPrice,\r\n    uint256 _endingPrice,\r\n    uint256 _duration\r\n  ) public whenNotPaused {\r\n\r\n    require(_owns(msg.sender, _tokenID));\r\n    approve(saleAuction, _tokenID);\r\n    saleAuction.createAuction(_tokenID, _startingPrice, _endingPrice, _duration, msg.sender);\r\n  }\r\n\r\n  function withdrawAuctionBalances() external onlyOwner {\r\n    saleAuction.withdrawBalance();\r\n  }\r\n}\r\n\r\n// File: contracts/ChainDrawingsGeneration.sol\r\n\r\ncontract ChainDrawingsGeneration is ChainDrawingsAuction {\r\n  //\u4e3a\u539f\u521b\u8005\u521b\u5efa\u4e0a\u94fe\u8dd1\u56fe\r\n  function createAuthorDrawings(bytes32 _chainID, \r\n                                bytes32 _author, \r\n                                address _owner, \r\n                                string _metaUrl) public onlyOwner {\r\n    //\u901a\u8fc7chainID\u67e5\u627e\u8dd1\u56fe\r\n    uint256 tokenID = chainIDToTokenID[_chainID];\r\n    if(tokenID != 0){  //\u94fe\u8dd1\u56fe\u5df2\u5b58\u5728\uff0c\u4ec5\u4fee\u6539\u8dd1\u56fe\u5c5e\u6027\r\n      ChainDrawings storage drawing = drawings[tokenID];\r\n      drawing.author = _author;\r\n\r\n      return;\r\n    }\r\n\r\n    if(_owner == address(0)){\r\n      _owner = owner;\r\n    }\r\n    _createDrawings(_chainID, _author, _owner, _metaUrl);\r\n  }\r\n\r\n  //\u4e3a\u8dd1\u5730\u56fe\u521b\u5efa\u4e0a\u94fe\u8dd1\u56fe(\u539f\u521b\u8005\u7f72\u540d\u4e3a\u201d\u8dd1\u5730\u56fe\u201c\u7684\u8dd1\u56fe\uff0c\u5373\u662f\u521b\u610f\u8dd1\u6b65\u8bbe\u8ba1\u4f5c\u54c1)\r\n  function createInternalAuction(bytes32 _chainID, \r\n                                bytes32 _author, \r\n                                uint256 _startingPrice,\r\n                                uint256 _endingPrice,\r\n                                uint256 _duration, \r\n                                string _metaUrl) public onlyOwner {\r\n    //\u901a\u8fc7chainID\u67e5\u627e\u8dd1\u56fe\r\n    uint256 tokenID  = chainIDToTokenID[_chainID];\r\n    if(tokenID != 0){  //\u94fe\u8dd1\u56fe\u5df2\u5b58\u5728\uff0c\u4ec5\u4fee\u6539\u8dd1\u56fe\u5c5e\u6027\r\n      ChainDrawings storage drawing = drawings[tokenID];\r\n      drawing.author = _author;\r\n\r\n      return;\r\n    }\r\n\r\n    uint256 newTokenID = _createDrawings(_chainID, _author, address(this), _metaUrl);\r\n    _approve(newTokenID, saleAuction);\r\n\r\n    saleAuction.createAuction(\r\n      newTokenID,\r\n      _startingPrice,\r\n      _endingPrice,\r\n      _duration,\r\n      address(this)\r\n    );\r\n  }\r\n}\r\n\r\n// File: contracts/BatchCreateDrawingsInterface.sol\r\n\r\n// \u6279\u91cf\u589e\u52a0\u94fe\u8dd1\u56fe\u63a5\u53e3\r\ncontract BatchCreateDrawingsInterface {\r\n  function isBatchCreateDrawings() public pure returns (bool);\r\n\r\n  // \u83b7\u53d6\u5185\u90e8\u94fe\u8dd1\u56fe\r\n  function getInternalDrawings(uint index) public returns (bytes32 _chainID, \r\n                                uint256 _startingPrice,\r\n                                uint256 _endingPrice,\r\n                                uint256 _duration, \r\n                                string memory _metaUrl);\r\n\r\n  // \u83b7\u53d6\u539f\u521b\u8005\u94fe\u8dd1\u56fe\r\n  function getAuthorDrawings(uint index) public returns (bytes32 _chainID, \r\n                                bytes32 _author, \r\n                                address _owner, \r\n                                string memory _metaUrl);\r\n}\r\n\r\n// File: contracts/ChainDrawingsCore.sol\r\n\r\ncontract ChainDrawingsCore is ChainDrawingsGeneration {\r\n  address public newContractAddress;\r\n  BatchCreateDrawingsInterface public batchCreateDrawings;\r\n  \r\n  constructor() public {\r\n    paused = true;\r\n    owner = msg.sender;\r\n    _createDrawings(\"-1\",  \"-1\", address(0), \"https://chain.chuangyipaobu.com\"); //\u521b\u5efa\u5408\u7ea6\u7684\u65f6\u5019\uff0c\u9700\u8981\u628a\u9ed8\u8ba4\u76840\u4f4d\u6392\u9664\u6389\r\n  }\r\n  \r\n  //\u8bbe\u7f6e\u6279\u91cf\u5bfc\u5165\u5408\u7ea6\u5730\u5740\r\n  function setBatchCreateDrawingsAddress(address _address) external onlyOwner {\r\n    BatchCreateDrawingsInterface candidateContract = BatchCreateDrawingsInterface(_address);\r\n    require(candidateContract.isBatchCreateDrawings());\r\n\r\n    // Set the new contract address\r\n    batchCreateDrawings = candidateContract;\r\n  }\r\n\r\n  //\u6279\u91cf\u751f\u6210\u5185\u90e8\u94fe\u8dd1\u56fe\r\n  function batchCreateInternalDrawings() internal onlyOwner {\r\n    require(batchCreateDrawings != address(0));\r\n\r\n    bytes32 chainID;\r\n    uint256 startingPrice;\r\n    uint256 endingPrice;\r\n    uint256 duration;\r\n    string memory metaUrl;\r\n    uint index = 0;\r\n\r\n    while(index < 20){\t//\u907f\u514d\u6b7b\u5faa\u73af\u548c\u6267\u884c\u5931\u8d25\uff0c\u6700\u591a\u4e00\u6b21\u521b\u5efa20\u4e2a\u94fe\u8dd1\u56fe\r\n      (chainID, startingPrice, endingPrice, duration, metaUrl) = batchCreateDrawings.getInternalDrawings(index++);\r\n      if(chainID == \"0\"){\r\n        return;\r\n      }\r\n\r\n      if(chainIDToTokenID[chainID] > 0){\r\n        continue;\r\n      }\r\n    \r\n      createInternalAuction(chainID, \"\u8dd1\u5730\u56fe\", startingPrice, endingPrice, duration, metaUrl);\r\n    }\r\n  }\r\n\r\n  //\u6279\u91cf\u751f\u6210\u539f\u521b\u8005\u94fe\u8dd1\u56fe\r\n  function batchCreateAuthorDrawings() internal onlyOwner {\r\n    require(batchCreateDrawings != address(0));\r\n\r\n    bytes32 chainID;\r\n    bytes32 author;\r\n    address owner; \r\n    string memory metaUrl;\r\n    uint index = 0;\r\n\r\n    while(index < 20){\t//\u907f\u514d\u6b7b\u5faa\u73af\u548c\u6267\u884c\u5931\u8d25\uff0c\u6700\u591a\u4e00\u6b21\u521b\u5efa20\u4e2a\u94fe\u8dd1\u56fe\r\n      (chainID, author, owner, metaUrl) = batchCreateDrawings.getAuthorDrawings(index++);\r\n      if(chainID == \"0\"){\r\n        return;\r\n      }\r\n      if(chainIDToTokenID[chainID] > 0){\r\n        continue;\r\n      }  \r\n\r\n      createAuthorDrawings(chainID, author, owner, metaUrl);\r\n    }\r\n  }\r\n\r\n  //\u6279\u91cf\u751f\u6210\u94fe\u8dd1\u56fe\r\n  function batchCreateDrawings() external onlyOwner {\r\n    batchCreateInternalDrawings();\r\n    batchCreateAuthorDrawings();\r\n  }\r\n\r\n  //\u6c38\u4e45\u7ec8\u6b62\u5408\u7ea6\r\n  function setNewAddress(address _newAddress) external onlyOwner whenPaused {\r\n    newContractAddress = _newAddress;\r\n    emit ContractUpgrade(_newAddress);\r\n  }\r\n\r\n  function() external payable {\r\n    require(msg.sender == address(saleAuction));\r\n  }\r\n\r\n  function getChainDrawings(uint256 _id) public view returns(\r\n      uint256 tokenID,\r\n      bytes32 chainID,  //\u94fe\u8dd1\u56feID\u3002\uff08\u5bf9\u5e94\u94fe\u8dd1\u56feID\u3001\u521b\u610f\u8dd1\u6b65App\u5185\u8dd1\u56feID\uff09\r\n      bytes32 author,   //\u539f\u521b\u8005\u540d\u79f0\r\n      uint256 createTime\r\n  ) {\r\n    ChainDrawings storage drawing = drawings[_id];\r\n\r\n    tokenID = _id;\r\n    chainID = drawing.chainID;\r\n    author = drawing.author;\r\n    createTime = drawing.createTime;\r\n  }\r\n\r\n  //\u83b7\u53d6\u4e3b\u5408\u7ea6\u5730\u5740\r\n  function getCoreAddress() external view returns(address){\r\n    return address(this);\r\n  }\r\n\r\n  //\u83b7\u53d6\u62cd\u5356\u5408\u7ea6\u5730\u5740\r\n  function getSaleAuctionAddress() external view returns(address){\r\n    return address(saleAuction);\r\n  }\r\n\r\n  //\u83b7\u53d6\u6279\u91cf\u5bfc\u5165\u5408\u7ea6\u5730\u5740\r\n  function getBatchCreateDrawingsAddress() external view returns(address){\r\n    return address(batchCreateDrawings);\r\n  }\r\n\r\n  function unpause() public onlyOwner whenPaused {\r\n    require(saleAuction != address(0));\r\n    require(newContractAddress == address(0));\r\n\r\n    super.unpause();\r\n  }\r\n\r\n  //\u901a\u8fc7\u8dd1\u56fechainID\uff0c\u83b7\u53d6\u94fe\u8dd1\u56fe\u4fe1\u606f\r\n  function getChainDrawingsByChainID(bytes32 _chainID) external view returns(\r\n      uint256 tokenID,\r\n      bytes32 chainID,        //\u94fe\u8dd1\u56feID\u3002\uff08\u5bf9\u5e94\u94fe\u8dd1\u56feID\u3001\u521b\u610f\u8dd1\u6b65App\u5185\u8dd1\u56feID\uff09\r\n      bytes32 author,   //\u539f\u521b\u8005\u540d\u79f0\r\n      uint256 createTime         //\u94fe\u8dd1\u56fe\u521b\u5efa\u65f6\u95f4\r\n  ){\r\n    tokenID = chainIDToTokenID[_chainID];\r\n    return getChainDrawings(tokenID);\r\n  }\r\n\r\n  function getFund() external view returns (uint256 balance){\r\n    return address(this).balance;\r\n  }\r\n\r\n  //\u83b7\u53d6\u7528\u6237\u540d\u4e0b\u6240\u6709\u7684TokenID\uff08\u5305\u542b\u6b63\u5728\u51fa\u552e\u7684\uff09\r\n  function getAllTokensOfUser(address _owner) public view returns (uint256[]){\r\n    uint256[] memory ownerTokensNonAuction = this.tokensOfOwner(_owner);\r\n    uint256[] memory ownerTokensAuction = saleAuction.getAuctionTokenIDsOfOwner(_owner);\r\n    \r\n    uint length1 = ownerTokensNonAuction.length;\r\n    uint length2 = ownerTokensAuction.length;\r\n    uint length = length1 + length2;\r\n\r\n    if(length == 0) return;\r\n\r\n    uint256[] memory result = new uint[](length);\r\n    uint index = 0;\r\n\r\n    for (uint i=0; i<length2; i++) {\r\n      result[index++] = ownerTokensAuction[i];\r\n    }\r\n    for (uint j=0; j<length1; j++) {\r\n      result[index++] = ownerTokensNonAuction[j];\r\n    }\r\n    \r\n    return result;\r\n  }\r\n  \r\n  //\u83b7\u53d6\u7528\u6237\u540d\u4e0b\u6240\u6709\u7684ChainID\uff08\u5305\u542b\u6b63\u5728\u51fa\u552e\u7684\uff09\r\n  function getAllChainIDsOfUser(address _owner) external view returns (bytes32[]){\r\n    uint256[] memory ownerTokens = this.getAllTokensOfUser(_owner);\r\n    uint len = ownerTokens.length;\r\n \r\n    if(len == 0) return;\r\n\r\n    bytes32[] memory ownerChainIDs = new bytes32[](len);\r\n    for (uint i=0; i<len; i++) {\r\n      ChainDrawings storage drawing = drawings[ownerTokens[i]];\r\n      ownerChainIDs[i] = drawing.chainID;\r\n    }\r\n    return ownerChainIDs;\r\n  }\r\n\r\n  //\u83b7\u53d6\u7528\u6237\u540d\u4e0b\u8dd1\u56fe\u603b\u6570\uff08\u5305\u542b\u6b63\u5728\u51fa\u552e\u7684\uff09\r\n  function getTokensCountOfUser(address _owner) external view returns (uint256){\r\n    uint256[] memory ownerTokensNonAuction = this.tokensOfOwner(_owner);\r\n    uint256[] memory ownerTokensAuction = saleAuction.getAuctionTokenIDsOfOwner(_owner);\r\n    \r\n    uint length1 = ownerTokensNonAuction.length;\r\n    uint length2 = ownerTokensAuction.length;\r\n    return length1 + length2;\r\n  }\r\n}", "OptimizationUsed": "1", "ContractName": "ChainDrawingsCore", "ByteCode": "0x6080604052600436106102165763ffffffff60e060020a60003504166301ffc9a7811461022f57806306fdde0314610265578063081812fc146102ef578063095ea7b3146103235780631051db341461034757806318160ddd1461035c57806319fa8f50146103835780632096b768146103b557806323b872dd146103ca5780632f745c59146103f457806339708a85146104185780633d7d3f5a146104305780633f4ba83a1461045157806342842e0e146104665780634cbe02a5146104905780634f238029146104fc5780634f6ccce714610511578063505914781461052957806355f953e6146105675780635b2ec3a5146105885780635c975abb146105f45780635fd8c710146106095780636352211e1461061e57806365675074146106365780636af04a57146106a75780636fbde40d146106bc57806370a08231146106dd57806371587988146106fe57806378581a461461071f5780638456cb59146107345780638462151c146107495780638da5cb5b1461076a5780638edd6eb61461077f57806391876e571461079457806395d89b41146107a95780639f35caee146107be578063a22cb465146107df578063a9059cbb14610805578063ad70810a14610829578063b88d4fde14610841578063c87b56dd146108b0578063dc52c514146108c8578063e0c89e9d146108dd578063e6cbe351146108fe578063e985e9c514610913578063f5a1f5b41461093a575b600f54600160a060020a0316331461022d57600080fd5b005b34801561023b57600080fd5b50610251600160e060020a03196004351661095b565b604080519115158252519081900360200190f35b34801561027157600080fd5b5061027a61097e565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102b457818101518382015260200161029c565b50505050905090810190601f1680156102e15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102fb57600080fd5b50610307600435610a15565b60408051600160a060020a039092168252519081900360200190f35b34801561032f57600080fd5b5061022d600160a060020a0360043516602435610a30565b34801561035357600080fd5b50610251610a6a565b34801561036857600080fd5b50610371610a6f565b60408051918252519081900360200190f35b34801561038f57600080fd5b50610398610a75565b60408051600160e060020a03199092168252519081900360200190f35b3480156103c157600080fd5b50610307610a99565b3480156103d657600080fd5b5061022d600160a060020a0360043581169060243516604435610a9d565b34801561040057600080fd5b50610371600160a060020a0360043516602435610b19565b34801561042457600080fd5b50610371600435610b66565b34801561043c57600080fd5b5061022d600435602435604435606435610b78565b34801561045d57600080fd5b5061022d610c59565b34801561047257600080fd5b5061022d600160a060020a0360043581169060243516604435610cbf565b34801561049c57600080fd5b50604080516020601f60643560048181013592830184900484028501840190955281845261022d948035946024803595600160a060020a03604435169536956084949301918190840183828082843750949750610cf29650505050505050565b34801561050857600080fd5b50610307610d84565b34801561051d57600080fd5b50610371600435610d93565b34801561053557600080fd5b50610541600435610dc8565b604080519485526020850193909352838301919091526060830152519081900360800190f35b34801561057357600080fd5b50610371600160a060020a0360043516610df2565b34801561059457600080fd5b50604080516020600460a43581810135601f810184900484028501840190955284845261022d9482359460248035956044359560643595608435953695929460c4949201918190840183828082843750949750610fe09650505050505050565b34801561060057600080fd5b5061025161110a565b34801561061557600080fd5b5061022d61111a565b34801561062a57600080fd5b5061030760043561116f565b34801561064257600080fd5b50610657600160a060020a0360043516611199565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561069357818101518382015260200161067b565b505050509050019250505060405180910390f35b3480156106b357600080fd5b5061030761147f565b3480156106c857600080fd5b5061022d600160a060020a036004351661148e565b3480156106e957600080fd5b50610371600160a060020a0360043516611541565b34801561070a57600080fd5b5061022d600160a060020a0360043516611574565b34801561072b57600080fd5b506103076115f7565b34801561074057600080fd5b5061022d611606565b34801561075557600080fd5b50610657600160a060020a036004351661165a565b34801561077657600080fd5b506103076116ea565b34801561078b57600080fd5b506103716116f9565b3480156107a057600080fd5b5061022d6116fe565b3480156107b557600080fd5b5061027a611782565b3480156107ca57600080fd5b50610657600160a060020a03600435166117e3565b3480156107eb57600080fd5b5061022d600160a060020a0360043516602435151561198a565b34801561081157600080fd5b5061022d600160a060020a0360043516602435611a0e565b34801561083557600080fd5b50610541600435611a8b565b34801561084d57600080fd5b50604080516020601f60643560048181013592830184900484028501840190955281845261022d94600160a060020a038135811695602480359092169560443595369560849401918190840183828082843750949750611ada9650505050505050565b3480156108bc57600080fd5b5061027a600435611afd565b3480156108d457600080fd5b5061022d611bb2565b3480156108e957600080fd5b5061022d600160a060020a0360043516611bd9565b34801561090a57600080fd5b50610307611c8c565b34801561091f57600080fd5b50610251600160a060020a0360043581169060243516611c9b565b34801561094657600080fd5b5061022d600160a060020a0360043516611cc9565b600160e060020a0319811660009081526001602052604090205460ff165b919050565b60068054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a0a5780601f106109df57610100808354040283529160200191610a0a565b820191906000526020600020905b8154815290600101906020018083116109ed57829003601f168201915b505050505090505b90565b600090815260036020526040902054600160a060020a031690565b60005460a060020a900460ff1615610a4757600080fd5b610a513382611d17565b1515610a5c57600080fd5b610a668183611d37565b5050565b600190565b600d5490565b7f01ffc9a70000000000000000000000000000000000000000000000000000000081565b3090565b60005460a060020a900460ff1615610ab457600080fd5b600160a060020a0382161515610ac957600080fd5b600160a060020a038216301415610adf57600080fd5b610ae93382611d90565b1515610af457600080fd5b610afe8382611d17565b1515610b0957600080fd5b610b14838383611db0565b505050565b6000610b2483611541565b8210610b2f57600080fd5b600160a060020a0383166000908152600b60205260409020805483908110610b5357fe5b9060005260206000200154905092915050565b60096020526000908152604090205481565b60005460a060020a900460ff1615610b8f57600080fd5b610b993385611d17565b1515610ba457600080fd5b600f54610bba90600160a060020a031685610a30565b600f54604080517f27ebe40a000000000000000000000000000000000000000000000000000000008152600481018790526024810186905260448101859052606481018490523360848201529051600160a060020a03909216916327ebe40a9160a48082019260009290919082900301818387803b158015610c3b57600080fd5b505af1158015610c4f573d6000803e3d6000fd5b5050505050505050565b600054600160a060020a03163314610c7057600080fd5b60005460a060020a900460ff161515610c8857600080fd5b600f54600160a060020a03161515610c9f57600080fd5b601054600160a060020a031615610cb557600080fd5b610cbd611f12565b565b60005460a060020a900460ff1615610cd657600080fd5b610b148383836020604051908101604052806000815250611f61565b600080548190600160a060020a03163314610d0c57600080fd5b60008681526009602052604090205491508115610d4f576008805483908110610d3157fe5b60009182526020909120600390910201600181018690559050610d7c565b600160a060020a0384161515610d6e57600054600160a060020a031693505b610d7a86868686611faf565b505b505050505050565b600f54600160a060020a031690565b6000610d9d610a6f565b8210610da857600080fd5b600d805483908110610db657fe5b90600052602060002001549050919050565b600081815260096020526040812054908080610de384611a8b565b93509350935093509193509193565b600060608060008030600160a060020a0316638462151c876040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050600060405180830381600087803b158015610e5557600080fd5b505af1158015610e69573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610e9257600080fd5b810190808051640100000000811115610eaa57600080fd5b82016020810184811115610ebd57600080fd5b8151856020820283011164010000000082111715610eda57600080fd5b5050600f54604080517f504bcde7000000000000000000000000000000000000000000000000000000008152600160a060020a038d811660048301529151939a509116945063504bcde79350602480820193506000929182900301818387803b158015610f4657600080fd5b505af1158015610f5a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610f8357600080fd5b810190808051640100000000811115610f9b57600080fd5b82016020810184811115610fae57600080fd5b8151856020820283011164010000000082111715610fcb57600080fd5b50509651965190960198975050505050505050565b6000805481908190600160a060020a03163314610ffc57600080fd5b6000898152600960205260409020549250821561103f57600880548490811061102157fe5b600091825260209091206003909102016001810189905591506110ff565b61104b89893087611faf565b600f54909150611065908290600160a060020a0316611d37565b600f54604080517f27ebe40a00000000000000000000000000000000000000000000000000000000815260048101849052602481018a905260448101899052606481018890523060848201529051600160a060020a03909216916327ebe40a9160a48082019260009290919082900301818387803b1580156110e657600080fd5b505af11580156110fa573d6000803e3d6000fd5b505050505b505050505050505050565b60005460a060020a900460ff1681565b600054600160a060020a0316331461113157600080fd5b60008054604051600160a060020a0390911691303180156108fc02929091818181858888f1935050505015801561116c573d6000803e3d6000fd5b50565b600081815260026020526040812054600160a060020a031680151561119357600080fd5b92915050565b606080606060008060006060600080600030600160a060020a0316638462151c8c6040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050600060405180830381600087803b15801561120557600080fd5b505af1158015611219573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561124257600080fd5b81019080805164010000000081111561125a57600080fd5b8201602081018481111561126d57600080fd5b815185602082028301116401000000008211171561128a57600080fd5b50509291905050509850600f60009054906101000a9004600160a060020a0316600160a060020a031663504bcde78c6040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050600060405180830381600087803b15801561130457600080fd5b505af1158015611318573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561134157600080fd5b81019080805164010000000081111561135957600080fd5b8201602081018481111561136c57600080fd5b815185602082028301116401000000008211171561138957600080fd5b50508c518151919c509a50985050508688019550508415156113aa57611471565b846040519080825280602002602001820160405280156113d4578160200160208202803883390190505b50935060009250600091505b858210156114265787828151811015156113f657fe5b60209081029091010151845160018501948691811061141157fe5b602090810290910101526001909101906113e0565b5060005b8681101561146d57888181518110151561144057fe5b60209081029091010151845160018501948691811061145b57fe5b6020908102909101015260010161142a565b8399505b505050505050505050919050565b601054600160a060020a031681565b60008054600160a060020a031633146114a657600080fd5b81905080600160a060020a03166385b861886040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156114e757600080fd5b505af11580156114fb573d6000803e3d6000fd5b505050506040513d602081101561151157600080fd5b5051151561151e57600080fd5b600f8054600160a060020a031916600160a060020a039290921691909117905550565b6000600160a060020a038216151561155857600080fd5b50600160a060020a031660009081526004602052604090205490565b600054600160a060020a0316331461158b57600080fd5b60005460a060020a900460ff1615156115a357600080fd5b60108054600160a060020a038316600160a060020a0319909116811790915560408051918252517f450db8da6efbe9c22f2347f7c2021231df1fc58d3ae9a2fa75d39fa4461993059181900360200190a150565b601154600160a060020a031690565b600054600160a060020a0316331461161d57600080fd5b60005460a060020a900460ff161561163457600080fd5b6000805474ff0000000000000000000000000000000000000000191660a060020a179055565b606061166582611541565b15156116805750604080516000815260208101909152610979565b600160a060020a0382166000908152600b6020908152604091829020805483518184028101840190945280845290918301828280156116de57602002820191906000526020600020905b8154815260200190600101908083116116ca575b50505050509050610979565b600054600160a060020a031681565b303190565b600054600160a060020a0316331461171557600080fd5b600f60009054906101000a9004600160a060020a0316600160a060020a0316635fd8c7106040518163ffffffff1660e060020a028152600401600060405180830381600087803b15801561176857600080fd5b505af115801561177c573d6000803e3d6000fd5b50505050565b60078054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a0a5780601f106109df57610100808354040283529160200191610a0a565b6060806000606060008030600160a060020a03166365675074886040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050600060405180830381600087803b15801561184857600080fd5b505af115801561185c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561188557600080fd5b81019080805164010000000081111561189d57600080fd5b820160208101848111156118b057600080fd5b81518560208202830111640100000000821117156118cd57600080fd5b505080519098509650505084151590506118e657611980565b83604051908082528060200260200182016040528015611910578160200160208202803883390190505b509250600091505b8382101561197c576008858381518110151561193057fe5b602090810290910101518154811061194457fe5b906000526020600020906003020190508060000154838381518110151561196757fe5b60209081029091010152600190910190611918565b8295505b5050505050919050565b600160a060020a0382163314156119a057600080fd5b336000818152600560209081526040808320600160a060020a03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b60005460a060020a900460ff1615611a2557600080fd5b600160a060020a0382161515611a3a57600080fd5b600160a060020a038216301415611a5057600080fd5b600f54600160a060020a0383811691161415611a6b57600080fd5b611a753382611d17565b1515611a8057600080fd5b610a66338383611db0565b6000806000806000600886815481101515611aa257fe5b60009182526020909120600390910201805460018201546002909201549798909791965067ffffffffffffffff909116945092505050565b60005460a060020a900460ff1615611af157600080fd5b61177c84848484611f61565b6060611b0882612171565b1515611b1357600080fd5b6000828152600a602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529091830182828015611ba65780601f10611b7b57610100808354040283529160200191611ba6565b820191906000526020600020905b815481529060010190602001808311611b8957829003601f168201915b50505050509050919050565b600054600160a060020a03163314611bc957600080fd5b611bd161218e565b610cbd612371565b60008054600160a060020a03163314611bf157600080fd5b81905080600160a060020a031663e69795696040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015611c3257600080fd5b505af1158015611c46573d6000803e3d6000fd5b505050506040513d6020811015611c5c57600080fd5b50511515611c6957600080fd5b60118054600160a060020a031916600160a060020a039290921691909117905550565b600f54600160a060020a031681565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600054600160a060020a03163314611ce057600080fd5b600160a060020a0381161515611cf557600080fd5b60008054600160a060020a031916600160a060020a0392909216919091179055565b600090815260026020526040902054600160a060020a0391821691161490565b6000828152600360205260408082208054600160a060020a031916600160a060020a0385169081179091559051849233917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a45050565b600090815260036020526040902054600160a060020a0391821691161490565b6000600160a060020a03841615611e2a57600160a060020a038416600090815260046020526040902054611deb90600163ffffffff61252616565b600160a060020a03851660009081526004602090815260408083209390935584825260039052208054600160a060020a0319169055611e2a8483612538565b600160a060020a038316600090815260046020526040902054611e5490600163ffffffff61273c16565b600160a060020a038416600081815260046020908152604080832094909455858252600281528382208054600160a060020a03191684179055918152600b82529182208054600181810180845592855292909320909201849055909150611ec290829063ffffffff61252616565b6000838152600c60205260408082209290925590518391600160a060020a0380871692908816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a450505050565b600054600160a060020a03163314611f2957600080fd5b60005460a060020a900460ff161515611f4157600080fd5b6000805474ff000000000000000000000000000000000000000019169055565b6000828152600260205260409020548290600160a060020a03161515611f8657600080fd5b611f91858585610a9d565b611f9d85858585612752565b1515611fa857600080fd5b5050505050565b6000611fb96128c7565b5060408051606081018252868152602081018681524267ffffffffffffffff90811693830193845260088054600180820180845560009390935285517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee360039093029283015593517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee482015594517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee5909501805467ffffffffffffffff191695909216949094179055909190612090908290612526565b6000888152600960205260409020819055905063ffffffff811681146120b557600080fd5b600d80546000838152600e60209081526040808320849055600184019094557fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5909201849055600a8252919091208551612111928701906128e7565b5060408051600160a060020a03871681526020810183905280820189905290517f2d49e37741dfbdb18a354011122af0d6b3bc41a42d6b1efa3919635173c02fc09181900360600190a161216760008683611db0565b9695505050505050565b600090815260026020526040902054600160a060020a0316151590565b600080548190819081906060908290600160a060020a031633146121b157600080fd5b601154600160a060020a031615156121c857600080fd5b5060005b6014811015610d7c57601154604080517fdb589bbe000000000000000000000000000000000000000000000000000000008152600481018490529051600190930192600160a060020a039092169163db589bbe9160248082019260009290919082900301818387803b15801561224157600080fd5b505af1158015612255573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260a081101561227e57600080fd5b8151602083015160408401516060850151608086018051949693959294919392830192916401000000008111156122b457600080fd5b820160208101848111156122c757600080fd5b81516401000000008111828201871017156122e157600080fd5b50979d50959b5093995091975092955050507f30000000000000000000000000000000000000000000000000000000000000008814159150612324905057610d7c565b600086815260096020526040812054111561233e576121cc565b61236c867fe8b791e59cb0e59bbe000000000000000000000000000000000000000000000087878787610fe0565b6121cc565b60008054819081906060908290600160a060020a0316331461239257600080fd5b601154600160a060020a031615156123a957600080fd5b5060005b6014811015611fa857601154604080517f7497a061000000000000000000000000000000000000000000000000000000008152600481018490529051600190930192600160a060020a0390921691637497a0619160248082019260009290919082900301818387803b15801561242257600080fd5b505af1158015612436573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052608081101561245f57600080fd5b815160208301516040840151606085018051939592949193918301929164010000000081111561248e57600080fd5b820160208101848111156124a157600080fd5b81516401000000008111828201871017156124bb57600080fd5b50969b5094995092975092955050507f300000000000000000000000000000000000000000000000000000000000000087141591506124fb905057611fa8565b6000858152600960205260408120541115612515576123ad565b61252185858585610cf2565b6123ad565b60008282111561253257fe5b50900390565b60008181526002602052604081205481908190600160a060020a0386811691161461256257600080fd5b600160a060020a0385166000908152600b60205260408120549350831161258557fe5b82600114156125c357600160a060020a0385166000908152600b602052604081206125af91612965565b6000848152600c6020526040812055611fa8565b6000848152600c602052604090205491506125e583600163ffffffff61252616565b82141561264d57600160a060020a0385166000908152600b602052604090205461261690600163ffffffff61252616565b600160a060020a0386166000908152600b602052604090206126389082612983565b506000848152600c6020526040812055611fa8565b600160a060020a0385166000908152600b6020526040902061267684600163ffffffff61252616565b8154811061268057fe5b9060005260206000200154905080600b600087600160a060020a0316600160a060020a03168152602001908152602001600020838154811015156126c057fe5b6000918252602080832090910192909255828152600c82526040808220859055600160a060020a0388168252600b909252205461270490600163ffffffff61252616565b600160a060020a0386166000908152600b602052604090206127269082612983565b505050600091825250600c602052604081205550565b60008282018381101561274b57fe5b9392505050565b60008061276785600160a060020a03166128bf565b151561277657600191506128b6565b6040517f150b7a020000000000000000000000000000000000000000000000000000000081523360048201818152600160a060020a03898116602485015260448401889052608060648501908152875160848601528751918a169463150b7a0294938c938b938b93909160a490910190602085019080838360005b838110156128095781810151838201526020016127f1565b50505050905090810190601f1680156128365780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561285857600080fd5b505af115801561286c573d6000803e3d6000fd5b505050506040513d602081101561288257600080fd5b5051600160e060020a031981167f150b7a020000000000000000000000000000000000000000000000000000000014925090505b50949350505050565b6000903b1190565b604080516060810182526000808252602082018190529181019190915290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061292857805160ff1916838001178555612955565b82800160010185558215612955579182015b8281111561295557825182559160200191906001019061293a565b506129619291506129a3565b5090565b508054600082559060005260206000209081019061116c91906129a3565b815481835581811115610b1457600083815260209020610b149181019083015b610a1291905b8082111561296157600081556001016129a95600a165627a7a7230582072746b80facd4d6feaca34a8498cae91f8af3fdb9c897ad78b49a53e68a6ac500029"}