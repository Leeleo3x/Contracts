{"Runs": "200", "SwarmSource": "bzzr://fbfcebba198cbd52e89070bf5c3c2e8c520b9045e7270f3de8d3603db7675683", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.11+commit.68ef5810", "ConstructorArguments": "", "SourceCode": "pragma solidity ^0.4.8;\r\n \r\n// ----------------------------------------------------------------------------------------------\r\n// Sample fixed supply token contract\r\n// Enjoy. (c) BokkyPooBah 2017. The MIT Licence.\r\n// ----------------------------------------------------------------------------------------------\r\n \r\n // ERC Token Standard #20 Interface\r\n// https://github.com/ethereum/EIPs/issues/20\r\ncontract ERC20Interface {\r\n// Get the total token supply\r\nfunction totalSupply() constant returns (uint256 totalSupply);\r\n\r\n// Get the account balance of another account with address _owner\r\nfunction balanceOf(address _owner) constant returns (uint256 balance);\r\n\r\n// Send _value amount of tokens to address _to\r\nfunction transfer(address _to, uint256 _value) returns (bool success);\r\n\r\n// Send _value amount of tokens from address _from to address _to\r\nfunction transferFrom(address _from, address _to, uint256 _value) returns (bool success);\r\n\r\n// Allow _spender to withdraw from your account, multiple times, up to the _value amount.\r\n// If this function is called again it overwrites the current allowance with _value.\r\n// this function is required for some DEX functionality\r\nfunction approve(address _spender, uint256 _value) returns (bool success);\r\n\r\n// Returns the amount which _spender is still allowed to withdraw from _owner\r\nfunction allowance(address _owner, address _spender) constant returns (uint256 remaining);\r\n\r\n// Triggered when tokens are transferred.\r\nevent Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\r\n// Triggered whenever approve(address _spender, uint256 _value) is called.\r\nevent Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n \r\ncontract FixedSupplyToken is ERC20Interface {\r\nstring public constant symbol = \"ATS\";\r\nstring public constant name = \"Authorship Token\";\r\nuint8 public constant decimals = 4;\r\nuint256 _totalSupply = 1000000000000;\r\n\r\n // Owner of this contract\r\naddress public owner;\r\n\r\n// Balances for each account\r\nmapping(address => uint256) balances;\r\n\r\n// Owner of account approves the transfer of an amount to another account\r\nmapping(address => mapping (address => uint256)) allowed;\r\n\r\n // Functions with this modifier can only be executed by the owner\r\nmodifier onlyOwner() {\r\nif (msg.sender != owner) {\r\n     throw;\r\n }\r\n   _;\r\n}\r\n\r\n// Constructor\r\n function FixedSupplyToken() {\r\n    owner = msg.sender;\r\n     balances[owner] = _totalSupply;\r\n }\r\n\r\nfunction totalSupply() constant returns (uint256 totalSupply) {\r\n      totalSupply = _totalSupply;\r\n}\r\n\r\n// What is the balance of a particular account?\r\nfunction balanceOf(address _owner) constant returns (uint256 balance) {\r\n    return balances[_owner];\r\n}\r\n\r\n// Transfer the balance from owner's account to another account\r\nfunction transfer(address _to, uint256 _amount) returns (bool success) {\r\nif (balances[msg.sender] >= _amount \r\n&& _amount > 0\r\n&& balances[_to] + _amount > balances[_to]) {\r\nbalances[msg.sender] -= _amount;\r\nbalances[_to] += _amount;\r\nTransfer(msg.sender, _to, _amount);\r\nreturn true;\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n\r\n// Send _value amount of tokens from address _from to address _to\r\n// The transferFrom method is used for a withdraw workflow, allowing contracts to send\r\n// tokens on your behalf, for example to \"deposit\" to a contract address and/or to charge\r\n// fees in sub-currencies; the command should fail unless the _from account has\r\n// deliberately authorized the sender of the message via some mechanism; we propose\r\n// these standardized APIs for approval:\r\nfunction transferFrom(\r\naddress _from,\r\naddress _to,\r\nuint256 _amount\r\n) returns (bool success) {\r\nif (balances[_from] >= _amount\r\n&& allowed[_from][msg.sender] >= _amount\r\n&& _amount > 0\r\n&& balances[_to] + _amount > balances[_to]) {\r\n balances[_from] -= _amount;\r\nallowed[_from][msg.sender] -= _amount;\r\nbalances[_to] += _amount;\r\nTransfer(_from, _to, _amount);\r\nreturn true;\r\n} else {\r\nreturn false;\r\n}\r\n}\r\n\r\n// Allow _spender to withdraw from your account, multiple times, up to the _value amount.\r\n // If this function is called again it overwrites the current allowance with _value.\r\nfunction approve(address _spender, uint256 _amount) returns (bool success) {\r\nallowed[msg.sender][_spender] = _amount;\r\nApproval(msg.sender, _spender, _amount);\r\nreturn true;\r\n}\r\n\r\nfunction allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\nreturn allowed[_owner][_spender];\r\n}\r\n}", "OptimizationUsed": "1", "ContractName": "FixedSupplyToken", "ByteCode": "0x606060405236156100a15763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100a3578063095ea7b31461013357806318160ddd1461016657806323b872dd14610188578063313ce567146101c157806370a08231146101e75780638da5cb5b1461021557806395d89b4114610241578063a9059cbb146102d1578063dd62ed3e14610304575bfe5b34156100ab57fe5b6100b3610338565b6040805160208082528351818301528351919283929083019185019080838382156100f9575b8051825260208311156100f957601f1990920191602091820191016100d9565b505050905090810190601f1680156101255780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561013b57fe5b610152600160a060020a036004351660243561036f565b604080519115158252519081900360200190f35b341561016e57fe5b6101766103da565b60408051918252519081900360200190f35b341561019057fe5b610152600160a060020a03600435811690602435166044356103e1565b604080519115158252519081900360200190f35b34156101c957fe5b6101d16104fb565b6040805160ff9092168252519081900360200190f35b34156101ef57fe5b610176600160a060020a0360043516610500565b60408051918252519081900360200190f35b341561021d57fe5b61022561051f565b60408051600160a060020a039092168252519081900360200190f35b341561024957fe5b6100b361052e565b6040805160208082528351818301528351919283929083019185019080838382156100f9575b8051825260208311156100f957601f1990920191602091820191016100d9565b505050905090810190601f1680156101255780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156102d957fe5b610152600160a060020a0360043516602435610565565b604080519115158252519081900360200190f35b341561030c57fe5b610176600160a060020a0360043581169060243516610636565b60408051918252519081900360200190f35b60408051808201909152601081527f417574686f727368697020546f6b656e00000000000000000000000000000000602082015281565b600160a060020a03338116600081815260036020908152604080832094871680845294825280832086905580518681529051929493927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b6000545b90565b600160a060020a0383166000908152600260205260408120548290108015906104315750600160a060020a0380851660009081526003602090815260408083203390941683529290522054829010155b801561043d5750600082115b80156104625750600160a060020a038316600090815260026020526040902054828101115b156104ef57600160a060020a03808516600081815260026020818152604080842080548990039055600382528084203387168552825280842080548990039055948816808452918152918490208054870190558351868152935190937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92908290030190a35060016104f3565b5060005b5b9392505050565b600481565b600160a060020a0381166000908152600260205260409020545b919050565b600154600160a060020a031681565b60408051808201909152600381527f4154530000000000000000000000000000000000000000000000000000000000602082015281565b600160a060020a03331660009081526002602052604081205482901080159061058e5750600082115b80156105b35750600160a060020a038316600090815260026020526040902054828101115b1561062757600160a060020a03338116600081815260026020908152604080832080548890039055938716808352918490208054870190558351868152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35060016103d4565b5060006103d4565b5b92915050565b600160a060020a038083166000908152600360209081526040808320938516835292905220545b929150505600a165627a7a72305820fbfcebba198cbd52e89070bf5c3c2e8c520b9045e7270f3de8d3603db76756830029"}