{"Runs": "200", "SwarmSource": "bzzr://b9ca49af5ff1861a1e3fead09eeef8856f285849ee41fbfab3c707ba14909853", "ABI": "[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_approved\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_toyUid\",\"type\":\"uint256\"},{\"name\":\"_externalAddress\",\"type\":\"address\"},{\"name\":\"_externalId\",\"type\":\"uint256\"}],\"name\":\"linkExternalNft\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_toUid\",\"type\":\"uint256\"},{\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"depositERC20\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fromUid\",\"type\":\"uint256\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_toUid\",\"type\":\"uint256\"}],\"name\":\"depositEther\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_fromUid\",\"type\":\"uint256\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"transferERC20\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_uid\",\"type\":\"uint256\"}],\"name\":\"getLinkedNft\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"priceToMint\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_fromUid\",\"type\":\"uint256\"},{\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newUrl\",\"type\":\"string\"}],\"name\":\"updateMetadataUrl\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newUid\",\"type\":\"bytes7\"},{\"name\":\"_toyId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"link\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_externalAddress\",\"type\":\"address\"},{\"name\":\"_externalId\",\"type\":\"uint256\"}],\"name\":\"externalNftIsLinked\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fromUid\",\"type\":\"uint256\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"},{\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_toUid\",\"type\":\"uint256\"},{\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"depositERC20From\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_uid\",\"type\":\"uint256\"}],\"name\":\"getToy\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"mintAndSend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"changeToyPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_uid\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"changeToyData\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"updatePlayTokenContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_uid\",\"type\":\"uint256\"},{\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"getExternalTokenBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_oldUid\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_newUid\",\"type\":\"uint256\"}],\"name\":\"Link\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransfer\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.24+commit.e67f0147", "ConstructorArguments": "", "SourceCode": "pragma solidity ^0.4.24;\r\n\r\n//-----------------------------------------------------------------------------\r\n/// @title TOY Ownership\r\n/// @notice defines TOY Token ownership-tracking structures and view functions.\r\n//-----------------------------------------------------------------------------\r\ncontract ToyOwnership {\r\n    struct ToyToken {\r\n        // owner ID list\r\n        address owner;\r\n        // unique identifier\r\n        uint uid;\r\n        // timestamp\r\n        uint timestamp;\r\n        // exp\r\n        uint exp;\r\n        // toy data\r\n        bytes toyData;\r\n    }\r\n\r\n    struct ExternalNft{\r\n        // Contract address\r\n        address nftContractAddress;\r\n        // Token Identifier\r\n        uint nftId;\r\n    }\r\n\r\n    // Array containing all TOY Tokens. The first element in toyArray returns\r\n    //  as invalid\r\n    ToyToken[] toyArray;\r\n    // Mapping containing all UIDs tracked by this contract. Valid UIDs map to\r\n    //  index numbers, invalid UIDs map to 0.\r\n    mapping (uint => uint) uidToToyIndex;\r\n    // Mapping containing linked external NFTs. Linked TOY Tokens always map to\r\n    //  non-zero numbers, invalid TOY Tokens map to 0.\r\n    mapping (uint => ExternalNft) uidToExternalNft;\r\n    // Mapping containing tokens IDs for tokens created by an external contract\r\n    //  and whether or not it is linked to a TOY Token \r\n    mapping (address => mapping (uint => bool)) linkedExternalNfts;\r\n    \r\n    //-------------------------------------------------------------------------\r\n    /// @dev Throws if TOY Token #`_tokenId` isn't tracked by the toyArray.\r\n    //-------------------------------------------------------------------------\r\n    modifier mustExist(uint _tokenId) {\r\n        require (uidToToyIndex[_tokenId] != 0, \"Invalid TOY Token UID\");\r\n        _;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @dev Throws if TOY Token #`_tokenId` isn't owned by sender.\r\n    //-------------------------------------------------------------------------\r\n    modifier mustOwn(uint _tokenId) {\r\n        require \r\n        (\r\n            ownerOf(_tokenId) == msg.sender, \r\n            \"Must be owner of this TOY Token\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @dev Throws if parameter is zero\r\n    //-------------------------------------------------------------------------\r\n    modifier notZero(uint _param) {\r\n        require(_param != 0, \"Parameter cannot be zero\");\r\n        _;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @dev Creates an empty TOY Token as a [0] placeholder for invalid TOY \r\n    ///  Token queries.\r\n    //-------------------------------------------------------------------------\r\n    constructor () public {\r\n        toyArray.push(ToyToken(0,0,0,0,\"\"));\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Find the owner of TOY Token #`_tokenId`\r\n    /// @dev throws if `_owner` is the zero address.\r\n    /// @param _tokenId The identifier for a TOY Token\r\n    /// @return The address of the owner of the TOY Token\r\n    //-------------------------------------------------------------------------\r\n    function ownerOf(uint256 _tokenId) \r\n        public \r\n        view \r\n        mustExist(_tokenId) \r\n        returns (address) \r\n    {\r\n        // owner must not be the zero address\r\n        require (\r\n            toyArray[uidToToyIndex[_tokenId]].owner != 0, \r\n            \"TOY Token has no owner\"\r\n        );\r\n        return toyArray[uidToToyIndex[_tokenId]].owner;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Count all TOY Tokens assigned to an owner\r\n    /// @dev throws if `_owner` is the zero address.\r\n    /// @param _owner An address to query\r\n    /// @return The number of TOY Tokens owned by `_owner`, possibly zero\r\n    //-------------------------------------------------------------------------\r\n    function balanceOf(address _owner) \r\n        public \r\n        view \r\n        notZero(uint(_owner)) \r\n        returns (uint256) \r\n    {\r\n        uint owned;\r\n        for (uint i = 1; i < toyArray.length; ++i) {\r\n            if(toyArray[i].owner == _owner) {\r\n                ++owned;\r\n            }\r\n        }\r\n        return owned;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Get a list of TOY Tokens assigned to an owner\r\n    /// @dev Throws if `_index` >= `balanceOf(_owner)` or if\r\n    ///  `_owner` is the zero address, representing invalid TOY Tokens.\r\n    /// @param _owner Address to query for TOY Tokens.\r\n    /// @return The complete list of Unique Indentifiers for TOY Tokens\r\n    ///  assigned to `_owner`\r\n    //-------------------------------------------------------------------------\r\n    function tokensOfOwner(address _owner) external view returns (uint[]) {\r\n        uint toysOwned = balanceOf(_owner);\r\n        require(toysOwned > 0, \"No owned TOY Tokens\");\r\n        uint counter = 0;\r\n        uint[] memory result = new uint[](toysOwned);\r\n        for (uint i = 0; i < toyArray.length; i++) {\r\n            if(toyArray[i].owner == _owner) {\r\n                result[counter] = toyArray[i].uid;\r\n                counter++;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Get number of TOY Tokens tracked by this contract\r\n    /// @return A count of valid TOY Tokens tracked by this contract, where\r\n    ///  each one has an assigned and queryable owner.\r\n    //-------------------------------------------------------------------------\r\n    function totalSupply() external view returns (uint256) {\r\n        return (toyArray.length - 1);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Get the UID of TOY Token with index number `index`.\r\n    /// @dev Throws if `_index` >= `totalSupply()`.\r\n    /// @param _index A counter less than `totalSupply()`\r\n    /// @return The UID for the #`_index` TOY Token in the TOY Token array.\r\n    //-------------------------------------------------------------------------\r\n    function tokenByIndex(uint256 _index) external view returns (uint256) {\r\n        // index must correspond to an existing TOY Token\r\n        require (_index > 0 && _index < toyArray.length, \"Invalid index\");\r\n        return (toyArray[_index].uid);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Enumerate NFTs assigned to an owner\r\n    /// @dev Throws if `_index` >= `balanceOf(_owner)` or if\r\n    ///  `_owner` is the zero address, representing invalid NFTs.\r\n    /// @param _owner Address to query for TOY Tokens.\r\n    /// @param _index A counter less than `balanceOf(_owner)`\r\n    /// @return The Unique Indentifier for the #`_index` TOY Token assigned to\r\n    ///  `_owner`, (sort order not specified)\r\n    //-------------------------------------------------------------------------\r\n    function tokenOfOwnerByIndex(\r\n        address _owner, \r\n        uint256 _index\r\n    ) external view notZero(uint(_owner)) returns (uint256) {\r\n        uint toysOwned = balanceOf(_owner);\r\n        require(toysOwned > 0, \"No owned TOY Tokens\");\r\n        require(_index < toysOwned, \"Invalid index\");\r\n        uint counter = 0;\r\n        for (uint i = 0; i < toyArray.length; i++) {\r\n            if (toyArray[i].owner == _owner) {\r\n                if (counter == _index) {\r\n                    return(toyArray[i].uid);\r\n                } else {\r\n                    counter++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//-----------------------------------------------------------------------------\r\n/// @title Token Receiver Interface\r\n//-----------------------------------------------------------------------------\r\ninterface TokenReceiverInterface {\r\n    function onERC721Received(\r\n        address _operator, \r\n        address _from, \r\n        uint256 _tokenId, \r\n        bytes _data\r\n    ) external returns(bytes4);\r\n}\r\n\r\n\r\n//-----------------------------------------------------------------------------\r\n/// @title ERC721 Interface\r\n//-----------------------------------------------------------------------------\r\ninterface ERC721 {\r\n    function transferFrom (\r\n        address _from, \r\n        address _to, \r\n        uint256 _tokenId\r\n    ) external payable;\r\n    function ownerOf(uint _tokenId) external returns(address);\r\n    function getApproved(uint256 _tokenId) external view returns (address);\r\n    function isApprovedForAll(address _owner, address _operator) external view returns (bool);\r\n}\r\n\r\n\r\n//-----------------------------------------------------------------------------\r\n/// @title TOY Transfers\r\n/// @notice Defines transfer functionality for TOY Tokens to transfer ownership.\r\n///  Defines approval functionality for 3rd parties to enable transfers on\r\n///  owners' behalf.\r\n//-----------------------------------------------------------------------------\r\ncontract ToyTransfers is ToyOwnership {\r\n    //-------------------------------------------------------------------------\r\n    /// @dev Transfer emits when ownership of a TOY Token changes by any\r\n    ///  mechanism. This event emits when TOY Tokens are created ('from' == 0).\r\n    ///  At the time of any transfer, the approved address for that TOY Token\r\n    ///  (if any) is reset to address(0).\r\n    //-------------------------------------------------------------------------\r\n    event Transfer(\r\n        address indexed _from, \r\n        address indexed _to, \r\n        uint256 indexed _tokenId\r\n    );\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @dev Approval emits when the approved address for a TOY Token is\r\n    ///  changed or reaffirmed. The zero address indicates there is no approved\r\n    ///  address. When a Transfer event emits, this also indicates that the\r\n    ///  approved address for that TOY Token (if any) is reset to none.\r\n    //-------------------------------------------------------------------------\r\n    event Approval(\r\n        address indexed _owner, \r\n        address indexed _approved, \r\n        uint256 indexed _tokenId\r\n    );\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @dev This emits when an operator is enabled or disabled for an owner.\r\n    ///  The operator can manage all TOY Tokens of the owner.\r\n    //-------------------------------------------------------------------------\r\n    event ApprovalForAll(\r\n        address indexed _owner, \r\n        address indexed _operator, \r\n        bool _approved\r\n    );\r\n\r\n    // Mapping from token ID to approved address\r\n    mapping (uint => address) idToApprovedAddress;\r\n    // Mapping from owner to operator approvals\r\n    mapping (address => mapping (address => bool)) operatorApprovals;\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @dev Throws if called by any account other than token owner, approved\r\n    ///  address, or authorized operator.\r\n    //-------------------------------------------------------------------------\r\n    modifier canOperate(uint _uid) {\r\n        // sender must be owner of TOY Token #uid, or sender must be the\r\n        //  approved address of TOY Token #uid, or an authorized operator for\r\n        //  TOY Token owner\r\n        require (\r\n            msg.sender == toyArray[uidToToyIndex[_uid]].owner ||\r\n            msg.sender == idToApprovedAddress[_uid] ||\r\n            operatorApprovals[toyArray[uidToToyIndex[_uid]].owner][msg.sender],\r\n            \"Not authorized to operate for this TOY Token\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Change or reaffirm the approved address for TOY Token #`_tokenId`.\r\n    /// @dev The zero address indicates there is no approved address.\r\n    ///  Throws unless `msg.sender` is the current NFT owner, or an authorized\r\n    ///  operator of the current owner.\r\n    /// @param _approved The new approved TOY Token controller\r\n    /// @param _tokenId The TOY Token to approve\r\n    //-------------------------------------------------------------------------\r\n    function approve(address _approved, uint256 _tokenId) external payable {\r\n        address owner = ownerOf(_tokenId);\r\n        // msg.sender must be the current NFT owner, or an authorized operator\r\n        //  of the current owner.\r\n        require (\r\n            msg.sender == owner || isApprovedForAll(owner, msg.sender),\r\n            \"Not authorized to approve for this TOY Token\"\r\n        );\r\n        idToApprovedAddress[_tokenId] = _approved;\r\n        emit Approval(owner, _approved, _tokenId);\r\n    }\r\n    \r\n    //-------------------------------------------------------------------------\r\n    /// @notice Get the approved address for a single NFT\r\n    /// @dev Throws if `_tokenId` is not a valid NFT.\r\n    /// @param _tokenId The NFT to find the approved address for\r\n    /// @return The approved address for this NFT, or the zero address if\r\n    ///  there is none\r\n    //-------------------------------------------------------------------------\r\n    function getApproved(\r\n        uint256 _tokenId\r\n    ) external view mustExist(_tokenId) returns (address) {\r\n        return idToApprovedAddress[_tokenId];\r\n    }\r\n    \r\n    //-------------------------------------------------------------------------\r\n    /// @notice Enable or disable approval for a third party (\"operator\") to\r\n    ///  manage all of sender's TOY Tokens\r\n    /// @dev Emits the ApprovalForAll event. The contract MUST allow multiple\r\n    ///  operators per owner.\r\n    /// @param _operator Address to add to the set of authorized operators\r\n    /// @param _approved True if the operator is approved, false to revoke\r\n    ///  approval\r\n    //-------------------------------------------------------------------------\r\n    function setApprovalForAll(address _operator, bool _approved) external {\r\n        require(_operator != msg.sender, \"Operator cannot be sender\");\r\n        operatorApprovals[msg.sender][_operator] = _approved;\r\n        emit ApprovalForAll(msg.sender, _operator, _approved);\r\n    }\r\n    \r\n    //-------------------------------------------------------------------------\r\n    /// @notice Get whether '_operator' is approved to manage all of '_owner's\r\n    ///  TOY Tokens\r\n    /// @param _owner TOY Token Owner.\r\n    /// @param _operator Address to check for approval.\r\n    /// @return True if '_operator' is approved to manage all of '_owner's' TOY\r\n    ///  Tokens.\r\n    //-------------------------------------------------------------------------\r\n    function isApprovedForAll(\r\n        address _owner, \r\n        address _operator\r\n    ) public view returns (bool) {\r\n        return operatorApprovals[_owner][_operator];\r\n    }\r\n\r\n    \r\n    //-------------------------------------------------------------------------\r\n    /// @notice Transfers ownership of TOY Token #`_tokenId` from `_from` to \r\n    ///  `_to`\r\n    /// @dev Throws unless `msg.sender` is the current owner, an authorized\r\n    ///  operator, or the approved address for this NFT. Throws if `_from` is\r\n    ///  not the current owner. Throws if `_to` is the zero address. Throws if\r\n    ///  `_tokenId` is not a valid NFT. When transfer is complete, checks if\r\n    ///  `_to` is a smart contract (code size > 0). If so, it calls\r\n    ///  `onERC721Received` on `_to` and throws if the return value is not\r\n    ///  `0x150b7a02`. If TOY Token is linked to an external NFT, this function\r\n    ///  calls TransferFrom from the external address. Throws if this contract\r\n    ///  is not an approved operator for the external NFT.\r\n    /// @param _from The current owner of the NFT\r\n    /// @param _to The new owner\r\n    /// @param _tokenId The NFT to transfer\r\n    //-------------------------------------------------------------------------\r\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId) \r\n        external \r\n        payable \r\n        mustExist(_tokenId) \r\n        canOperate(_tokenId) \r\n        notZero(uint(_to)) \r\n    {\r\n        address owner = ownerOf(_tokenId);\r\n        // _from address must be current owner of the TOY Token\r\n        require (\r\n            _from == owner, \r\n            \"TOY Token not owned by '_from'\"\r\n        );\r\n               \r\n        // if TOY Token has a linked external NFT, call TransferFrom on the \r\n        //  external NFT contract\r\n        ExternalNft memory externalNft = uidToExternalNft[_tokenId];\r\n        if (externalNft.nftContractAddress != 0) {\r\n            // initialize external NFT contract\r\n            ERC721 externalContract = ERC721(externalNft.nftContractAddress);\r\n            // call TransferFrom\r\n            externalContract.transferFrom(_from, _to, externalNft.nftId);\r\n        }\r\n\r\n        // clear approval\r\n        idToApprovedAddress[_tokenId] = 0;\r\n        // transfer ownership\r\n        toyArray[uidToToyIndex[_tokenId]].owner = _to;\r\n\r\n        emit Transfer(_from, _to, _tokenId);\r\n\r\n        // check and call onERC721Received. Throws and rolls back the transfer\r\n        //  if _to does not implement the expected interface\r\n        uint size;\r\n        assembly { size := extcodesize(_to) }\r\n        if (size > 0) {\r\n            bytes4 retval = TokenReceiverInterface(_to).onERC721Received(msg.sender, _from, _tokenId, \"\");\r\n            require(\r\n                retval == 0x150b7a02, \r\n                \"Destination contract not equipped to receive TOY Tokens\"\r\n            );\r\n        }\r\n    }\r\n    \r\n    //-------------------------------------------------------------------------\r\n    /// @notice Transfers ownership of TOY Token #`_tokenId` from `_from` to \r\n    ///  `_to`\r\n    /// @dev Throws unless `msg.sender` is the current owner, an authorized\r\n    ///  operator, or the approved address for this NFT. Throws if `_from` is\r\n    ///  not the current owner. Throws if `_to` is the zero address. Throws if\r\n    ///  `_tokenId` is not a valid NFT. If TOY Token is linked to an external\r\n    ///  NFT, this function calls TransferFrom from the external address.\r\n    ///  Throws if this contract is not an approved operator for the external\r\n    ///  NFT. When transfer is complete, checks if `_to` is a smart contract\r\n    ///  (code size > 0). If so, it calls `onERC721Received` on `_to` and\r\n    ///  throws if the return value is not `0x150b7a02`.\r\n    /// @param _from The current owner of the NFT\r\n    /// @param _to The new owner\r\n    /// @param _tokenId The NFT to transfer\r\n    /// @param _data Additional data with no pre-specified format\r\n    //-------------------------------------------------------------------------\r\n    function safeTransferFrom(\r\n        address _from, \r\n        address _to, \r\n        uint256 _tokenId, \r\n        bytes _data\r\n    ) \r\n        external \r\n        payable \r\n        mustExist(_tokenId) \r\n        canOperate(_tokenId) \r\n        notZero(uint(_to)) \r\n    {\r\n        address owner = ownerOf(_tokenId);\r\n        // _from address must be current owner of the TOY Token\r\n        require (\r\n            _from == owner, \r\n            \"TOY Token not owned by '_from'\"\r\n        );\r\n        \r\n        // if TOY Token has a linked external NFT, call TransferFrom on the \r\n        //  external NFT contract\r\n        ExternalNft memory externalNft = uidToExternalNft[_tokenId];\r\n        if (externalNft.nftContractAddress != 0) {\r\n            // initialize external NFT contract\r\n            ERC721 externalContract = ERC721(externalNft.nftContractAddress);\r\n            // call TransferFrom\r\n            externalContract.transferFrom(_from, _to, externalNft.nftId);\r\n        }\r\n\r\n        // clear approval\r\n        idToApprovedAddress[_tokenId] = 0;\r\n        // transfer ownership\r\n        toyArray[uidToToyIndex[_tokenId]].owner = _to;\r\n\r\n        emit Transfer(_from, _to, _tokenId);\r\n\r\n        // check and call onERC721Received. Throws and rolls back the transfer\r\n        //  if _to does not implement the expected interface\r\n        uint size;\r\n        assembly { size := extcodesize(_to) }\r\n        if (size > 0) {\r\n            bytes4 retval = TokenReceiverInterface(_to).onERC721Received(msg.sender, _from, _tokenId, _data);\r\n            require(\r\n                retval == 0x150b7a02,\r\n                \"Destination contract not equipped to receive TOY Tokens\"\r\n            );\r\n        }\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE\r\n    ///  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE\r\n    ///  THEY MAY BE PERMANENTLY LOST\r\n    /// @dev Throws unless `msg.sender` is the current owner, an authorized\r\n    ///  operator, or the approved address for this NFT. Throws if `_from` is\r\n    ///  not the current owner. Throws if `_to` is the zero address. Throws if\r\n    ///  `_tokenId` is not a valid NFT. If TOY Token is linked to an external\r\n    ///  NFT, this function calls TransferFrom from the external address.\r\n    ///  Throws if this contract is not an approved operator for the external\r\n    ///  NFT.\r\n    /// @param _from The current owner of the NFT\r\n    /// @param _to The new owner\r\n    /// @param _tokenId The NFT to transfer\r\n    //-------------------------------------------------------------------------\r\n    function transferFrom(address _from, address _to, uint256 _tokenId)\r\n        external \r\n        payable \r\n        mustExist(_tokenId) \r\n        canOperate(_tokenId) \r\n        notZero(uint(_to)) \r\n    {\r\n        address owner = ownerOf(_tokenId);\r\n        // _from address must be current owner of the TOY Token\r\n        require (\r\n            _from == owner && _from != 0, \r\n            \"TOY Token not owned by '_from'\"\r\n        );\r\n        \r\n        // if TOY Token has a linked external NFT, call TransferFrom on the \r\n        //  external NFT contract\r\n        ExternalNft memory externalNft = uidToExternalNft[_tokenId];\r\n        if (externalNft.nftContractAddress != 0) {\r\n            // initialize external NFT contract\r\n            ERC721 externalContract = ERC721(externalNft.nftContractAddress);\r\n            // call TransferFrom\r\n            externalContract.transferFrom(_from, _to, externalNft.nftId);\r\n        }\r\n\r\n        // clear approval\r\n        idToApprovedAddress[_tokenId] = 0;\r\n        // transfer ownership\r\n        toyArray[uidToToyIndex[_tokenId]].owner = _to;\r\n\r\n        emit Transfer(_from, _to, _tokenId);\r\n    }\r\n}\r\n\r\n\r\n//-----------------------------------------------------------------------------\r\n///@title ERC-20 function declarations\r\n//-----------------------------------------------------------------------------\r\ninterface ERC20 {\r\n    function transfer (\r\n        address to, \r\n        uint tokens\r\n    ) external returns (bool success);\r\n\r\n    function transferFrom (\r\n        address from, \r\n        address to, \r\n        uint tokens\r\n    ) external returns (bool success);\r\n}\r\n\r\n\r\n//-----------------------------------------------------------------------------\r\n/// @title External Token Handler\r\n/// @notice Defines depositing and withdrawal of Ether and ERC-20-compliant\r\n///  tokens into TOY Tokens.\r\n//-----------------------------------------------------------------------------\r\ncontract ExternalTokenHandler is ToyTransfers {\r\n    // handles the balances of TOY Tokens for every ERC20 token address\r\n    mapping (address => mapping(uint => uint)) externalTokenBalances;\r\n    \r\n    // UID value is 7 bytes. Max value is 2**56 - 1\r\n    uint constant UID_MAX = 0xFFFFFFFFFFFFFF;\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Deposit Ether from sender to approved TOY Token\r\n    /// @dev Throws if Ether to deposit is zero. Throws if sender is not\r\n    ///  approved to operate TOY Token #`toUid`. Throws if TOY Token #`toUid`\r\n    ///  is unlinked. Throws if sender has insufficient balance for deposit.\r\n    /// @param _toUid the TOY Token to deposit the Ether into\r\n    //-------------------------------------------------------------------------\r\n    function depositEther(uint _toUid) \r\n        external \r\n        payable \r\n        canOperate(_toUid)\r\n        notZero(msg.value)\r\n    {\r\n        // TOY Token must be linked\r\n        require (\r\n            _toUid < UID_MAX, \r\n            \"Invalid TOY Token. TOY Token not yet linked\"\r\n        );\r\n        // add amount to TOY Token's balance\r\n        externalTokenBalances[address(this)][_toUid] += msg.value;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Withdraw Ether from approved TOY Token to TOY Token's owner\r\n    /// @dev Throws if Ether to withdraw is zero. Throws if sender is not an\r\n    ///  approved operator for TOY Token #`_fromUid`. Throws if TOY Token \r\n    ///  #`_fromUid` has insufficient balance to withdraw.\r\n    /// @param _fromUid the TOY Token to withdraw the Ether from\r\n    /// @param _amount the amount of Ether to withdraw (in Wei)\r\n    //-------------------------------------------------------------------------\r\n    function withdrawEther(\r\n        uint _fromUid, \r\n        uint _amount\r\n    ) external canOperate(_fromUid) notZero(_amount) {\r\n        // TOY Token must have sufficient Ether balance\r\n        require (\r\n            externalTokenBalances[address(this)][_fromUid] >= _amount,\r\n            \"Insufficient Ether to withdraw\"\r\n        );\r\n        // subtract amount from TOY Token's balance\r\n        externalTokenBalances[address(this)][_fromUid] -= _amount;\r\n        // call transfer function\r\n        ownerOf(_fromUid).transfer(_amount);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Withdraw Ether from approved TOY Token and send to '_to'\r\n    /// @dev Throws if Ether to transfer is zero. Throws if sender is not an\r\n    ///  approved operator for TOY Token #`to_fromUidUid`. Throws if TOY Token\r\n    ///  #`_fromUid` has insufficient balance to withdraw.\r\n    /// @param _fromUid the TOY Token to withdraw and send the Ether from\r\n    /// @param _to the address to receive the transferred Ether\r\n    /// @param _amount the amount of Ether to withdraw (in Wei)\r\n    //-------------------------------------------------------------------------\r\n    function transferEther(\r\n        uint _fromUid,\r\n        address _to,\r\n        uint _amount\r\n    ) external canOperate(_fromUid) notZero(_amount) {\r\n        // TOY Token must have sufficient Ether balance\r\n        require (\r\n            externalTokenBalances[address(this)][_fromUid] >= _amount,\r\n            \"Insufficient Ether to transfer\"\r\n        );\r\n        // subtract amount from TOY Token's balance\r\n        externalTokenBalances[address(this)][_fromUid] -= _amount;\r\n        // call transfer function\r\n        _to.transfer(_amount);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Deposit ERC-20 tokens from sender to approved TOY Token\r\n    /// @dev This contract address must be an authorized spender for sender.\r\n    ///  Throws if tokens to deposit is zero. Throws if sender is not an\r\n    ///  approved operator for TOY Token #`toUid`. Throws if TOY Token #`toUid`\r\n    ///  is unlinked. Throws if this contract address has insufficient\r\n    ///  allowance for transfer. Throws if sender has insufficient balance for \r\n    ///  deposit. Throws if tokenAddress has no transferFrom function.\r\n    /// @param _tokenAddress the ERC-20 contract address\r\n    /// @param _toUid the TOY Token to deposit the ERC-20 tokens into\r\n    /// @param _tokens the number of tokens to deposit\r\n    //-------------------------------------------------------------------------\r\n    function depositERC20 (\r\n        address _tokenAddress, \r\n        uint _toUid, \r\n        uint _tokens\r\n    ) external canOperate(_toUid) notZero(_tokens) {\r\n        // TOY Token must be linked\r\n        require (_toUid < UID_MAX, \"Invalid TOY Token. TOY Token not yet linked\");\r\n        // initialize token contract\r\n        ERC20 tokenContract = ERC20(_tokenAddress);\r\n        // add amount to TOY Token's balance\r\n        externalTokenBalances[_tokenAddress][_toUid] += _tokens;\r\n\r\n        // call transferFrom function from token contract\r\n        tokenContract.transferFrom(msg.sender, address(this), _tokens);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Deposit ERC-20 tokens from '_to' to approved TOY Token\r\n    /// @dev This contract address must be an authorized spender for '_from'.\r\n    ///  Throws if tokens to deposit is zero. Throws if sender is not an\r\n    ///  approved operator for TOY Token #`toUid`. Throws if TOY Token #`toUid`\r\n    ///  is unlinked. Throws if this contract address has insufficient\r\n    ///  allowance for transfer. Throws if sender has insufficient balance for\r\n    ///  deposit. Throws if tokenAddress has no transferFrom function.\r\n    /// @param _tokenAddress the ERC-20 contract address\r\n    /// @param _from the address sending ERC-21 tokens to deposit\r\n    /// @param _toUid the TOY Token to deposit the ERC-20 tokens into\r\n    /// @param _tokens the number of tokens to deposit\r\n    //-------------------------------------------------------------------------\r\n    function depositERC20From (\r\n        address _tokenAddress,\r\n        address _from, \r\n        uint _toUid, \r\n        uint _tokens\r\n    ) external canOperate(_toUid) notZero(_tokens) {\r\n        // TOY Token must be linked\r\n        require (\r\n            _toUid < UID_MAX, \r\n            \"Invalid TOY Token. TOY Token not yet linked\"\r\n        );\r\n        // initialize token contract\r\n        ERC20 tokenContract = ERC20(_tokenAddress);\r\n        // add amount to TOY Token's balance\r\n        externalTokenBalances[_tokenAddress][_toUid] += _tokens;\r\n\r\n        // call transferFrom function from token contract\r\n        tokenContract.transferFrom(_from, address(this), _tokens);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Withdraw ERC-20 tokens from approved TOY Token to TOY Token's\r\n    ///  owner\r\n    /// @dev Throws if tokens to withdraw is zero. Throws if sender is not an\r\n    ///  approved operator for TOY Token #`_fromUid`. Throws if TOY Token \r\n    ///  #`_fromUid` has insufficient balance to withdraw. Throws if \r\n    ///  tokenAddress has no transfer function.\r\n    /// @param _tokenAddress the ERC-20 contract address\r\n    /// @param _fromUid the TOY Token to withdraw the ERC-20 tokens from\r\n    /// @param _tokens the number of tokens to withdraw\r\n    //-------------------------------------------------------------------------\r\n    function withdrawERC20 (\r\n        address _tokenAddress, \r\n        uint _fromUid, \r\n        uint _tokens\r\n    ) external canOperate(_fromUid) notZero(_tokens) {\r\n        // TOY Token must have sufficient token balance\r\n        require (\r\n            externalTokenBalances[_tokenAddress][_fromUid] >= _tokens,\r\n            \"insufficient tokens to withdraw\"\r\n        );\r\n        // initialize token contract\r\n        ERC20 tokenContract = ERC20(_tokenAddress);\r\n        // subtract amount from TOY Token's balance\r\n        externalTokenBalances[_tokenAddress][_fromUid] -= _tokens;\r\n        \r\n        // call transfer function from token contract\r\n        tokenContract.transfer(ownerOf(_fromUid), _tokens);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Transfer ERC-20 tokens from your TOY Token to `_to`\r\n    /// @dev Throws if tokens to transfer is zero. Throws if sender is not an\r\n    ///  approved operator for TOY Token #`_fromUid`. Throws if TOY Token \r\n    ///  #`_fromUid` has insufficient balance to transfer. Throws if \r\n    ///  tokenAddress has no transfer function.\r\n    /// @param _tokenAddress the ERC-20 contract address\r\n    /// @param _fromUid the TOY Token to withdraw the ERC-20 tokens from\r\n    /// @param _to the wallet address to send the ERC-20 tokens\r\n    /// @param _tokens the number of tokens to withdraw\r\n    //-------------------------------------------------------------------------\r\n    function transferERC20 (\r\n        address _tokenAddress, \r\n        uint _fromUid, \r\n        address _to, \r\n        uint _tokens\r\n    ) external canOperate(_fromUid) notZero(_tokens) {\r\n        // TOY Token must have sufficient token balance\r\n        require (\r\n            externalTokenBalances[_tokenAddress][_fromUid] >= _tokens,\r\n            \"insufficient tokens to withdraw\"\r\n        );\r\n        // initialize token contract\r\n        ERC20 tokenContract = ERC20(_tokenAddress);\r\n        // subtract amount from TOY Token's balance\r\n        externalTokenBalances[_tokenAddress][_fromUid] -= _tokens;\r\n        \r\n        // call transfer function from token contract\r\n        tokenContract.transfer(_to, _tokens);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Get external token balance for tokens deposited into TOY Token\r\n    ///  #`_uid`.\r\n    /// @dev To query Ether, use THIS CONTRACT'S address as '_tokenAddress'.\r\n    /// @param _uid Owner of the tokens to query\r\n    /// @param _tokenAddress Token creator contract address \r\n    //-------------------------------------------------------------------------\r\n    function getExternalTokenBalance(\r\n        uint _uid, \r\n        address _tokenAddress\r\n    ) external view returns (uint) {\r\n        return externalTokenBalances[_tokenAddress][_uid];\r\n    }\r\n}\r\n\r\n\r\n//-----------------------------------------------------------------------------\r\n/// @title Ownable\r\n/// @dev The Ownable contract has an owner address, and provides basic \r\n///  authorization control functions, this simplifies the implementation of\r\n///  \"user permissions\".\r\n//-----------------------------------------------------------------------------\r\ncontract Ownable {\r\n    //-------------------------------------------------------------------------\r\n    /// @dev Emits when owner address changes by any mechanism.\r\n    //-------------------------------------------------------------------------\r\n    event OwnershipTransfer (address previousOwner, address newOwner);\r\n    \r\n    // Wallet address that can sucessfully execute onlyOwner functions\r\n    address owner;\r\n    \r\n    //-------------------------------------------------------------------------\r\n    /// @dev Sets the owner of the contract to the sender account.\r\n    //-------------------------------------------------------------------------\r\n    constructor() public {\r\n        owner = msg.sender;\r\n        emit OwnershipTransfer(address(0), owner);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @dev Throws if called by any account other than `owner`.\r\n    //-------------------------------------------------------------------------\r\n    modifier onlyOwner() {\r\n        require(\r\n            msg.sender == owner, \r\n            \"Function can only be called by contract owner\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Transfer control of the contract to a newOwner.\r\n    /// @dev Throws if `_newOwner` is zero address.\r\n    /// @param _newOwner The address to transfer ownership to.\r\n    //-------------------------------------------------------------------------\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        // for safety, new owner parameter must not be 0\r\n        require (\r\n            _newOwner != address(0),\r\n            \"New owner address cannot be zero\"\r\n        );\r\n        // define local variable for old owner\r\n        address oldOwner = owner;\r\n        // set owner to new owner\r\n        owner = _newOwner;\r\n        // emit ownership transfer event\r\n        emit OwnershipTransfer(oldOwner, _newOwner);\r\n    }\r\n}\r\n\r\n\r\n//-----------------------------------------------------------------------------\r\n/// @title TOY Token Interface Support\r\n/// @notice Defines supported interfaces for ERC-721 wallets to query\r\n//-----------------------------------------------------------------------------\r\ncontract ToyInterfaceSupport {\r\n    // mapping of all possible interfaces to whether they are supported\r\n    mapping (bytes4 => bool) interfaceIdToIsSupported;\r\n    \r\n    //-------------------------------------------------------------------------\r\n    /// @notice ToyInterfaceSupport constructor. Sets to true interfaces\r\n    ///  supported at launch.\r\n    //-------------------------------------------------------------------------\r\n    constructor () public {\r\n        // supports ERC-165\r\n        interfaceIdToIsSupported[0x01ffc9a7] = true;\r\n        // supports ERC-721\r\n        interfaceIdToIsSupported[0x80ac58cd] = true;\r\n        // supports ERC-721 Enumeration\r\n        interfaceIdToIsSupported[0x780e9d63] = true;\r\n        // supports ERC-721 Metadata\r\n        interfaceIdToIsSupported[0x5b5e139f] = true;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Query if a contract implements an interface\r\n    /// @param interfaceID The interface identifier, as specified in ERC-165\r\n    /// @dev Interface identification is specified in ERC-165. This function\r\n    ///  uses less than 30,000 gas.\r\n    /// @return `true` if the contract implements `interfaceID` and\r\n    ///  `interfaceID` is not 0xffffffff, `false` otherwise\r\n    //-------------------------------------------------------------------------\r\n    function supportsInterface(\r\n        bytes4 interfaceID\r\n    ) external view returns (bool) {\r\n        if(interfaceID == 0xffffffff) {\r\n            return false;\r\n        } else {\r\n            return interfaceIdToIsSupported[interfaceID];\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//-----------------------------------------------------------------------------\r\n/// @title PLAY Token Interface\r\n//-----------------------------------------------------------------------------\r\ninterface PlayInterface {\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Get the number of PLAY tokens owned by `tokenOwner`.\r\n    /// @dev Throws if trying to query the zero address.\r\n    /// @param tokenOwner The PLAY token owner.\r\n    /// @return The number of PLAY tokens owned by `tokenOwner` (in pWei).\r\n    //-------------------------------------------------------------------------\r\n    function balanceOf(address tokenOwner) external view returns (uint);\r\n    \r\n    //-------------------------------------------------------------------------\r\n    /// @notice Lock `(tokens/1000000000000000000).fixed(0,18)` PLAY from \r\n    ///  `from` for `numberOfYears` years.\r\n    /// @dev Throws if amount to lock is zero. Throws if numberOfYears is zero\r\n    ///  or greater than maximumLockYears. Throws if `msg.sender` has\r\n    ///  insufficient allowance to lock. Throws if `from` has insufficient\r\n    ///  balance to lock.\r\n    /// @param from The token owner whose PLAY is being locked. Sender must be\r\n    ///  an approved spender.\r\n    /// @param numberOfYears The number of years the tokens will be locked.\r\n    /// @param tokens The number of tokens to lock (in pWei).\r\n    //-------------------------------------------------------------------------\r\n    function lockFrom(address from, uint numberOfYears, uint tokens) \r\n        external\r\n        returns(bool); \r\n}\r\n\r\n\r\n//-----------------------------------------------------------------------------\r\n/// @title TOY Token Creation\r\n/// @notice Defines new TOY Token creation (minting) and TOY Token linking to\r\n///  RFID-enabled physical objects.\r\n//-----------------------------------------------------------------------------\r\ncontract ToyCreation is Ownable, ExternalTokenHandler, ToyInterfaceSupport {\r\n    //-------------------------------------------------------------------------\r\n    /// @dev Link emits when an empty TOY Token gets assigned to a valid RFID.\r\n    //-------------------------------------------------------------------------\r\n    event Link(uint _oldUid, uint _newUid);\r\n\r\n    // PLAY needed to mint one TOY Token (in pWei)\r\n    uint public priceToMint = 1000 * 10**18;\r\n    // Buffer added to the front of every TOY Token at time of creation. TOY\r\n    //  Tokens with a uid greater than the buffer are unlinked.\r\n    uint constant uidBuffer = 0x0100000000000000; // 14 zeroes\r\n    // PLAY Token Contract object to interface with.\r\n    PlayInterface play = PlayInterface(0x9C2532Cf0B91CF7afa3f266a89C98e9CA39681A8);\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Update PLAY Token contract variable with new contract address.\r\n    /// @dev Throws if `_newAddress` is the zero address.\r\n    /// @param _newAddress Updated contract address.\r\n    //-------------------------------------------------------------------------\r\n    function updatePlayTokenContract(address _newAddress) external onlyOwner {\r\n        play = PlayInterface(_newAddress);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Change the number of PLAY tokens needed to mint a new TOY Token\r\n    ///  (in pWei).\r\n    /// @dev Throws if `_newPrice` is zero.\r\n    /// @param _newPrice The new price to mint (in pWei)\r\n    //-------------------------------------------------------------------------\r\n    function changeToyPrice(uint _newPrice) external onlyOwner {\r\n        priceToMint = _newPrice;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Send and lock PLAY to mint a new empty TOY Token for yourself.\r\n    /// @dev Sender must have approved this contract address as an authorized\r\n    ///  spender with at least \"priceToMint\" PLAY. Throws if the sender has\r\n    ///  insufficient PLAY. Throws if sender has not granted this contract's\r\n    ///  address sufficient allowance.\r\n    //-------------------------------------------------------------------------\r\n    function mint() external {\r\n        play.lockFrom (msg.sender, 2, priceToMint);\r\n\r\n        uint uid = uidBuffer + toyArray.length;\r\n        uint index = toyArray.push(ToyToken(msg.sender, uid, block.timestamp, 0, \"\"));\r\n        uidToToyIndex[uid] = index - 1;\r\n\r\n        emit Transfer(0, msg.sender, uid);\r\n    }\r\n\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Send and lock PLAY to mint a new empty TOY Token for 'to'.\r\n    /// @dev Sender must have approved this contract address as an authorized\r\n    ///  spender with at least \"priceToMint\" PLAY. Throws if the sender has\r\n    ///  insufficient PLAY. Throws if sender has not granted this contract's\r\n    ///  address sufficient allowance.\r\n    /// @param _to The address to deduct PLAY Tokens from and send new TOY Token to.\r\n    //-------------------------------------------------------------------------\r\n    function mintAndSend(address _to) external {\r\n        play.lockFrom (msg.sender, 2, priceToMint);\r\n\r\n        uint uid = uidBuffer + toyArray.length;\r\n        uint index = toyArray.push(ToyToken(_to, uid, block.timestamp, 0, \"\"));\r\n        uidToToyIndex[uid] = index - 1;\r\n\r\n        emit Transfer(0, _to, uid);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Change TOY Token #`_toyId` to TOY Token #`_newUid`. Writes any\r\n    ///  data passed through '_data' into the TOY Token's public data.\r\n    /// @dev Throws if TOY Token #`_toyId` does not exist. Throws if sender is\r\n    ///  not approved to operate for TOY Token. Throws if '_toyId' is smaller\r\n    ///  than 8 bytes. Throws if '_newUid' is bigger than 7 bytes. Throws if \r\n    ///  '_newUid' is zero. Throws if '_newUid' is already taken.\r\n    /// @param _newUid The UID of the RFID chip to link to the TOY Token\r\n    /// @param _toyId The UID of the empty TOY Token to link\r\n    /// @param _data A byte string of data to attach to the TOY Token\r\n    //-------------------------------------------------------------------------\r\n    function link(\r\n        bytes7 _newUid, \r\n        uint _toyId, \r\n        bytes _data\r\n    ) external canOperate(_toyId) {\r\n        ToyToken storage toy = toyArray[uidToToyIndex[_toyId]];\r\n        // _toyId must be an empty TOY Token\r\n        require (_toyId > uidBuffer, \"TOY Token already linked\");\r\n        // _newUid field cannot be empty or greater than 7 bytes\r\n        require (_newUid > 0 && uint(_newUid) < UID_MAX, \"Invalid new UID\");\r\n        // a TOY Token with the new UID must not currently exist\r\n        require (\r\n            uidToToyIndex[uint(_newUid)] == 0, \r\n            \"TOY Token with 'newUID' already exists\"\r\n        );\r\n\r\n        // set new UID's mapping to index to old UID's mapping\r\n        uidToToyIndex[uint(_newUid)] = uidToToyIndex[_toyId];\r\n        // reset old UID's mapping to index\r\n        uidToToyIndex[_toyId] = 0;\r\n        // set TOY Token's UID to new UID\r\n        toy.uid = uint(_newUid);\r\n        // set any data\r\n        toy.toyData = _data;\r\n        // reset the timestamp\r\n        toy.timestamp = now;\r\n\r\n        emit Link(_toyId, uint(_newUid));\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Set external NFT #`_externalId` as TOY Token #`_toyUid`'s\r\n    ///  linked external NFT.\r\n    /// @dev Throws if sender is not authorized to operate TOY Token #`_toyUid`\r\n    ///  Throws if '_toyUid' is bigger than 7 bytes. Throws if external NFT is\r\n    ///  already linked. Throws if sender is not authorized to operate external\r\n    ///  NFT.\r\n    /// @param _toyUid The UID of the TOY Token to link\r\n    /// @param _externalAddress The contract address of the external NFT\r\n    /// @param _externalId The UID of the external NFT to link\r\n    //-------------------------------------------------------------------------\r\n    function linkExternalNft(\r\n        uint _toyUid, \r\n        address _externalAddress, \r\n        uint _externalId\r\n    ) external canOperate(_toyUid) {\r\n        require(_toyUid < UID_MAX, \"TOY Token not linked to a physical toy\");\r\n        require(\r\n            linkedExternalNfts[_externalAddress][_externalId] == false,\r\n            \"External NFT already linked\"\r\n        );\r\n        require(\r\n            msg.sender == ERC721(_externalAddress).ownerOf(_externalId),\r\n            \"Sender does not own external NFT\"\r\n        );\r\n        uidToExternalNft[_toyUid] = ExternalNft(_externalAddress, _externalId);\r\n        linkedExternalNfts[_externalAddress][_externalId] = true;\r\n    }\r\n}\r\n\r\n\r\n//-----------------------------------------------------------------------------\r\n/// @title TOY Token Interface\r\n/// @notice Interface for highest-level TOY Token getters\r\n//-----------------------------------------------------------------------------\r\ncontract ToyInterface is ToyCreation {\r\n    // URL Containing TOY Token metadata\r\n    string metadataUrl = \"http://52.9.230.48:8090/toy_token/\";\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Change old metadata URL to `_newUrl`\r\n    /// @dev Throws if new URL is empty\r\n    /// @param _newUrl The new URL containing TOY Token metadata\r\n    //-------------------------------------------------------------------------\r\n    function updateMetadataUrl(string _newUrl)\r\n        external \r\n        onlyOwner \r\n        notZero(bytes(_newUrl).length)\r\n    {\r\n        metadataUrl = _newUrl;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Gets all public info for TOY Token #`_uid`.\r\n    /// @dev Throws if TOY Token #`_uid` does not exist.\r\n    /// @param _uid the UID of the TOY Token to view.\r\n    /// @return TOY Token owner, TOY Token UID, Creation Timestamp, Experience,\r\n    ///  and Public Data.\r\n    //-------------------------------------------------------------------------\r\n    function changeToyData(uint _uid, bytes _data) \r\n        external \r\n        mustExist(_uid)\r\n        canOperate(_uid)\r\n        returns (address, uint, uint, uint, bytes) \r\n    {\r\n        require(_uid < UID_MAX, \"TOY Token must be linked\");\r\n        toyArray[uidToToyIndex[_uid]].toyData = _data;\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Gets all public info for TOY Token #`_uid`.\r\n    /// @dev Throws if TOY Token #`_uid` does not exist.\r\n    /// @param _uid the UID of the TOY Token to view.\r\n    /// @return TOY Token owner, TOY Token UID, Creation Timestamp, Experience,\r\n    ///  and Public Data.\r\n    //-------------------------------------------------------------------------\r\n    function getToy(uint _uid) \r\n        external\r\n        view \r\n        mustExist(_uid) \r\n        returns (address, uint, uint, uint, bytes) \r\n    {\r\n        ToyToken memory toy = toyArray[uidToToyIndex[_uid]];\r\n        return(toy.owner, toy.uid, toy.timestamp, toy.exp, toy.toyData);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Gets all info for TOY Token #`_uid`'s linked NFT.\r\n    /// @dev Throws if TOY Token #`_uid` does not exist.\r\n    /// @param _uid the UID of the TOY Token to view.\r\n    /// @return NFT contract address, External NFT ID.\r\n    //-------------------------------------------------------------------------\r\n    function getLinkedNft(uint _uid) \r\n        external\r\n        view \r\n        mustExist(_uid) \r\n        returns (address, uint) \r\n    {\r\n        ExternalNft memory nft = uidToExternalNft[_uid];\r\n        return (nft.nftContractAddress, nft.nftId);\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice Gets whether NFT #`_externalId` is linked to a TOY Token.\r\n    /// @param _externalAddress the contract address for the external NFT\r\n    /// @param _externalId the UID of the external NFT to view.\r\n    /// @return NFT contract address, External NFT ID.\r\n    //-------------------------------------------------------------------------\r\n    function externalNftIsLinked(address _externalAddress, uint _externalId)\r\n        external\r\n        view\r\n        returns(bool)\r\n    {\r\n        return linkedExternalNfts[_externalAddress][_externalId];\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice A descriptive name for a collection of NFTs in this contract\r\n    //-------------------------------------------------------------------------\r\n    function name() external pure returns (string) {\r\n        return \"TOY Tokens\";\r\n    }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice An abbreviated name for NFTs in this contract\r\n    //-------------------------------------------------------------------------\r\n    function symbol() external pure returns (string) { return \"TOY\"; }\r\n\r\n    //-------------------------------------------------------------------------\r\n    /// @notice A distinct URL for a given asset.\r\n    /// @dev Throws if `_tokenId` is not a valid NFT.\r\n    ///  If:\r\n    ///  * The URI is a URL\r\n    ///  * The URL is accessible\r\n    ///  * The URL points to a valid JSON file format (ECMA-404 2nd ed.)\r\n    ///  * The JSON base element is an object\r\n    ///  then these names of the base element SHALL have special meaning:\r\n    ///  * \"name\": A string identifying the item to which `_tokenId` grants\r\n    ///    ownership\r\n    ///  * \"description\": A string detailing the item to which `_tokenId`\r\n    ///    grants ownership\r\n    ///  * \"image\": A URI pointing to a file of image/* mime type representing\r\n    ///    the item to which `_tokenId` grants ownership\r\n    ///  Wallets and exchanges MAY display this to the end user.\r\n    ///  Consider making any images at a width between 320 and 1080 pixels and\r\n    ///  aspect ratio between 1.91:1 and 4:5 inclusive.\r\n    /// @param _tokenId The TOY Token whose metadata address is being queried\r\n    //-------------------------------------------------------------------------\r\n    function tokenURI(uint _tokenId) \r\n        external \r\n        view \r\n        returns (string) \r\n    {\r\n        // convert TOY Token UID to a 14 character long string of character bytes\r\n        bytes memory uidString = intToBytes(_tokenId);\r\n        // declare new string of bytes with combined length of url and uid \r\n        bytes memory fullUrlBytes = new bytes(bytes(metadataUrl).length + uidString.length);\r\n        // copy URL string and uid string into new string\r\n        uint counter = 0;\r\n        for (uint i = 0; i < bytes(metadataUrl).length; i++) {\r\n            fullUrlBytes[counter++] = bytes(metadataUrl)[i];\r\n        }\r\n        for (i = 0; i < uidString.length; i++) {\r\n            fullUrlBytes[counter++] = uidString[i];\r\n        }\r\n        // return full URL\r\n        return string(fullUrlBytes);\r\n    }\r\n    \r\n    //-------------------------------------------------------------------------\r\n    /// @notice Convert int to 14 character bytes\r\n    //-------------------------------------------------------------------------\r\n    function intToBytes(uint _tokenId) \r\n        private \r\n        pure \r\n        returns (bytes) \r\n    {\r\n        // convert int to bytes32\r\n        bytes32 x = bytes32(_tokenId);\r\n        \r\n        // convert each byte into two, and assign each byte a hex digit\r\n        bytes memory uidBytes64 = new bytes(64);\r\n        for (uint i = 0; i < 32; i++) {\r\n            byte b = byte(x[i]);\r\n            byte hi = byte(uint8(b) / 16);\r\n            byte lo = byte(uint8(b) - 16 * uint8(hi));\r\n            uidBytes64[i*2] = char(hi);\r\n            uidBytes64[i*2+1] = char(lo);\r\n        }\r\n        \r\n        // reduce size to last 14 chars (7 bytes)\r\n        bytes memory uidBytes = new bytes(14);\r\n        for (i = 0; i < 14; ++i) {\r\n            uidBytes[i] = uidBytes64[i + 50];\r\n        }\r\n        return uidBytes;\r\n    }\r\n    \r\n    //-------------------------------------------------------------------------\r\n    /// @notice Convert byte to UTF-8-encoded hex character\r\n    //-------------------------------------------------------------------------\r\n    function char(byte b) private pure returns (byte c) {\r\n        if (b < 10) return byte(uint8(b) + 0x30);\r\n        else return byte(uint8(b) + 0x57);\r\n    }\r\n}", "OptimizationUsed": "1", "ContractName": "ToyInterface", "ByteCode": "0x6080604052600436106101be5763ffffffff60e060020a60003504166301ffc9a781146101c357806306fdde03146101f9578063081812fc14610283578063095ea7b3146102b757806312148a8b146102d05780631249c58b146102f757806318160ddd1461030c57806321425ee01461033357806323b872dd1461035a5780632650a47c1461037757806326839f17146103925780632f745c591461039d578063353d6f6f146103c15780633b616752146103ef57806342842e0e1461042a5780634dc1dbec146104475780634f6ccce71461045c5780636352211e146104745780636c07ea431461048c57806370a08231146104b35780637132048c146104d457806383684bbb146104f45780638462151c146105385780638ef7c81a146105a957806394cd8b23146105cd57806395d89b41146105f4578063a22cb46514610609578063a4ed7c0a1461062f578063b88d4fde1461065c578063c411f50c14610688578063c501ba5914610746578063c87b56dd14610767578063d6f2dc441461077f578063da36814b14610797578063e8e877c0146107bb578063e985e9c5146107dc578063f2639aca14610803578063f2fde38b14610827575b600080fd5b3480156101cf57600080fd5b506101e5600160e060020a031960043516610848565b604080519115158252519081900360200190f35b34801561020557600080fd5b5061020e610888565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610248578181015183820152602001610230565b50505050905090810190601f1680156102755780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561028f57600080fd5b5061029b6004356108c0565b60408051600160a060020a039092168252519081900360200190f35b6102ce600160a060020a0360043516602435610932565b005b3480156102dc57600080fd5b506102ce600435600160a060020a0360243516604435610a21565b34801561030357600080fd5b506102ce610d70565b34801561031857600080fd5b50610321610f93565b60408051918252519081900360200190f35b34801561033f57600080fd5b506102ce600160a060020a0360043516602435604435610f9d565b6102ce600160a060020a0360043581169060243516604435611220565b34801561038357600080fd5b506102ce6004356024356115b2565b6102ce6004356117e5565b3480156103a957600080fd5b50610321600160a060020a03600435166024356119e4565b3480156103cd57600080fd5b506102ce600160a060020a036004358116906024359060443516606435611b89565b3480156103fb57600080fd5b50610407600435611e1a565b60408051600160a060020a03909316835260208301919091528051918290030190f35b6102ce600160a060020a0360043581169060243516604435611eb6565b34801561045357600080fd5b50610321612397565b34801561046857600080fd5b5061032160043561239d565b34801561048057600080fd5b5061029b60043561242c565b34801561049857600080fd5b506102ce600160a060020a036004351660243560443561254e565b3480156104bf57600080fd5b50610321600160a060020a03600435166127af565b3480156104e057600080fd5b506102ce6004803560248101910135612865565b34801561050057600080fd5b506102ce6004803578ffffffffffffffffffffffffffffffffffffffffffffffffff1916906024803591604435918201910135612921565b34801561054457600080fd5b50610559600160a060020a0360043516612c69565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561059557818101518382015260200161057d565b505050509050019250505060405180910390f35b3480156105b557600080fd5b506101e5600160a060020a0360043516602435612d9e565b3480156105d957600080fd5b506102ce600435600160a060020a0360243516604435612dc9565b34801561060057600080fd5b5061020e612fef565b34801561061557600080fd5b506102ce600160a060020a03600435166024351515613026565b34801561063b57600080fd5b506102ce600160a060020a03600435811690602435166044356064356130f5565b6102ce600160a060020a0360048035821691602480359091169160443591606435908101910135613349565b34801561069457600080fd5b506106a0600435613883565b6040518086600160a060020a0316600160a060020a0316815260200185815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156107075781810151838201526020016106ef565b50505050905090810190601f1680156107345780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b34801561075257600080fd5b506102ce600160a060020a0360043516613a12565b34801561077357600080fd5b5061020e600435613c3f565b34801561078b57600080fd5b506102ce600435613dab565b3480156107a357600080fd5b506106a0600480359060248035908101910135613e14565b3480156107c757600080fd5b506102ce600160a060020a036004351661402e565b3480156107e857600080fd5b506101e5600160a060020a03600435811690602435166140b4565b34801561080f57600080fd5b50610321600435600160a060020a03602435166140e2565b34801561083357600080fd5b506102ce600160a060020a0360043516614107565b6000600160e060020a0319808316141561086457506000610883565b50600160e060020a0319811660009081526008602052604090205460ff165b919050565b60408051808201909152600a81527f544f5920546f6b656e730000000000000000000000000000000000000000000060208201525b90565b60008181526002602052604081205482901515610915576040805160e560020a62461bcd02815260206004820152601560248201526000805160206145d3833981519152604482015290519081900360640190fd5b5050600090815260056020526040902054600160a060020a031690565b600061093d8261242c565b905033600160a060020a038216148061095b575061095b81336140b4565b15156109c5576040805160e560020a62461bcd02815260206004820152602c60248201527f4e6f7420617574686f72697a656420746f20617070726f766520666f722074686044820152600080516020614633833981519152606482015290519081900360840190fd5b6000828152600560205260408082208054600160a060020a031916600160a060020a0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600083815260026020526040902054600180548592908110610a3f57fe5b6000918252602090912060059091020154600160a060020a0316331480610a7c5750600081815260056020526040902054600160a060020a031633145b80610adb57506000818152600260205260408120546001805460069392908110610aa257fe5b60009182526020808320600590920290910154600160a060020a03168352828101939093526040918201812033825290925290205460ff165b1515610b33576040805160e560020a62461bcd02815260206004820152602c60248201526000805160206145938339815191526044820152600080516020614633833981519152606482015290519081900360840190fd5b66ffffffffffffff8410610bb7576040805160e560020a62461bcd02815260206004820152602660248201527f544f5920546f6b656e206e6f74206c696e6b656420746f20612070687973696360448201527f616c20746f790000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a038316600090815260046020908152604080832085845290915290205460ff1615610c33576040805160e560020a62461bcd02815260206004820152601b60248201527f45787465726e616c204e465420616c7265616479206c696e6b65640000000000604482015290519081900360640190fd5b82600160a060020a0316636352211e836040518263ffffffff1660e060020a02815260040180828152602001915050602060405180830381600087803b158015610c7c57600080fd5b505af1158015610c90573d6000803e3d6000fd5b505050506040513d6020811015610ca657600080fd5b5051600160a060020a03163314610d07576040805160e560020a62461bcd02815260206004820181905260248201527f53656e64657220646f6573206e6f74206f776e2065787465726e616c204e4654604482015290519081900360640190fd5b50604080518082018252600160a060020a03938416808252602080830185815260009788526003825284882093518454600160a060020a03191697169690961783559451600192830155855260048452818520928552919092529120805460ff19169091179055565b600a54600954604080517f5493f09a000000000000000000000000000000000000000000000000000000008152336004820152600260248201526044810192909252516000928392600160a060020a0390911691635493f09a9160648082019260209290919082900301818787803b158015610deb57600080fd5b505af1158015610dff573d6000803e3d6000fd5b505050506040513d6020811015610e1557600080fd5b5050600180546040805160a0810182523381526701000000000000008301602080830182815242848601908152600060608601818152875180860190985281885260808701978852888a01808b559990915285517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf660059099029889018054600160a060020a031916600160a060020a0390921691909117815592517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf789015590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8880155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf9870155935180519298509294610f5a937fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa9091019291019061443c565b50505060008381526002602052604080822060001984019055519192508391339190600080516020614613833981519152908290a45050565b6001546000190190565b600082815260026020526040812054600180548592908110610fbb57fe5b6000918252602090912060059091020154600160a060020a0316331480610ff85750600081815260056020526040902054600160a060020a031633145b806110575750600081815260026020526040812054600180546006939290811061101e57fe5b60009182526020808320600590920290910154600160a060020a03168352828101939093526040918201812033825290925290205460ff165b15156110af576040805160e560020a62461bcd02815260206004820152602c60248201526000805160206145938339815191526044820152600080516020614633833981519152606482015290519081900360840190fd5b828015156110f5576040805160e560020a62461bcd02815260206004820152601860248201526000805160206145b3833981519152604482015290519081900360640190fd5b66ffffffffffffff8510611179576040805160e560020a62461bcd02815260206004820152602b60248201527f496e76616c696420544f5920546f6b656e2e20544f5920546f6b656e206e6f7460448201527f20796574206c696e6b6564000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a03861660008181526007602090815260408083208984528252808320805489019055805160e060020a6323b872dd0281523360048201523060248201526044810189905290518a97506323b872dd93606480840194938390030190829087803b1580156111ec57600080fd5b505af1158015611200573d6000803e3d6000fd5b505050506040513d602081101561121657600080fd5b5050505050505050565b600061122a6144ba565b6000838152600260205260408120548490151561127f576040805160e560020a62461bcd02815260206004820152601560248201526000805160206145d3833981519152604482015290519081900360640190fd5b60008581526002602052604090205460018054879290811061129d57fe5b6000918252602090912060059091020154600160a060020a03163314806112da5750600081815260056020526040902054600160a060020a031633145b806113395750600081815260026020526040812054600180546006939290811061130057fe5b60009182526020808320600590920290910154600160a060020a03168352828101939093526040918201812033825290925290205460ff165b1515611391576040805160e560020a62461bcd02815260206004820152602c60248201526000805160206145938339815191526044820152600080516020614633833981519152606482015290519081900360840190fd5b600160a060020a0387168015156113e0576040805160e560020a62461bcd02815260206004820152601860248201526000805160206145b3833981519152604482015290519081900360640190fd5b6113e98761242c565b955085600160a060020a031689600160a060020a03161480156114145750600160a060020a03891615155b151561146a576040805160e560020a62461bcd02815260206004820152601e60248201527f544f5920546f6b656e206e6f74206f776e656420627920275f66726f6d270000604482015290519081900360640190fd5b60008781526003602090815260409182902082518084019093528054600160a060020a0316808452600190910154918301919091529095501561152857845160208601516040805160e060020a6323b872dd028152600160a060020a038d811660048301528c8116602483015260448201939093529051929650908616916323b872dd9160648082019260009290919082900301818387803b15801561150f57600080fd5b505af1158015611523573d6000803e3d6000fd5b505050505b60008781526005602090815260408083208054600160a060020a03191690556002909152902054600180548a9290811061155e57fe5b600091825260208220600591909102018054600160a060020a031916600160a060020a0393841617905560405189928b811692908d16916000805160206146138339815191529190a4505050505050505050565b6000828152600260205260409020546001805484929081106115d057fe5b6000918252602090912060059091020154600160a060020a031633148061160d5750600081815260056020526040902054600160a060020a031633145b8061166c5750600081815260026020526040812054600180546006939290811061163357fe5b60009182526020808320600590920290910154600160a060020a03168352828101939093526040918201812033825290925290205460ff165b15156116c4576040805160e560020a62461bcd02815260206004820152602c60248201526000805160206145938339815191526044820152600080516020614633833981519152606482015290519081900360840190fd5b8180151561170a576040805160e560020a62461bcd02815260206004820152601860248201526000805160206145b3833981519152604482015290519081900360640190fd5b30600090815260076020908152604080832087845290915290205483111561177c576040805160e560020a62461bcd02815260206004820152601e60248201527f496e73756666696369656e7420457468657220746f2077697468647261770000604482015290519081900360640190fd5b3060009081526007602090815260408083208784529091529020805484900390556117a68461242c565b600160a060020a03166108fc849081150290604051600060405180830381858888f193505050501580156117de573d6000803e3d6000fd5b5050505050565b60008181526002602052604090205460018054839290811061180357fe5b6000918252602090912060059091020154600160a060020a03163314806118405750600081815260056020526040902054600160a060020a031633145b8061189f5750600081815260026020526040812054600180546006939290811061186657fe5b60009182526020808320600590920290910154600160a060020a03168352828101939093526040918201812033825290925290205460ff165b15156118f7576040805160e560020a62461bcd02815260206004820152602c60248201526000805160206145938339815191526044820152600080516020614633833981519152606482015290519081900360840190fd5b3480151561193d576040805160e560020a62461bcd02815260206004820152601860248201526000805160206145b3833981519152604482015290519081900360640190fd5b66ffffffffffffff83106119c1576040805160e560020a62461bcd02815260206004820152602b60248201527f496e76616c696420544f5920546f6b656e2e20544f5920546f6b656e206e6f7460448201527f20796574206c696e6b6564000000000000000000000000000000000000000000606482015290519081900360840190fd5b505030600090815260076020908152604080832093835292905220805434019055565b6000808080600160a060020a038616801515611a38576040805160e560020a62461bcd02815260206004820152601860248201526000805160206145b3833981519152604482015290519081900360640190fd5b611a41876127af565b935060008411611a9b576040805160e560020a62461bcd02815260206004820152601360248201527f4e6f206f776e656420544f5920546f6b656e7300000000000000000000000000604482015290519081900360640190fd5b838610611af2576040805160e560020a62461bcd02815260206004820152600d60248201527f496e76616c696420696e64657800000000000000000000000000000000000000604482015290519081900360640190fd5b60009250600091505b600154821015611b7f5786600160a060020a0316600183815481101515611b1e57fe5b6000918252602090912060059091020154600160a060020a03161415611b745785831415611b6d576001805483908110611b5457fe5b9060005260206000209060050201600101549450611b7f565b6001909201915b600190910190611afb565b5050505092915050565b600083815260026020526040812054600180548692908110611ba757fe5b6000918252602090912060059091020154600160a060020a0316331480611be45750600081815260056020526040902054600160a060020a031633145b80611c4357506000818152600260205260408120546001805460069392908110611c0a57fe5b60009182526020808320600590920290910154600160a060020a03168352828101939093526040918201812033825290925290205460ff165b1515611c9b576040805160e560020a62461bcd02815260206004820152602c60248201526000805160206145938339815191526044820152600080516020614633833981519152606482015290519081900360840190fd5b82801515611ce1576040805160e560020a62461bcd02815260206004820152601860248201526000805160206145b3833981519152604482015290519081900360640190fd5b600160a060020a0387166000908152600760209081526040808320898452909152902054841115611d5c576040805160e560020a62461bcd02815260206004820152601f60248201527f696e73756666696369656e7420746f6b656e7320746f20776974686472617700604482015290519081900360640190fd5b600160a060020a0380881660008181526007602090815260408083208b8452825280832080548a9003905580517fa9059cbb000000000000000000000000000000000000000000000000000000008152948a16600486015260248501899052518b9750929363a9059cbb9360448083019491928390030190829087803b158015611de557600080fd5b505af1158015611df9573d6000803e3d6000fd5b505050506040513d6020811015611e0f57600080fd5b505050505050505050565b600080611e256144ba565b60008481526002602052604090205484901515611e7a576040805160e560020a62461bcd02815260206004820152601560248201526000805160206145d3833981519152604482015290519081900360640190fd5b5050506000918252506003602090815260409182902082518084019093528054600160a060020a03168084526001909101549290910182905291565b6000611ec06144ba565b6000838152600260205260408120548190819086901515611f19576040805160e560020a62461bcd02815260206004820152601560248201526000805160206145d3833981519152604482015290519081900360640190fd5b600087815260026020526040902054600180548992908110611f3757fe5b6000918252602090912060059091020154600160a060020a0316331480611f745750600081815260056020526040902054600160a060020a031633145b80611fd357506000818152600260205260408120546001805460069392908110611f9a57fe5b60009182526020808320600590920290910154600160a060020a03168352828101939093526040918201812033825290925290205460ff165b151561202b576040805160e560020a62461bcd02815260206004820152602c60248201526000805160206145938339815191526044820152600080516020614633833981519152606482015290519081900360840190fd5b600160a060020a03891680151561207a576040805160e560020a62461bcd02815260206004820152601860248201526000805160206145b3833981519152604482015290519081900360640190fd5b6120838961242c565b9750600160a060020a038b8116908916146120e8576040805160e560020a62461bcd02815260206004820152601e60248201527f544f5920546f6b656e206e6f74206f776e656420627920275f66726f6d270000604482015290519081900360640190fd5b60008981526003602090815260409182902082518084019093528054600160a060020a031680845260019091015491830191909152909750156121a657865160208801516040805160e060020a6323b872dd028152600160a060020a038f811660048301528e8116602483015260448201939093529051929850908816916323b872dd9160648082019260009290919082900301818387803b15801561218d57600080fd5b505af11580156121a1573d6000803e3d6000fd5b505050505b60008981526005602090815260408083208054600160a060020a03191690556002909152902054600180548c929081106121dc57fe5b600091825260208220600591909102018054600160a060020a031916600160a060020a039384161790556040518b928d811692908f16916000805160206146138339815191529190a4893b9450600085111561238a57604080517f150b7a02000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038d81166024830152604482018c9052608060648301526000608483018190529251908d169263150b7a029260c480820193602093909283900390910190829087803b1580156122b557600080fd5b505af11580156122c9573d6000803e3d6000fd5b505050506040513d60208110156122df57600080fd5b505193507f150b7a0200000000000000000000000000000000000000000000000000000000600160e060020a031985161461238a576040805160e560020a62461bcd02815260206004820152603760248201527f44657374696e6174696f6e20636f6e7472616374206e6f74206571756970706560448201527f6420746f207265636569766520544f5920546f6b656e73000000000000000000606482015290519081900360840190fd5b5050505050505050505050565b60095481565b600080821180156123af575060015482105b1515612405576040805160e560020a62461bcd02815260206004820152600d60248201527f496e76616c696420696e64657800000000000000000000000000000000000000604482015290519081900360640190fd5b600180548390811061241357fe5b9060005260206000209060050201600101549050919050565b60008181526002602052604081205482901515612481576040805160e560020a62461bcd02815260206004820152601560248201526000805160206145d3833981519152604482015290519081900360640190fd5b60008381526002602052604090205460018054909190811061249f57fe5b6000918252602090912060059091020154600160a060020a0316151561250f576040805160e560020a62461bcd02815260206004820152601660248201527f544f5920546f6b656e20686173206e6f206f776e657200000000000000000000604482015290519081900360640190fd5b60008381526002602052604090205460018054909190811061252d57fe5b6000918252602090912060059091020154600160a060020a03169392505050565b60008281526002602052604081205460018054859290811061256c57fe5b6000918252602090912060059091020154600160a060020a03163314806125a95750600081815260056020526040902054600160a060020a031633145b80612608575060008181526002602052604081205460018054600693929081106125cf57fe5b60009182526020808320600590920290910154600160a060020a03168352828101939093526040918201812033825290925290205460ff165b1515612660576040805160e560020a62461bcd02815260206004820152602c60248201526000805160206145938339815191526044820152600080516020614633833981519152606482015290519081900360840190fd5b828015156126a6576040805160e560020a62461bcd02815260206004820152601860248201526000805160206145b3833981519152604482015290519081900360640190fd5b600160a060020a0386166000908152600760209081526040808320888452909152902054841115612721576040805160e560020a62461bcd02815260206004820152601f60248201527f696e73756666696369656e7420746f6b656e7320746f20776974686472617700604482015290519081900360640190fd5b600160a060020a038616600081815260076020908152604080832089845290915290208054869003905586935063a9059cbb61275c8761242c565b866040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b1580156111ec57600080fd5b60008080600160a060020a038416801515612802576040805160e560020a62461bcd02815260206004820152601860248201526000805160206145b3833981519152604482015290519081900360640190fd5b600191505b60015482101561285c5784600160a060020a031660018381548110151561282a57fe5b6000918252602090912060059091020154600160a060020a03161415612851578260010192505b816001019150612807565b50909392505050565b600054600160a060020a031633146128c9576040805160e560020a62461bcd02815260206004820152602d602482015260008051602061465383398151915260448201526000805160206145f3833981519152606482015290519081900360840190fd5b8080151561290f576040805160e560020a62461bcd02815260206004820152601860248201526000805160206145b3833981519152604482015290519081900360640190fd5b61291b600b84846144d1565b50505050565b60008381526002602052604081205460018054869290811061293f57fe5b6000918252602090912060059091020154600160a060020a031633148061297c5750600081815260056020526040902054600160a060020a031633145b806129db575060008181526002602052604081205460018054600693929081106129a257fe5b60009182526020808320600590920290910154600160a060020a03168352828101939093526040918201812033825290925290205460ff165b1515612a33576040805160e560020a62461bcd02815260206004820152602c60248201526000805160206145938339815191526044820152600080516020614633833981519152606482015290519081900360840190fd5b600085815260026020526040902054600180549091908110612a5157fe5b9060005260206000209060050201915067010000000000000085111515612ac2576040805160e560020a62461bcd02815260206004820152601860248201527f544f5920546f6b656e20616c7265616479206c696e6b65640000000000000000604482015290519081900360640190fd5b600078ffffffffffffffffffffffffffffffffffffffffffffffffff198716118015612afa575066ffffffffffffff60c860020a8704105b1515612b50576040805160e560020a62461bcd02815260206004820152600f60248201527f496e76616c6964206e6577205549440000000000000000000000000000000000604482015290519081900360640190fd5b60c860020a860460009081526002602052604090205415612be1576040805160e560020a62461bcd02815260206004820152602660248201527f544f5920546f6b656e207769746820276e65775549442720616c72656164792060448201527f6578697374730000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600085815260026020526040808220805460c860020a8a0480855292842055878352919091556001830155612c1a6004830185856144d1565b504260028301556040805186815260c860020a8804602082015281517f60d1b93d68f4e8e65b1486f9e1f6b34636faa5edb1ed22d40fc9626f4991ee6e929181900390910190a1505050505050565b606060008060606000612c7b866127af565b935060008411612cd5576040805160e560020a62461bcd02815260206004820152601360248201527f4e6f206f776e656420544f5920546f6b656e7300000000000000000000000000604482015290519081900360640190fd5b6000925083604051908082528060200260200182016040528015612d03578160200160208202803883390190505b509150600090505b600154811015612d955785600160a060020a0316600182815481101515612d2e57fe5b6000918252602090912060059091020154600160a060020a03161415612d8d576001805482908110612d5c57fe5b9060005260206000209060050201600101548284815181101515612d7c57fe5b602090810290910101526001909201915b600101612d0b565b50949350505050565b600160a060020a03919091166000908152600460209081526040808320938352929052205460ff1690565b600083815260026020526040902054600180548592908110612de757fe5b6000918252602090912060059091020154600160a060020a0316331480612e245750600081815260056020526040902054600160a060020a031633145b80612e8357506000818152600260205260408120546001805460069392908110612e4a57fe5b60009182526020808320600590920290910154600160a060020a03168352828101939093526040918201812033825290925290205460ff165b1515612edb576040805160e560020a62461bcd02815260206004820152602c60248201526000805160206145938339815191526044820152600080516020614633833981519152606482015290519081900360840190fd5b81801515612f21576040805160e560020a62461bcd02815260206004820152601860248201526000805160206145b3833981519152604482015290519081900360640190fd5b306000908152600760209081526040808320888452909152902054831115612f93576040805160e560020a62461bcd02815260206004820152601e60248201527f496e73756666696369656e7420457468657220746f207472616e736665720000604482015290519081900360640190fd5b3060009081526007602090815260408083208884529091528082208054869003905551600160a060020a0386169185156108fc02918691818181858888f19350505050158015612fe7573d6000803e3d6000fd5b505050505050565b60408051808201909152600381527f544f590000000000000000000000000000000000000000000000000000000000602082015290565b600160a060020a038216331415613087576040805160e560020a62461bcd02815260206004820152601960248201527f4f70657261746f722063616e6e6f742062652073656e64657200000000000000604482015290519081900360640190fd5b336000818152600660209081526040808320600160a060020a03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b60008281526002602052604081205460018054859290811061311357fe5b6000918252602090912060059091020154600160a060020a03163314806131505750600081815260056020526040902054600160a060020a031633145b806131af5750600081815260026020526040812054600180546006939290811061317657fe5b60009182526020808320600590920290910154600160a060020a03168352828101939093526040918201812033825290925290205460ff165b1515613207576040805160e560020a62461bcd02815260206004820152602c60248201526000805160206145938339815191526044820152600080516020614633833981519152606482015290519081900360840190fd5b8280151561324d576040805160e560020a62461bcd02815260206004820152601860248201526000805160206145b3833981519152604482015290519081900360640190fd5b66ffffffffffffff85106132d1576040805160e560020a62461bcd02815260206004820152602b60248201527f496e76616c696420544f5920546f6b656e2e20544f5920546f6b656e206e6f7460448201527f20796574206c696e6b6564000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0380881660008181526007602090815260408083208a8452825280832080548a019055805160e060020a6323b872dd028152948b16600486015230602486015260448501899052518b975092936323b872dd9360648083019491928390030190829087803b158015611de557600080fd5b60006133536144ba565b60008581526002602052604081205481908190889015156133ac576040805160e560020a62461bcd02815260206004820152601560248201526000805160206145d3833981519152604482015290519081900360640190fd5b600089815260026020526040902054600180548b929081106133ca57fe5b6000918252602090912060059091020154600160a060020a03163314806134075750600081815260056020526040902054600160a060020a031633145b806134665750600081815260026020526040812054600180546006939290811061342d57fe5b60009182526020808320600590920290910154600160a060020a03168352828101939093526040918201812033825290925290205460ff165b15156134be576040805160e560020a62461bcd02815260206004820152602c60248201526000805160206145938339815191526044820152600080516020614633833981519152606482015290519081900360840190fd5b600160a060020a038b1680151561350d576040805160e560020a62461bcd02815260206004820152601860248201526000805160206145b3833981519152604482015290519081900360640190fd5b6135168b61242c565b9750600160a060020a038d81169089161461357b576040805160e560020a62461bcd02815260206004820152601e60248201527f544f5920546f6b656e206e6f74206f776e656420627920275f66726f6d270000604482015290519081900360640190fd5b60008b81526003602090815260409182902082518084019093528054600160a060020a03168084526001909101549183019190915290975015613659578660000151955085600160a060020a03166323b872dd8e8e8a602001516040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200183600160a060020a0316600160a060020a031681526020018281526020019350505050600060405180830381600087803b15801561364057600080fd5b505af1158015613654573d6000803e3d6000fd5b505050505b60008b81526005602090815260408083208054600160a060020a03191690556002909152902054600180548e9290811061368f57fe5b906000526020600020906005020160000160006101000a815481600160a060020a030219169083600160a060020a031602179055508a8c600160a060020a03168e600160a060020a031660008051602061461383398151915260405160405180910390a48b3b94506000851115613874578b600160a060020a031663150b7a02338f8e8e8e6040518663ffffffff1660e060020a0281526004018086600160a060020a0316600160a060020a0316815260200185600160a060020a0316600160a060020a0316815260200184815260200180602001828103825284848281815260200192508082843782019150509650505050505050602060405180830381600087803b15801561379f57600080fd5b505af11580156137b3573d6000803e3d6000fd5b505050506040513d60208110156137c957600080fd5b505193507f150b7a0200000000000000000000000000000000000000000000000000000000600160e060020a0319851614613874576040805160e560020a62461bcd02815260206004820152603760248201527f44657374696e6174696f6e20636f6e7472616374206e6f74206571756970706560448201527f6420746f207265636569766520544f5920546f6b656e73000000000000000000606482015290519081900360840190fd5b50505050505050505050505050565b600080600080606061389361453f565b600087815260026020526040902054879015156138e8576040805160e560020a62461bcd02815260206004820152601560248201526000805160206145d3833981519152604482015290519081900360640190fd5b60008881526002602052604090205460018054909190811061390657fe5b60009182526020918290206040805160a0810182526005939093029091018054600160a060020a0316835260018082015484860152600280830154858501526003830154606086015260048301805485516101009482161594909402600019011691909104601f810187900487028301870190945283825293949193608086019391929091908301828280156139dd5780601f106139b2576101008083540402835291602001916139dd565b820191906000526020600020905b8154815290600101906020018083116139c057829003601f168201915b5050509190925250508151602083015160408401516060850151608090950151929d919c509a50929850965090945050505050565b600a54600954604080517f5493f09a000000000000000000000000000000000000000000000000000000008152336004820152600260248201526044810192909252516000928392600160a060020a0390911691635493f09a9160648082019260209290919082900301818787803b158015613a8d57600080fd5b505af1158015613aa1573d6000803e3d6000fd5b505050506040513d6020811015613ab757600080fd5b5050600180546040805160a081018252600160a060020a0387811682526701000000000000008401602080840182815242858701908152600060608701818152885180860190995281895260808801988952898b01808c559a90915286517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf66005909a02998a018054600160a060020a0319169190971617865591517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7890155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8880155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf98701559351805191985092949193613bfc937fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa90930192019061443c565b50505060008381526002602052604080822060001984019055519192508391600160a060020a0386169190600080516020614613833981519152908290a4505050565b6060806060600080613c5086614230565b93508351600b805460018160011615610100020316600290049050016040519080825280601f01601f191660200182016040528015613c99578160200160208202803883390190505b50925060009150600090505b600b5460026000196101006001841615020190911604811015613d3f57600b818154600181600116156101000203166002900481101515613ce257fe5b815460011615613d015790600052602060002090602091828204019190065b9054901a60f860020a028383806001019450815181101515613d1f57fe5b906020010190600160f860020a031916908160001a905350600101613ca5565b5060005b8351811015613da1578381815181101515613d5a57fe5b90602001015160f860020a900460f860020a028383806001019450815181101515613d8157fe5b906020010190600160f860020a031916908160001a905350600101613d43565b5090949350505050565b600054600160a060020a03163314613e0f576040805160e560020a62461bcd02815260206004820152602d602482015260008051602061465383398151915260448201526000805160206145f3833981519152606482015290519081900360840190fd5b600955565b60008381526002602052604081205481908190819060609088901515613e72576040805160e560020a62461bcd02815260206004820152601560248201526000805160206145d3833981519152604482015290519081900360640190fd5b600089815260026020526040902054600180548b92908110613e9057fe5b6000918252602090912060059091020154600160a060020a0316331480613ecd5750600081815260056020526040902054600160a060020a031633145b80613f2c57506000818152600260205260408120546001805460069392908110613ef357fe5b60009182526020808320600590920290910154600160a060020a03168352828101939093526040918201812033825290925290205460ff165b1515613f84576040805160e560020a62461bcd02815260206004820152602c60248201526000805160206145938339815191526044820152600080516020614633833981519152606482015290519081900360840190fd5b66ffffffffffffff8a10613fe2576040805160e560020a62461bcd02815260206004820152601860248201527f544f5920546f6b656e206d757374206265206c696e6b65640000000000000000604482015290519081900360640190fd5b60008a815260026020526040902054600180548b928b9291811061400257fe5b906000526020600020906005020160040191906140209291906144d1565b505050939792965093509350565b600054600160a060020a03163314614092576040805160e560020a62461bcd02815260206004820152602d602482015260008051602061465383398151915260448201526000805160206145f3833981519152606482015290519081900360840190fd5b600a8054600160a060020a031916600160a060020a0392909216919091179055565b600160a060020a03918216600090815260066020908152604080832093909416825291909152205460ff1690565b600160a060020a03166000908152600760209081526040808320938352929052205490565b60008054600160a060020a0316331461416c576040805160e560020a62461bcd02815260206004820152602d602482015260008051602061465383398151915260448201526000805160206145f3833981519152606482015290519081900360840190fd5b600160a060020a03821615156141cc576040805160e560020a62461bcd02815260206004820181905260248201527f4e6577206f776e657220616464726573732063616e6e6f74206265207a65726f604482015290519081900360640190fd5b5060008054600160a060020a03838116600160a060020a0319831681179093556040805191909216808252602082019390935281517f22500af037c600dd7b720644ab6e358635085601d9ac508ad83eb2d6b2d729ca929181900390910190a15050565b604080518181526060808201835291839183916000918291829182918691906020820161080080388339019050509550600094505b60208510156143305786856020811061427a57fe5b1a60f860020a02935060108460f860020a900460ff1681151561429957fe5b0460f860020a0292508260f860020a90046010028460f860020a90040360f860020a0291506142c7836143c0565b86866002028151811015156142d857fe5b906020010190600160f860020a031916908160001a9053506142f9826143c0565b868660020260010181518110151561430d57fe5b906020010190600160f860020a031916908160001a905350600190940193614265565b60408051600e80825281830190925290602082016101c080388339019050509050600094505b600e8510156143b457858560320181518110151561437057fe5b90602001015160f860020a900460f860020a02818681518110151561439157fe5b906020010190600160f860020a031916908160001a905350846001019450614356565b98975050505050505050565b60007f0a000000000000000000000000000000000000000000000000000000000000007fff0000000000000000000000000000000000000000000000000000000000000083161015614424578160f860020a900460300160f860020a029050610883565b8160f860020a900460570160f860020a029050610883565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061447d57805160ff19168380011785556144aa565b828001600101855582156144aa579182015b828111156144aa57825182559160200191906001019061448f565b506144b6929150614578565b5090565b604080518082019091526000808252602082015290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106145125782800160ff198235161785556144aa565b828001600101855582156144aa579182015b828111156144aa578235825591602001919060010190614524565b60a0604051908101604052806000600160a060020a03168152602001600081526020016000815260200160008152602001606081525090565b6108bd91905b808211156144b6576000815560010161457e56004e6f7420617574686f72697a656420746f206f70657261746520666f72207468506172616d657465722063616e6e6f74206265207a65726f0000000000000000496e76616c696420544f5920546f6b656e2055494400000000000000000000006f6e7472616374206f776e657200000000000000000000000000000000000000ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef697320544f5920546f6b656e000000000000000000000000000000000000000046756e6374696f6e2063616e206f6e6c792062652063616c6c65642062792063a165627a7a72305820b9ca49af5ff1861a1e3fead09eeef8856f285849ee41fbfab3c707ba149098530029"}