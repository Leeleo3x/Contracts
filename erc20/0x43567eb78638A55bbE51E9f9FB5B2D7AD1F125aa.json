{"Runs": "200", "SwarmSource": "bzzr://0dfa1c5789b9d4268db841c18402f848888cf2009f8fd7ca26d8d7b477189e37", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"total\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"freeTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setTokens\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"},{\"payable\":false,\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferFrom\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.12+commit.194ff033", "ConstructorArguments": "", "SourceCode": "pragma solidity ^0.4.11;\r\n\r\ncontract ERC20Interface {\r\n\tfunction totalSupply() constant returns (uint256 total); // Get the total token supply\r\n\tfunction balanceOf(address _owner) constant returns (uint256 balance); // Get the account balance of another account with address _owner\r\n\tfunction transfer(address _to, uint256 _value) returns (bool success); // Send _value amount of tokens to address _to\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) returns (bool success); // Send _value amount of tokens from address _from to address _to\r\n\t// Allow _spender to withdraw from your account, multiple times, up to the _value amount.\r\n\t// If this function is called again it overwrites the current allowance with _value.\r\n\t// this function is required for some DEX functionality\r\n\t// function approve(address _spender, uint256 _value) returns (bool success);\r\n\t// function allowance(address _owner, address _spender) constant returns (uint256 remaining); // Returns the amount which _spender is still allowed to withdraw from _owner\r\n\tevent Transfer(address indexed _from, address indexed _to, uint256 _value); // Triggered when tokens are transferred.\r\n\t//event Approval(address indexed _owner, address indexed _spender, uint256 _value); // Triggered whenever approve(address _spender, uint256 _value) is called.\r\n}\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\tfunction mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\tuint256 c = a * b;\r\n\t\tassert(a == 0 || c / a == b);\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\t// assert(b > 0); // Solidity automatically throws when dividing by 0\r\n\t\tuint256 c = a / b;\r\n\t\t// assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\tassert(b <= a);\r\n\t\treturn a - b;\r\n\t}\r\n\r\n\tfunction add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n\t\tuint256 c = a + b;\r\n\t\tassert(c >= a);\r\n\t\treturn c;\r\n\t}\r\n}\r\n\r\ncontract owned {\r\n\taddress public owner;\r\n\r\n\tfunction owned() {\r\n\t\towner = msg.sender;\r\n\t}\r\n\r\n\tmodifier onlyOwner {\r\n\t\tif (msg.sender != owner) revert();\r\n\t\t_;\r\n\t}\r\n\r\n\t/* function transferOwnership(address newOwner) onlyOwner {\r\n\t\towner = newOwner;\r\n\t} */\r\n}\r\n\r\ncontract tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }\r\n\r\ncontract HacToken is ERC20Interface, owned{\r\n\tstring public standard = 'Token 0.1';\r\n\tstring public name;\r\n\tstring public symbol;\r\n\tuint8 public decimals;\r\n\tuint256 public freeTokens;\r\n\tuint256 public totalSupply;\r\n\r\n\tmapping (address => uint256) public balanceOf;\r\n\r\n\tevent TransferFrom(address indexed _from, address indexed _to, uint256 _value); // Triggered when tokens are transferred by owner.\r\n\r\n\tfunction HacToken() {\r\n\t\ttotalSupply = freeTokens = 10000000000000;\r\n\t\tname = \"HAC Token\";\r\n\t\tdecimals = 4;\r\n\t\tsymbol = \"HAC\";\r\n\t}\r\n\r\n\tfunction totalSupply() constant returns (uint256 total) {\r\n\t\treturn total = totalSupply;\r\n\t}\r\n\tfunction balanceOf(address _owner) constant returns (uint256 balance) {\r\n\t\treturn balanceOf[_owner];\r\n\t}\r\n\t/* function approve(address _spender, uint256 _amount) returns (bool success) {\r\n\t\treturn false;\r\n\t}\r\n\tfunction allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n\t\treturn 0;\r\n\t} */\r\n\tfunction () {\r\n\t\trevert();\r\n\t}\r\n\r\n\tfunction setTokens(address target, uint256 amount) onlyOwner {\r\n\t\tif(freeTokens < amount) revert();\r\n\r\n\t\tbalanceOf[target] = SafeMath.add(balanceOf[target], amount);\r\n\t\tfreeTokens = SafeMath.sub(freeTokens, amount);\r\n\t\tTransfer(this, target, amount);\r\n\t}\r\n\r\n\tfunction transfer(address _to, uint256 _value) returns (bool success){\r\n\t\tbalanceOf[msg.sender] = SafeMath.sub(balanceOf[msg.sender], _value);\r\n\t\tbalanceOf[_to] = SafeMath.add(balanceOf[_to], _value);\r\n\r\n\t\tTransfer(msg.sender, _to, _value);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction transferFrom(address _from, address _to, uint256 _value) onlyOwner returns (bool success) {\r\n\t\tbalanceOf[_from] = SafeMath.sub(balanceOf[_from], _value);\r\n\t\tbalanceOf[_to] = SafeMath.add(balanceOf[_to], _value);\r\n\r\n\t\tTransferFrom(_from, _to, _value);\r\n\t\treturn true;\r\n\t}\r\n}", "OptimizationUsed": "1", "ContractName": "HacToken", "ByteCode": "0x606060405236156100ac5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100c457806318160ddd1461014f57806323b872dd14610174578063313ce567146101b05780635a3b7e42146101d95780636fe8f9c51461026457806370a08231146102895780638da5cb5b146102ba57806395d89b41146102e9578063a9059cbb14610374578063bac79651146103aa575b34156100b757600080fd5b6100c25b600080fd5b565b005b34156100cf57600080fd5b6100d76103ce565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101145780820151818401525b6020016100fb565b50505050905090810190601f1680156101415780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561015a57600080fd5b61016261046c565b60405190815260200160405180910390f35b341561017f57600080fd5b61019c600160a060020a0360043581169060243516604435610473565b604051901515815260200160405180910390f35b34156101bb57600080fd5b6101c3610544565b60405160ff909116815260200160405180910390f35b34156101e457600080fd5b6100d761054d565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101145780820151818401525b6020016100fb565b50505050905090810190601f1680156101415780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561026f57600080fd5b6101626105eb565b60405190815260200160405180910390f35b341561029457600080fd5b610162600160a060020a03600435166105f1565b60405190815260200160405180910390f35b34156102c557600080fd5b6102cd610610565b604051600160a060020a03909116815260200160405180910390f35b34156102f457600080fd5b6100d761061f565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101145780820151818401525b6020016100fb565b50505050905090810190601f1680156101415780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561037f57600080fd5b61019c600160a060020a03600435166024356106bd565b604051901515815260200160405180910390f35b34156103b557600080fd5b6100c2600160a060020a0360043516602435610771565b005b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104645780601f1061043957610100808354040283529160200191610464565b820191906000526020600020905b81548152906001019060200180831161044757829003601f168201915b505050505081565b6006545b90565b6000805433600160a060020a0390811691161461048f57600080fd5b600160a060020a0384166000908152600760205260409020546104b2908361082e565b600160a060020a0380861660009081526007602052604080822093909355908516815220546104e19083610845565b600160a060020a03808516600081815260076020526040908190209390935591908616907fc0d84ce5c7ff9ca21adb0f8436ff3f4951b4bb78c4e2fae2b6837958b3946ffd9085905190815260200160405180910390a35060015b5b9392505050565b60045460ff1681565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104645780601f1061043957610100808354040283529160200191610464565b820191906000526020600020905b81548152906001019060200180831161044757829003601f168201915b505050505081565b60055481565b600160a060020a0381166000908152600760205260409020545b919050565b600054600160a060020a031681565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104645780601f1061043957610100808354040283529160200191610464565b820191906000526020600020905b81548152906001019060200180831161044757829003601f168201915b505050505081565b600160a060020a0333166000908152600760205260408120546106e0908361082e565b600160a060020a03338116600090815260076020526040808220939093559085168152205461070f9083610845565b600160a060020a0380851660008181526007602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060015b92915050565b60005433600160a060020a0390811691161461078c57600080fd5b80600554101561079b57600080fd5b600160a060020a0382166000908152600760205260409020546107be9082610845565b600160a060020a0383166000908152600760205260409020556005546107e4908261082e565b600555600160a060020a038083169030167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405190815260200160405180910390a35b5b5050565b60008282111561083a57fe5b508082035b92915050565b60008282018381101561085457fe5b8091505b50929150505600a165627a7a723058200dfa1c5789b9d4268db841c18402f848888cf2009f8fd7ca26d8d7b477189e370029"}