{"Runs": "200", "SwarmSource": "bzzr://c4019bbd1bd0d99f08b808affd3d15109ef0fcf84a9d98c0c3e8e813991ef4ec", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canMintBurn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberOfAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"getHour\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"getWeekday\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newValue\",\"type\":\"uint256\"}],\"name\":\"changeHoldingTaxInterval\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastHoldingTax\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"physicalString\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"txnTax\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isSecured\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"getSecond\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressExists\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"chargeHoldingTax\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"addAddressManual\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"holdingTaxInterval\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cryptoString\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"removeAddressManual\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newValue\",\"type\":\"uint256\"}],\"name\":\"changeHoldingTax\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"holdingTaxDecimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"holdingTax\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newValue\",\"type\":\"uint256\"}],\"name\":\"changeTxnTax\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addresses\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"getMinute\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPrivate\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"n\",\"type\":\"string\"},{\"name\":\"a\",\"type\":\"string\"},{\"name\":\"totalSupplyToUse\",\"type\":\"uint256\"},{\"name\":\"isSecured\",\"type\":\"bool\"},{\"name\":\"cMB\",\"type\":\"bool\"},{\"name\":\"physical\",\"type\":\"string\"},{\"name\":\"crypto\",\"type\":\"string\"},{\"name\":\"txnTaxToUse\",\"type\":\"uint256\"},{\"name\":\"holdingTaxToUse\",\"type\":\"uint256\"},{\"name\":\"holdingTaxIntervalToUse\",\"type\":\"uint256\"},{\"name\":\"isPrivateToUse\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.15+commit.bbb8e64f", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001a00000000000000000000000000000000000000000000000000000000005f5e1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000000000000002200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a55534420546574686572000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004555344540000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000025b5d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000025b5d000000000000000000000000000000000000000000000000000000000000", "SourceCode": "pragma solidity ^0.4.15;\r\n\r\ncontract Token {\r\n    \r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (uint256 => address) public addresses;\r\n    mapping (address => bool) public addressExists;\r\n    mapping (address => uint256) public addressIndex;\r\n    mapping(address => mapping (address => uint256)) allowed;\r\n    uint256 public numberOfAddress = 0;\r\n    \r\n    string public physicalString;\r\n    string public cryptoString;\r\n    \r\n    bool public isSecured;\r\n    string public name;\r\n    string public symbol;\r\n    uint256 public totalSupply;\r\n    bool public canMintBurn;\r\n    uint256 public txnTax;\r\n    uint256 public holdingTax;\r\n    //In Weeks, on Fridays\r\n    uint256 public holdingTaxInterval;\r\n    uint256 public lastHoldingTax;\r\n    uint256 public holdingTaxDecimals = 2;\r\n    bool public isPrivate;\r\n    \r\n    address public owner;\r\n    \r\n    function Token(string n, string a, uint256 totalSupplyToUse, bool isSecured, bool cMB, string physical, string crypto, uint256 txnTaxToUse, uint256 holdingTaxToUse, uint256 holdingTaxIntervalToUse, bool isPrivateToUse) {\r\n        name = n;\r\n        symbol = a;\r\n        totalSupply = totalSupplyToUse;\r\n        balanceOf[msg.sender] = totalSupplyToUse;\r\n        isSecured = isSecured;\r\n        physicalString = physical;\r\n        cryptoString = crypto;\r\n        canMintBurn = cMB;\r\n        owner = msg.sender;\r\n        txnTax = txnTaxToUse;\r\n        holdingTax = holdingTaxToUse;\r\n        holdingTaxInterval = holdingTaxIntervalToUse;\r\n        if(holdingTaxInterval!=0) {\r\n            lastHoldingTax = now;\r\n            while(getHour(lastHoldingTax)!=21) {\r\n                lastHoldingTax -= 1 hours;\r\n            }\r\n            while(getWeekday(lastHoldingTax)!=5) {\r\n                lastHoldingTax -= 1 days;\r\n            }\r\n            lastHoldingTax -= getMinute(lastHoldingTax) * (1 minutes) + getSecond(lastHoldingTax) * (1 seconds);\r\n        }\r\n        isPrivate = isPrivateToUse;\r\n        \r\n        addAddress(owner);\r\n    }\r\n    \r\n    function transfer(address _to, uint256 _value) payable returns (bool success) {\r\n        chargeHoldingTax();\r\n        if (balanceOf[msg.sender] < _value) return false;\r\n        if (balanceOf[_to] + _value < balanceOf[_to]) return false;\r\n        if (msg.sender != owner && _to != owner && txnTax != 0) {\r\n            if(!owner.send(txnTax)) {\r\n                return false;\r\n            }\r\n        }\r\n        if(isPrivate && msg.sender != owner && !addressExists[_to]) {\r\n            return false;\r\n        }\r\n        balanceOf[msg.sender] -= _value;\r\n        balanceOf[_to] += _value;\r\n        addAddress(_to);\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n    \r\n    function transferFrom(\r\n         address _from,\r\n         address _to,\r\n         uint256 _amount\r\n     ) payable returns (bool success) {\r\n        if (_from != owner && _to != owner && txnTax != 0) {\r\n            if(!owner.send(txnTax)) {\r\n                return false;\r\n            }\r\n        }\r\n        if(isPrivate && _from != owner && !addressExists[_to]) {\r\n            return false;\r\n        }\r\n        if (balanceOf[_from] >= _amount\r\n            && allowed[_from][msg.sender] >= _amount\r\n            && _amount > 0\r\n            && balanceOf[_to] + _amount > balanceOf[_to]) {\r\n            balanceOf[_from] -= _amount;\r\n            allowed[_from][msg.sender] -= _amount;\r\n            balanceOf[_to] += _amount;\r\n            Transfer(_from, _to, _amount);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n     \r\n    function approve(address _spender, uint256 _amount) returns (bool success) {\r\n        allowed[msg.sender][_spender] = _amount;\r\n        Approval(msg.sender, _spender, _amount);\r\n        return true;\r\n    }\r\n    \r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n    \r\n    function changeTxnTax(uint256 _newValue) {\r\n        if(msg.sender != owner) throw;\r\n        txnTax = _newValue;\r\n    }\r\n    \r\n    function mint(uint256 _value) {\r\n        if(canMintBurn && msg.sender == owner) {\r\n            if (balanceOf[msg.sender] + _value < balanceOf[msg.sender]) throw;\r\n            balanceOf[msg.sender] += _value;\r\n            totalSupply += _value;\r\n            Transfer(0, msg.sender, _value);\r\n        }\r\n    }\r\n    \r\n    function burn(uint256 _value) {\r\n        if(canMintBurn && msg.sender == owner) {\r\n            if (balanceOf[msg.sender] < _value) throw;\r\n            balanceOf[msg.sender] -= _value;\r\n            totalSupply -= _value;\r\n            Transfer(msg.sender, 0, _value);\r\n        }\r\n    }\r\n    \r\n    function chargeHoldingTax() {\r\n        if(holdingTaxInterval!=0) {\r\n            uint256 dateDif = now - lastHoldingTax;\r\n            bool changed = false;\r\n            while(dateDif >= holdingTaxInterval * (1 weeks)) {\r\n                changed=true;\r\n                dateDif -= holdingTaxInterval * (1 weeks);\r\n                for(uint256 i = 0;i<numberOfAddress;i++) {\r\n                    if(addresses[i]!=owner) {\r\n                        uint256 amtOfTaxToPay = ((balanceOf[addresses[i]]) * holdingTax)  / (10**holdingTaxDecimals)/ (10**holdingTaxDecimals);\r\n                        balanceOf[addresses[i]] -= amtOfTaxToPay;\r\n                        balanceOf[owner] += amtOfTaxToPay;\r\n                    }\r\n                }\r\n            }\r\n            if(changed) {\r\n                lastHoldingTax = now;\r\n                while(getHour(lastHoldingTax)!=21) {\r\n                    lastHoldingTax -= 1 hours;\r\n                }\r\n                while(getWeekday(lastHoldingTax)!=5) {\r\n                    lastHoldingTax -= 1 days;\r\n                }\r\n                lastHoldingTax -= getMinute(lastHoldingTax) * (1 minutes) + getSecond(lastHoldingTax) * (1 seconds);\r\n            }\r\n        }\r\n    }\r\n    \r\n    function changeHoldingTax(uint256 _newValue) {\r\n        if(msg.sender != owner) throw;\r\n        holdingTax = _newValue;\r\n    }\r\n    \r\n    function changeHoldingTaxInterval(uint256 _newValue) {\r\n        if(msg.sender != owner) throw;\r\n        holdingTaxInterval = _newValue;\r\n    }\r\n    \r\n    function addAddress (address addr) private {\r\n        if(!addressExists[addr]) {\r\n            addressIndex[addr] = numberOfAddress;\r\n            addresses[numberOfAddress++] = addr;\r\n            addressExists[addr] = true;\r\n        }\r\n    }\r\n    \r\n    function addAddressManual (address addr) {\r\n        if(msg.sender == owner && isPrivate) {\r\n            addAddress(addr);\r\n        } else {\r\n            throw;\r\n        }\r\n    }\r\n    \r\n    function removeAddress (address addr) private {\r\n        if(addressExists[addr]) {\r\n            numberOfAddress--;\r\n            addresses[addressIndex[addr]] = 0x0;\r\n            addressExists[addr] = false;\r\n        }\r\n    }\r\n    \r\n    function removeAddressManual (address addr) {\r\n        if(msg.sender == owner && isPrivate) {\r\n            removeAddress(addr);\r\n        } else {\r\n            throw;\r\n        }\r\n    }\r\n    \r\n    function getWeekday(uint timestamp) returns (uint8) {\r\n            return uint8((timestamp / 86400 + 4) % 7);\r\n    }\r\n    \r\n    function getHour(uint timestamp) returns (uint8) {\r\n            return uint8((timestamp / 60 / 60) % 24);\r\n    }\r\n\r\n    function getMinute(uint timestamp) returns (uint8) {\r\n            return uint8((timestamp / 60) % 60);\r\n    }\r\n\r\n    function getSecond(uint timestamp) returns (uint8) {\r\n            return uint8(timestamp % 60);\r\n    }\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}", "OptimizationUsed": "1", "ContractName": "Token", "ByteCode": ""}