{"Runs": "200", "SwarmSource": "bzzr://4a9df9de868bf01547201e865d7bedcdf3d87a9b7072b149abec661e672fe8b4", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"setTransferAgent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"releaseTeamTokenTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopTeamTokenTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupplyToken\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setReleaseAgent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply_\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releasedTeam\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"releaseTokenTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"setTeamMember\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"transferAgents\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"released\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stopTokenTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"teamMembers\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releaseAgent\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.24+commit.e67f0147", "ConstructorArguments": "", "SourceCode": "pragma solidity ^0.4.24;\r\n\r\n\r\ncontract ERC20Basic {\r\n    function totalSupply() public view returns (uint256);\r\n    function balanceOf(address who) public view returns (uint256);\r\n    function transfer(address to, uint256 value) public returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n    function allowance(address owner, address spender)\r\n        public view returns (uint256);\r\n\r\n    function transferFrom(address from, address to, uint256 value)\r\n        public returns (bool);\r\n\r\n    function approve(address spender, uint256 value) public returns (bool);\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n}\r\n\r\ncontract BasicToken is ERC20Basic {\r\n    using SafeMath for uint256;\r\n\r\n    mapping(address => uint256) public balances;\r\n\r\n    uint256 public totalSupply_;\r\n\r\n    function totalSupply() public view returns (uint256) {\r\n        return totalSupply_;\r\n    }\r\n\r\n    /**\r\n    * Transfer token for a specified address\r\n    * @param _to The address to transfer to.\r\n    * @param _value The amount to be transferred.\r\n    */\r\n    function transfer(address _to, uint256 _value) public returns (bool) {\r\n        require(_to != address(0));\r\n        require(_value <= balances[msg.sender]);\r\n\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * Gets the balance of the specified address.\r\n    * @param _owner The address to query the the balance of.\r\n    * @return An uint256 representing the amount owned by the passed address.\r\n    */\r\n    function balanceOf(address _owner) public view returns (uint256) {\r\n        return balances[_owner];\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n\r\n    event OwnershipRenounced(address indexed previousOwner);\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n\r\n    /**\r\n    * The Ownable constructor sets the original `owner` of the contract to the sender\r\n    * account.\r\n    */\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n    * Throws if called by any account other than the owner.\r\n    */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * Allows the current owner to relinquish control of the contract.\r\n    * @notice Renouncing to ownership will leave the contract without an owner.\r\n    * It will not be possible to call the functions with the `onlyOwner`\r\n    * modifier anymore.\r\n    */\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipRenounced(owner);\r\n        owner = address(0);\r\n    }\r\n\r\n    /**\r\n    * Allows the current owner to transfer control of the contract to a newOwner.\r\n    * @param _newOwner The address to transfer ownership to.\r\n    */\r\n    function transferOwnership(address _newOwner) public onlyOwner {\r\n        _transferOwnership(_newOwner);\r\n    }\r\n\r\n    /**\r\n    * Transfers control of the contract to a newOwner.\r\n    * @param _newOwner The address to transfer ownership to.\r\n    */\r\n    function _transferOwnership(address _newOwner) internal {\r\n        require(_newOwner != address(0));\r\n        emit OwnershipTransferred(owner, _newOwner);\r\n        owner = _newOwner;\r\n    }\r\n}\r\n\r\n/**\r\n * @title SafeMath\r\n * Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n\r\n    /**\r\n    * Multiplies two numbers, throws on overflow.\r\n    */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.       \r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * Integer division of two numbers, truncating the quotient.\r\n    */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        // uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n    * Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n    */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n    * Adds two numbers, throws on overflow.\r\n    */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\r\n        c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract StandardToken is ERC20, BasicToken {\r\n\r\n    mapping (address => mapping (address => uint256)) internal allowed;\r\n    /**\r\n    * Transfer tokens from one address to another\r\n    * @param _from address The address which you want to send tokens from\r\n    * @param _to address The address which you want to transfer to\r\n    * @param _value uint256 the amount of tokens to be transferred\r\n    */\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _value\r\n    )\r\n        public\r\n        returns (bool)\r\n    {\r\n        require(_to != address(0));\r\n        require(_value <= balances[_from]);\r\n        require(_value <= allowed[_from][msg.sender]);\r\n\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n        emit Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r\n    * Beware that changing an allowance with this method brings the risk that someone may use both the old\r\n    * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\r\n    * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:  \r\n    * @param _spender The address which will spend the funds.\r\n    * @param _value The amount of tokens to be spent.\r\n    */\r\n    function approve(address _spender, uint256 _value) public returns (bool) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * Function to check the amount of tokens that an owner allowed to a spender.\r\n    * @param _owner address The address which owns the funds.\r\n    * @param _spender address The address which will spend the funds.\r\n    * @return A uint256 specifying the amount of tokens still available for the spender.\r\n    */\r\n    function allowance(\r\n        address _owner,\r\n        address _spender\r\n    )\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    /**\r\n    * Increase the amount of tokens that an owner allowed to a spender.\r\n    * approve should be called when allowed[_spender] == 0. To increment\r\n    * allowed value is better to use this function to avoid 2 calls (and wait until\r\n    * the first transaction is mined) \r\n    * @param _spender The address which will spend the funds.\r\n    * @param _addedValue The amount of tokens to increase the allowance by.\r\n    */\r\n    function increaseApproval(\r\n        address _spender,\r\n        uint256 _addedValue\r\n    )\r\n        public\r\n        returns (bool)\r\n    {\r\n        allowed[msg.sender][_spender] = (\r\n        allowed[msg.sender][_spender].add(_addedValue));\r\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * Decrease the amount of tokens that an owner allowed to a spender.\r\n    * approve should be called when allowed[_spender] == 0. To decrement\r\n    * allowed value is better to use this function to avoid 2 calls (and wait until\r\n    * the first transaction is mined)   \r\n    * @param _spender The address which will spend the funds.\r\n    * @param _subtractedValue The amount of tokens to decrease the allowance by.\r\n    */\r\n    function decreaseApproval(\r\n        address _spender,\r\n        uint256 _subtractedValue\r\n    )\r\n        public\r\n        returns (bool)\r\n    {\r\n        uint256 oldValue = allowed[msg.sender][_spender];\r\n        if (_subtractedValue > oldValue) {\r\n            allowed[msg.sender][_spender] = 0;\r\n        } else {\r\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\r\n        }\r\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n}\r\n\r\n\r\ncontract MintableToken is StandardToken, Ownable {\r\n    event Mint(address indexed to, uint256 amount);\r\n    event MintFinished();\r\n\r\n    bool public mintingFinished = false;\r\n\r\n\r\n    modifier canMint() {\r\n        require(!mintingFinished);\r\n        _;\r\n    }\r\n\r\n    modifier hasMintPermission() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * Function to mint tokens\r\n    * @param _to The address that will receive the minted tokens.\r\n    * @param _amount The amount of tokens to mint.\r\n    * @return A boolean that indicates if the operation was successful.\r\n    */\r\n    function mint(\r\n        address _to,\r\n        uint256 _amount\r\n    )\r\n        hasMintPermission\r\n        canMint\r\n        public\r\n        returns (bool)\r\n    {\r\n        totalSupply_ = totalSupply_.add(_amount);\r\n        balances[_to] = balances[_to].add(_amount);\r\n        emit Mint(_to, _amount);\r\n        emit Transfer(address(0), _to, _amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * Function to stop minting new tokens.\r\n    * @return True if the operation was successful.\r\n    */\r\n    function finishMinting() onlyOwner canMint public returns (bool) {\r\n        mintingFinished = true;\r\n        emit MintFinished();\r\n        return true;\r\n    }\r\n}\r\n\r\ncontract SUREToken is MintableToken {\r\n    address private deployedAddress = 0x65E5fF263Dd264b78ADcb08c1788c4CEC8910B4B; //Replace this address by the Ethereum main net\r\n    string public name = \"SURETY Token\";\r\n    string public symbol = \"SURE\";    \r\n    uint public decimals = 6;\r\n    uint public totalSupplyToken = 500000000;  \r\n\r\n    /* The finalizer contract that allows unlift the transfer limits on this token */\r\n    address public releaseAgent;\r\n\r\n    /* A crowdsale contract can release us to the wild if ICO success. If false we are are in transfer lock up period.*/\r\n    bool public released = false;\r\n\r\n     /* Map of agents that are allowed to transfer tokens regardless of the lock down period. These are crowdsale contracts and possible the team multisig itself. */\r\n    mapping (address => bool) public transferAgents;\r\n\r\n     /* A contract can release SURETY.AI team members/advisors to transfertoken. If false we are are in transfer lock up period.*/\r\n    bool public releasedTeam = false;\r\n\r\n     /* Map of SURETY.AI's team members/advisors. */\r\n    mapping (address => bool) public teamMembers;\r\n    \r\n    constructor() public {                    \r\n        totalSupply_ = totalSupplyToken * (10 ** decimals);\r\n        balances[deployedAddress] = totalSupply_;\r\n        transferAgents[deployedAddress] = true;        \r\n        releaseAgent = deployedAddress;\r\n        emit Transfer(address(0), deployedAddress, totalSupply_);\r\n    }   \r\n   \r\n    /**\r\n    * Limit token transfer until the crowdsale is over.    \r\n    */\r\n    modifier canTransfer(address _sender) {\r\n\r\n        if(!released) {\r\n            if(!transferAgents[_sender]) {\r\n                revert(\"The token is in the locking period\");\r\n            }\r\n        }\r\n        else if (!releasedTeam && teamMembers[_sender])\r\n        {\r\n            revert(\"Team members/advisors cannot trade during this period.\");\r\n        }    \r\n        _;\r\n    }\r\n\r\n    /**\r\n    * Set the contract that can call release and make the token transferable.  \r\n    */\r\n    function setReleaseAgent(address addr) onlyOwner inReleaseState(false) public {      \r\n        releaseAgent = addr;\r\n    }\r\n\r\n    /**\r\n    * Owner can allow a particular address (a crowdsale contract) to transfer tokens despite the lock up period.\r\n    */\r\n    function setTransferAgent(address addr, bool state) onlyOwner inReleaseState(false) public {\r\n        require (!teamMembers[addr], \"Error! This address is a team member/advisor address.\");\r\n        transferAgents[addr] = state;       \r\n    }\r\n\r\n     /**\r\n    * Owner can add the team member/advisor address.\r\n    */\r\n    function setTeamMember(address addr, bool state) onlyOwner inReleaseState(false) public {\r\n        require (!transferAgents[addr], \"Error! This address is in the transfer agent list.\");\r\n        teamMembers[addr] = state;            \r\n    }\r\n\r\n\r\n    /**\r\n    * End locking state\r\n    */\r\n    function releaseTokenTransfer() public onlyReleaseAgent {\r\n        released = true;\r\n    }\r\n\r\n    /**\r\n    * Resume locking state.\r\n    */\r\n    function stopTokenTransfer() public onlyReleaseAgent {\r\n        released = false;\r\n    }\r\n\r\n     /**\r\n    * End locking state for team member/advisor.\r\n    */\r\n    function releaseTeamTokenTransfer() public onlyReleaseAgent {\r\n        releasedTeam = true;\r\n    }\r\n\r\n    /**\r\n    * Resume locking state for team member/advisor.\r\n    */\r\n    function stopTeamTokenTransfer() public onlyReleaseAgent {\r\n        releasedTeam = false;\r\n    }\r\n\r\n    /** The function can be called only before or after the tokens have been releasesd */\r\n    modifier inReleaseState(bool releaseState) {\r\n        if(releaseState != released) {\r\n            revert();\r\n        }\r\n        _;\r\n    }\r\n\r\n    /** The function can be called only by a whitelisted release agent. */\r\n    modifier onlyReleaseAgent() {\r\n        if(msg.sender != releaseAgent) {\r\n            revert();\r\n        }\r\n        _;\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) canTransfer(msg.sender) public returns (bool success) {        \r\n        return super.transfer(_to, _value);\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint _value) canTransfer(_from) public returns (bool success) {        \r\n        return super.transferFrom(_from, _to, _value);\r\n    }\r\n}", "OptimizationUsed": "1", "ContractName": "SUREToken", "ByteCode": "0x6080604052600436106101955763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166302f652a3811461019a57806305d2035b146101c257806306fdde03146101eb578063095ea7b3146102755780630e5fdad41461029957806318160ddd146102ae5780631ee5f936146102d557806323b872dd146102ea578063272133451461031457806327e235e31461032957806329ff4f531461034a578063313ce5671461036b578063324536eb1461038057806338e4b06b1461039557806340c10f19146103aa5780635f412d4f146103ce57806360bba03d146103e3578063661884631461040957806370a082311461042d578063715018a61461044e5780637d64bcb414610463578063867c2857146104785780638da5cb5b1461049957806395d89b41146104ca57806396132521146104df578063a9059cbb146104f4578063b49d3a5314610518578063c836292b1461052d578063d1f276d31461054e578063d73dd62314610563578063dd62ed3e14610587578063f2fde38b146105ae575b600080fd5b3480156101a657600080fd5b506101c0600160a060020a036004351660243515156105cf565b005b3480156101ce57600080fd5b506101d76106c3565b604080519115158252519081900360200190f35b3480156101f757600080fd5b506102006106d3565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561023a578181015183820152602001610222565b50505050905090810190601f1680156102675780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561028157600080fd5b506101d7600160a060020a0360043516602435610761565b3480156102a557600080fd5b506101c06107c7565b3480156102ba57600080fd5b506102c36107ed565b60408051918252519081900360200190f35b3480156102e157600080fd5b506101c06107f3565b3480156102f657600080fd5b506101d7600160a060020a0360043581169060243516604435610816565b34801561032057600080fd5b506102c3610985565b34801561033557600080fd5b506102c3600160a060020a036004351661098b565b34801561035657600080fd5b506101c0600160a060020a036004351661099d565b34801561037757600080fd5b506102c36109fe565b34801561038c57600080fd5b506102c3610a04565b3480156103a157600080fd5b506101d7610a0a565b3480156103b657600080fd5b506101d7600160a060020a0360043516602435610a13565b3480156103da57600080fd5b506101c0610b1d565b3480156103ef57600080fd5b506101c0600160a060020a03600435166024351515610b5a565b34801561041557600080fd5b506101d7600160a060020a0360043516602435610c4e565b34801561043957600080fd5b506102c3600160a060020a0360043516610d3e565b34801561045a57600080fd5b506101c0610d59565b34801561046f57600080fd5b506101d7610dc7565b34801561048457600080fd5b506101d7600160a060020a0360043516610e4b565b3480156104a557600080fd5b506104ae610e60565b60408051600160a060020a039092168252519081900360200190f35b3480156104d657600080fd5b50610200610e6f565b3480156104eb57600080fd5b506101d7610eca565b34801561050057600080fd5b506101d7600160a060020a0360043516602435610eda565b34801561052457600080fd5b506101c0611047565b34801561053957600080fd5b506101d7600160a060020a036004351661107e565b34801561055a57600080fd5b506104ae611093565b34801561056f57600080fd5b506101d7600160a060020a03600435166024356110a2565b34801561059357600080fd5b506102c3600160a060020a036004358116906024351661113b565b3480156105ba57600080fd5b506101c0600160a060020a0360043516611166565b600354600160a060020a031633146105e657600080fd5b60095460009060a060020a900460ff161561060057600080fd5b600160a060020a0383166000908152600c602052604090205460ff1615610697576040805160e560020a62461bcd02815260206004820152603560248201527f4572726f7221205468697320616464726573732069732061207465616d206d6560448201527f6d6265722f61647669736f7220616464726573732e0000000000000000000000606482015290519081900360840190fd5b50600160a060020a03919091166000908152600a60205260409020805460ff1916911515919091179055565b60035460a060020a900460ff1681565b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107595780601f1061072e57610100808354040283529160200191610759565b820191906000526020600020905b81548152906001019060200180831161073c57829003601f168201915b505050505081565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b600954600160a060020a031633146107de57600080fd5b600b805460ff19166001179055565b60015490565b600954600160a060020a0316331461080a57600080fd5b600b805460ff19169055565b600954600090849060a060020a900460ff1615156108cb57600160a060020a0381166000908152600a602052604090205460ff1615156108c6576040805160e560020a62461bcd02815260206004820152602260248201527f54686520746f6b656e20697320696e20746865206c6f636b696e67207065726960448201527f6f64000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b610971565b600b5460ff161580156108f65750600160a060020a0381166000908152600c602052604090205460ff165b15610971576040805160e560020a62461bcd02815260206004820152603660248201527f5465616d206d656d626572732f61647669736f72732063616e6e6f742074726160448201527f646520647572696e67207468697320706572696f642e00000000000000000000606482015290519081900360840190fd5b61097c858585611189565b95945050505050565b60085481565b60006020819052908152604090205481565b600354600160a060020a031633146109b457600080fd5b60095460009060a060020a900460ff16156109ce57600080fd5b506009805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60075481565b60015481565b600b5460ff1681565b600354600090600160a060020a03163314610a2d57600080fd5b60035460a060020a900460ff1615610a4457600080fd5b600154610a57908363ffffffff61130016565b600155600160a060020a038316600090815260208190526040902054610a83908363ffffffff61130016565b600160a060020a03841660008181526020818152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518381529051600160a060020a038516916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a350600192915050565b600954600160a060020a03163314610b3457600080fd5b6009805474ff0000000000000000000000000000000000000000191660a060020a179055565b600354600160a060020a03163314610b7157600080fd5b60095460009060a060020a900460ff1615610b8b57600080fd5b600160a060020a0383166000908152600a602052604090205460ff1615610c22576040805160e560020a62461bcd02815260206004820152603260248201527f4572726f72212054686973206164647265737320697320696e2074686520747260448201527f616e73666572206167656e74206c6973742e0000000000000000000000000000606482015290519081900360840190fd5b50600160a060020a03919091166000908152600c60205260409020805460ff1916911515919091179055565b336000908152600260209081526040808320600160a060020a038616845290915281205480831115610ca357336000908152600260209081526040808320600160a060020a0388168452909152812055610cd8565b610cb3818463ffffffff61131316565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b600354600160a060020a03163314610d7057600080fd5b600354604051600160a060020a03909116907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a26003805473ffffffffffffffffffffffffffffffffffffffff19169055565b600354600090600160a060020a03163314610de157600080fd5b60035460a060020a900460ff1615610df857600080fd5b6003805474ff0000000000000000000000000000000000000000191660a060020a1790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a150600190565b600a6020526000908152604090205460ff1681565b600354600160a060020a031681565b6006805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107595780601f1061072e57610100808354040283529160200191610759565b60095460a060020a900460ff1681565b600954600090339060a060020a900460ff161515610f8f57600160a060020a0381166000908152600a602052604090205460ff161515610f8a576040805160e560020a62461bcd02815260206004820152602260248201527f54686520746f6b656e20697320696e20746865206c6f636b696e67207065726960448201527f6f64000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b611035565b600b5460ff16158015610fba5750600160a060020a0381166000908152600c602052604090205460ff165b15611035576040805160e560020a62461bcd02815260206004820152603660248201527f5465616d206d656d626572732f61647669736f72732063616e6e6f742074726160448201527f646520647572696e67207468697320706572696f642e00000000000000000000606482015290519081900360840190fd5b61103f8484611325565b949350505050565b600954600160a060020a0316331461105e57600080fd5b6009805474ff000000000000000000000000000000000000000019169055565b600c6020526000908152604090205460ff1681565b600954600160a060020a031681565b336000908152600260209081526040808320600160a060020a03861684529091528120546110d6908363ffffffff61130016565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600354600160a060020a0316331461117d57600080fd5b61118681611406565b50565b6000600160a060020a03831615156111a057600080fd5b600160a060020a0384166000908152602081905260409020548211156111c557600080fd5b600160a060020a03841660009081526002602090815260408083203384529091529020548211156111f557600080fd5b600160a060020a03841660009081526020819052604090205461121e908363ffffffff61131316565b600160a060020a038086166000908152602081905260408082209390935590851681522054611253908363ffffffff61130016565b600160a060020a03808516600090815260208181526040808320949094559187168152600282528281203382529091522054611295908363ffffffff61131316565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b8181018281101561130d57fe5b92915050565b60008282111561131f57fe5b50900390565b6000600160a060020a038316151561133c57600080fd5b3360009081526020819052604090205482111561135857600080fd5b33600090815260208190526040902054611378908363ffffffff61131316565b3360009081526020819052604080822092909255600160a060020a038516815220546113aa908363ffffffff61130016565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b600160a060020a038116151561141b57600080fd5b600354604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a723058204a9df9de868bf01547201e865d7bedcdf3d87a9b7072b149abec661e672fe8b40029"}