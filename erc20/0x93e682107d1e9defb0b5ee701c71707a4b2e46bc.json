{"Runs": "200", "SwarmSource": "bzzr://dfd8ea2a15374349f608e5bb9ef86d9de763c4b84d287e0c390001a776c0a97b", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"decimalUnits\",\"type\":\"uint8\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.11+commit.68ef5810", "ConstructorArguments": "000000000000000000000000000000000000000000000000002386f26fc100000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000044d4341500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044d43415000000000000000000000000000000000000000000000000000000000", "SourceCode": "pragma solidity ^0.4.6;\r\n\r\n\r\ncontract tokenRecipient {function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);}\r\n\r\n\r\ncontract MCAP {\r\n    /* Public variables of the token */\r\n    string public standard = 'MCAP 1.0';\r\n\r\n    string public name;\r\n\r\n    string public symbol;\r\n\r\n    uint8 public decimals;\r\n\r\n    uint256 public totalSupply;\r\n\r\n    address public owner;\r\n\r\n    /* This creates an array with all balances */\r\n    mapping (address => uint256) public balanceOf;\r\n\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    /* This generates a public event on the blockchain that will notify clients */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /* Initializes contract with initial supply tokens to the creator of the contract */\r\n    function MCAP(\r\n    uint256 initialSupply,\r\n    string tokenName,\r\n    uint8 decimalUnits,\r\n    string tokenSymbol\r\n    ) {\r\n        balanceOf[msg.sender] = initialSupply;\r\n        // Give the creator all initial tokens\r\n        totalSupply = initialSupply;\r\n        // Update total supply\r\n        name = tokenName;\r\n        // Set the name for display purposes\r\n        symbol = tokenSymbol;\r\n        // Set the symbol for display purposes\r\n        decimals = decimalUnits;\r\n        // Amount of decimals for display purposes\r\n        \r\n        owner=msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        if (msg.sender != owner) throw;\r\n        _;\r\n    }\r\n    /* Send coins */\r\n    function transfer(address _to, uint256 _value) {\r\n        if (_to == 0x0) throw;\r\n        // Prevent transfer to 0x0 address\r\n        if (balanceOf[msg.sender] < _value) throw;\r\n        // Check if the sender has enough\r\n        if (balanceOf[_to] + _value < balanceOf[_to]) throw;\r\n        // Check for overflows\r\n        balanceOf[msg.sender] -= _value;\r\n        // Subtract from the sender\r\n        balanceOf[_to] += _value;\r\n        // Add the same to the recipient\r\n        Transfer(msg.sender, _to, _value);\r\n        // Notify anyone listening that this transfer took place\r\n    }\r\n\r\n    /* Allow another contract to spend some tokens in your behalf */\r\n    function approve(address _spender, uint256 _value)\r\n    returns (bool success) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        return true;\r\n    }\r\n\r\n    /* Approve and then comunicate the approved contract in a single tx */\r\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData)\r\n    returns (bool success) {\r\n        tokenRecipient spender = tokenRecipient(_spender);\r\n        if (approve(_spender, _value)) {\r\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /* A contract attempts to get the coins */\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n        if (_to == 0x0) throw;\r\n        // Prevent transfer to 0x0 address\r\n        if (balanceOf[_from] < _value) throw;\r\n        // Check if the sender has enough\r\n        if (balanceOf[_to] + _value < balanceOf[_to]) throw;\r\n        // Check for overflows\r\n        if (_value > allowance[_from][msg.sender]) throw;\r\n        // Check allowance\r\n        balanceOf[_from] -= _value;\r\n        // Subtract from the sender\r\n        balanceOf[_to] += _value;\r\n        // Add the same to the recipient\r\n        allowance[_from][msg.sender] -= _value;\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n}", "OptimizationUsed": "1", "ContractName": "MCAP", "ByteCode": "0x606060405236156100b75763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100b9578063095ea7b31461014957806318160ddd1461017c57806323b872dd1461019e578063313ce567146101d75780635a3b7e42146101fd57806370a082311461028d5780638da5cb5b146102bb57806395d89b41146102e7578063a9059cbb14610377578063cae9ca5114610398578063dd62ed3e1461040f575bfe5b34156100c157fe5b6100c9610443565b60408051602080825283518183015283519192839290830191850190808383821561010f575b80518252602083111561010f57601f1990920191602091820191016100ef565b505050905090810190601f16801561013b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561015157fe5b610168600160a060020a03600435166024356104d0565b604080519115158252519081900360200190f35b341561018457fe5b61018c610501565b60408051918252519081900360200190f35b34156101a657fe5b610168600160a060020a0360043581169060243516604435610507565b604080519115158252519081900360200190f35b34156101df57fe5b6101e761062e565b6040805160ff9092168252519081900360200190f35b341561020557fe5b6100c9610637565b60408051602080825283518183015283519192839290830191850190808383821561010f575b80518252602083111561010f57601f1990920191602091820191016100ef565b505050905090810190601f16801561013b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561029557fe5b61018c600160a060020a03600435166106c5565b60408051918252519081900360200190f35b34156102c357fe5b6102cb6106d7565b60408051600160a060020a039092168252519081900360200190f35b34156102ef57fe5b6100c96106e6565b60408051602080825283518183015283519192839290830191850190808383821561010f575b80518252602083111561010f57601f1990920191602091820191016100ef565b505050905090810190601f16801561013b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561037f57fe5b610396600160a060020a0360043516602435610771565b005b34156103a057fe5b604080516020600460443581810135601f8101849004840285018401909552848452610168948235600160a060020a031694602480359560649492939190920191819084018382808284375094965061084295505050505050565b604080519115158252519081900360200190f35b341561041757fe5b61018c600160a060020a036004358116906024351661097c565b60408051918252519081900360200190f35b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104c85780601f1061049d576101008083540402835291602001916104c8565b820191906000526020600020905b8154815290600101906020018083116104ab57829003601f168201915b505050505081565b600160a060020a03338116600090815260076020908152604080832093861683529290522081905560015b92915050565b60045481565b6000600160a060020a038316151561051f5760006000fd5b600160a060020a038416600090815260066020526040902054829010156105465760006000fd5b600160a060020a038316600090815260066020526040902054828101101561056e5760006000fd5b600160a060020a03808516600090815260076020908152604080832033909416835292905220548211156105a25760006000fd5b600160a060020a03808516600081815260066020908152604080832080548890039055878516808452818420805489019055848452600783528184203390961684529482529182902080548790039055815186815291517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35060015b9392505050565b60035460ff1681565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104c85780601f1061049d576101008083540402835291602001916104c8565b820191906000526020600020905b8154815290600101906020018083116104ab57829003601f168201915b505050505081565b60066020526000908152604090205481565b600554600160a060020a031681565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156104c85780601f1061049d576101008083540402835291602001916104c8565b820191906000526020600020905b8154815290600101906020018083116104ab57829003601f168201915b505050505081565b600160a060020a03821615156107875760006000fd5b600160a060020a033316600090815260066020526040902054819010156107ae5760006000fd5b600160a060020a03821660009081526006602052604090205481810110156107d65760006000fd5b600160a060020a03338116600081815260066020908152604080832080548790039055938616808352918490208054860190558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35b5050565b60008361084f81856104d0565b156109735780600160a060020a0316638f4ffcb1338630876040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018085600160a060020a0316600160a060020a0316815260200184815260200183600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360008314610913575b80518252602083111561091357601f1990920191602091820191016108f3565b505050905090810190601f16801561093f5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b151561095d57fe5b6102c65a03f1151561096b57fe5b505050600191505b5b509392505050565b6007602090815260009283526040808420909152908252902054815600a165627a7a72305820dfd8ea2a15374349f608e5bb9ef86d9de763c4b84d287e0c390001a776c0a97b0029"}