{"Runs": "200", "SwarmSource": "bzzr://26af1402b61a63d4480b1aa1abd50cf9770f97bd294dcf680a1947ea2bf62a53", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setReleaseAgent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"receiver\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"mintAgents\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"setMintAgent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"released\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintableSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"releaseAgent\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"releaseToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"MintingAgentChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.16+commit.d7661dd9", "ConstructorArguments": "", "SourceCode": "pragma solidity ^0.4.11;\r\n\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        uint256 c = a * b;\r\n        assert(a == 0 || c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal constant returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    /**\r\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n     * account.\r\n     */\r\n    function Ownable() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        assert(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n     * @param newOwner The address to transfer ownership to.\r\n     */\r\n    function transferOwnership(address newOwner) onlyOwner {\r\n        assert(newOwner != address(0));\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\n\r\n/*\r\n * @title Haltable\r\n * @dev Abstract contract that allows children to implement an emergency stop mechanism.\r\n * @dev Differs from Pausable by causing a throw when in halt mode.\r\n */\r\ncontract Haltable is Ownable {\r\n    bool public halted;\r\n\r\n    modifier stopInEmergency {\r\n        assert(!halted);\r\n        _;\r\n    }\r\n\r\n    modifier onlyInEmergency {\r\n        assert(halted);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Called by the owner on emergency, triggers stopped state.\r\n     */\r\n    function halt() external onlyOwner {\r\n        halted = true;\r\n    }\r\n\r\n    /**\r\n     * @dev Called by the owner on end of emergency, returns to normal state.\r\n     */\r\n    function unhalt() external onlyOwner onlyInEmergency {\r\n        halted = false;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/179\r\n */\r\ncontract ERC20Basic {\r\n    uint256 public totalSupply;\r\n    function balanceOf(address who) constant returns (uint256);\r\n    function transfer(address to, uint256 value) returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\n\r\n/**\r\n * @title Basic token\r\n * @dev Basic version of StandardToken, with no allowances.\r\n */\r\ncontract BasicToken is ERC20Basic {\r\n    using SafeMath for uint256;\r\n\r\n    mapping(address => uint256) balances;\r\n\r\n    /**\r\n     * @dev transfer token for a specified address\r\n     * @param _to The address to transfer to.\r\n     * @param _value The amount to be transferred.\r\n     */\r\n    function transfer(address _to, uint256 _value) onlyPayloadSize(2 * 32) returns (bool) {\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(_value);\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Gets the balance of the specified address.\r\n     * @param _owner The address to query the the balance of.\r\n     * @return An uint256 representing the amount owned by the passed address.\r\n     */\r\n    function balanceOf(address _owner) constant returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    /**\r\n     * @dev Fix for the ERC20 short address attack\r\n     * @dev see: http://vessenes.com/the-erc20-short-address-attack-explained/\r\n     * @dev see: https://www.reddit.com/r/ethereum/comments/63s917/worrysome_bug_exploit_with_erc20_token/dfwmhc3/\r\n     */\r\n    modifier onlyPayloadSize(uint size) {\r\n        assert (msg.data.length >= size + 4);\r\n        _;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 is ERC20Basic {\r\n    function allowance(address owner, address spender) constant returns (uint256);\r\n    function transferFrom(address from, address to, uint256 value) returns (bool);\r\n    function approve(address spender, uint256 value) returns (bool);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\n/**\r\n * @title Standard ERC20 token\r\n *\r\n * @dev Implementation of the basic standard token.\r\n * @dev https://github.com/ethereum/EIPs/issues/20\r\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\r\n */\r\ncontract StandardToken is ERC20, BasicToken {\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n\r\n    /**\r\n     * @dev Transfer tokens from one address to another\r\n     * @param _from address The address which you want to send tokens from\r\n     * @param _to address The address which you want to transfer to\r\n     * @param _value uint256 the amout of tokens to be transfered\r\n     */\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool) {\r\n        var _allowance = allowed[_from][msg.sender];\r\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\r\n        // assert (_value <= _allowance);\r\n        balances[_to] = balances[_to].add(_value);\r\n        balances[_from] = balances[_from].sub(_value);\r\n        allowed[_from][msg.sender] = _allowance.sub(_value);\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Aprove the passed address to spend the specified amount of tokens on behalf of msg.sender.\r\n     * @param _spender The address which will spend the funds.\r\n     * @param _value The amount of tokens to be spent.\r\n     */\r\n    function approve(address _spender, uint256 _value) returns (bool) {\r\n        // To change the approve amount you first have to reduce the addresses`\r\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\r\n        //  already 0 to mitigate the race condition described here:\r\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n        assert((_value == 0) || (allowed[msg.sender][_spender] == 0));\r\n\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\r\n     * @param _owner address The address which owns the funds.\r\n     * @param _spender address The address which will spend the funds.\r\n     * @return A uint256 specifing the amount of tokens still available for the spender.\r\n     */\r\n    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @title MintableToken\r\n * @dev Token that can be minted by another contract until the defined cap is reached.\r\n * @dev Based on https://github.com/TokenMarketNet/ico/blob/master/contracts/MintableToken.sol\r\n */\r\ncontract MintableToken is StandardToken, Ownable {\r\n    using SafeMath for uint;\r\n\r\n    uint256 public mintableSupply;\r\n\r\n    /**\r\n     * @dev List of agents that are allowed to create new tokens\r\n     */\r\n    mapping(address => bool) public mintAgents;\r\n\r\n    event MintingAgentChanged(address addr, bool state);\r\n\r\n    /**\r\n     * @dev Mint token from pool of mintable tokens.\r\n     * @dev Only callable by the mint-agent.\r\n     */\r\n    function mint(address receiver, uint256 amount) onlyPayloadSize(2 * 32) onlyMintAgent canMint public {\r\n        mintableSupply = mintableSupply.sub(amount);\r\n        balances[receiver] = balances[receiver].add(amount);\r\n        // This will make the mint transaction appear in EtherScan.io\r\n        // We can remove this after there is a standardized minting event\r\n        Transfer(0, receiver, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Owner can allow a crowdsale contract to mint new tokens.\r\n     */\r\n    function setMintAgent(address addr, bool state) onlyOwner canMint public {\r\n        mintAgents[addr] = state;\r\n        MintingAgentChanged(addr, state);\r\n    }\r\n\r\n    modifier onlyMintAgent() {\r\n        // Only the mint-agent is allowed to mint new tokens\r\n        assert (mintAgents[msg.sender]);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Make sure we are not done yet.\r\n     */\r\n    modifier canMint() {\r\n        assert(mintableSupply > 0);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Fix for the ERC20 short address attack\r\n     * @dev see: http://vessenes.com/the-erc20-short-address-attack-explained/\r\n     * @dev see: https://www.reddit.com/r/ethereum/comments/63s917/worrysome_bug_exploit_with_erc20_token/dfwmhc3/\r\n     */\r\n    modifier onlyPayloadSize(uint size) {\r\n        assert (msg.data.length >= size + 4);\r\n        _;\r\n    }\r\n}\r\n\r\n\r\n/*\r\n * @title ReleasableToken\r\n * @dev Token that may not be transfered until it was released.\r\n */\r\ncontract ReleasableToken is ERC20, Ownable {\r\n    address public releaseAgent;\r\n    bool public released = false;\r\n\r\n    /**\r\n     * @dev One way function to release the tokens to the wild.\r\n     */\r\n    function releaseToken() public onlyReleaseAgent {\r\n        released = true;\r\n    }\r\n\r\n    /**\r\n     * @dev Set the contract that may call the release function.\r\n     */\r\n    function setReleaseAgent(address addr) onlyOwner inReleaseState(false) public {\r\n        releaseAgent = addr;\r\n    }\r\n\r\n    function transfer(address _to, uint _value) inReleaseState(true) returns (bool) {\r\n        return super.transfer(_to, _value);\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint _value) inReleaseState(true) returns (bool) {\r\n        return super.transferFrom(_from, _to, _value);\r\n    }\r\n\r\n    /**\r\n     * @dev The function can be called only before or after the tokens have been releasesd\r\n     */\r\n    modifier inReleaseState(bool releaseState) {\r\n        assert(releaseState == released);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev The function can be called only by a whitelisted release agent.\r\n     */\r\n    modifier onlyReleaseAgent() {\r\n        assert(msg.sender == releaseAgent);\r\n        _;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @title EventChain\r\n * @dev Contract for the EventChain token.\r\n */\r\ncontract EventChain is ReleasableToken, MintableToken {\r\n    string public name = \"EventChain\";\r\n    string public symbol = \"EVC\";\r\n    uint8 public decimals = 18;\r\n    \r\n    function EventChain() {\r\n        // total supply is 84 million tokens\r\n        totalSupply = 84000000 ether;\r\n        mintableSupply = totalSupply;\r\n        // allow deployer to unlock token transfer and mint tokens\r\n        setReleaseAgent(msg.sender);\r\n        setMintAgent(msg.sender, true);\r\n    }\r\n}", "OptimizationUsed": "1", "ContractName": "EventChain", "ByteCode": "0x606060405236156101045763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610109578063095ea7b31461019457806318160ddd146101ca57806323b872dd146101ef57806329ff4f531461022b578063313ce5671461024c57806340c10f191461027557806342c1867b1461029957806343214675146102cc57806370a08231146102f25780638da5cb5b1461032357806395d89b411461035257806396132521146103dd578063a9059cbb14610404578063cc5c095c1461043a578063d1f276d31461045f578063dd62ed3e1461048e578063ec715a31146104c5578063f2fde38b146104da575b600080fd5b341561011457600080fd5b61011c6104fb565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101595780820151818401525b602001610140565b50505050905090810190601f1680156101865780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561019f57600080fd5b6101b6600160a060020a0360043516602435610599565b604051901515815260200160405180910390f35b34156101d557600080fd5b6101dd61063d565b60405190815260200160405180910390f35b34156101fa57600080fd5b6101b6600160a060020a0360043581169060243516604435610643565b604051901515815260200160405180910390f35b341561023657600080fd5b61024a600160a060020a0360043516610677565b005b341561025757600080fd5b61025f6106d5565b60405160ff909116815260200160405180910390f35b341561028057600080fd5b61024a600160a060020a03600435166024356106de565b005b34156102a457600080fd5b6101b6600160a060020a03600435166107b6565b604051901515815260200160405180910390f35b34156102d757600080fd5b61024a600160a060020a036004351660243515156107cb565b005b34156102fd57600080fd5b6101dd600160a060020a0360043516610864565b60405190815260200160405180910390f35b341561032e57600080fd5b610336610883565b604051600160a060020a03909116815260200160405180910390f35b341561035d57600080fd5b61011c610892565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101595780820151818401525b602001610140565b50505050905090810190601f1680156101865780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156103e857600080fd5b6101b6610930565b604051901515815260200160405180910390f35b341561040f57600080fd5b6101b6600160a060020a0360043516602435610940565b604051901515815260200160405180910390f35b341561044557600080fd5b6101dd610972565b60405190815260200160405180910390f35b341561046a57600080fd5b610336610978565b604051600160a060020a03909116815260200160405180910390f35b341561049957600080fd5b6101dd600160a060020a0360043581169060243516610987565b60405190815260200160405180910390f35b34156104d057600080fd5b61024a6109b4565b005b34156104e557600080fd5b61024a600160a060020a03600435166109f4565b005b60078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105915780601f1061056657610100808354040283529160200191610591565b820191906000526020600020905b81548152906001019060200180831161057457829003601f168201915b505050505081565b60008115806105cb5750600160a060020a03338116600090815260026020908152604080832093871683529290522054155b15156105d357fe5b600160a060020a03338116600081815260026020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b60005481565b60045460009060019060a060020a900460ff161515811461066057fe5b61066b858585610a4b565b91505b5b509392505050565b60035433600160a060020a0390811691161461068f57fe5b60045460009060a060020a900460ff16156106a657fe5b6004805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0384161790555b5b505b50565b60095460ff1681565b604060443610156106eb57fe5b600160a060020a03331660009081526006602052604090205460ff16151561070f57fe5b6005546000901161071c57fe5b60055461072f908363ffffffff610b6016565b600555600160a060020a03831660009081526001602052604090205461075b908363ffffffff610b7716565b600160a060020a0384166000818152600160205260408082209390935590917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35b5b5b5b505050565b60066020526000908152604090205460ff1681565b60035433600160a060020a039081169116146107e357fe5b600554600090116107f057fe5b600160a060020a03821660009081526006602052604090819020805460ff19168315151790557f4b0adf6c802794c7dde28a08a4e07131abcff3bf9603cd71f14f90bec7865efa908390839051600160a060020a039092168252151560208201526040908101905180910390a15b5b5b5050565b600160a060020a0381166000908152600160205260409020545b919050565b600354600160a060020a031681565b60088054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105915780601f1061056657610100808354040283529160200191610591565b820191906000526020600020905b81548152906001019060200180831161057457829003601f168201915b505050505081565b60045460a060020a900460ff1681565b60045460009060019060a060020a900460ff161515811461095d57fe5b6109678484610b91565b91505b5b5092915050565b60055481565b600454600160a060020a031681565b600160a060020a038083166000908152600260209081526040808320938516835292905220545b92915050565b60045433600160a060020a039081169116146109cc57fe5b6004805474ff0000000000000000000000000000000000000000191660a060020a1790555b5b565b60035433600160a060020a03908116911614610a0c57fe5b600160a060020a0381161515610a1e57fe5b6003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b50565b600160a060020a038084166000908152600260209081526040808320338516845282528083205493861683526001909152812054909190610a92908463ffffffff610b7716565b600160a060020a038086166000908152600160205260408082209390935590871681522054610ac7908463ffffffff610b6016565b600160a060020a038616600090815260016020526040902055610af0818463ffffffff610b6016565b600160a060020a03808716600081815260026020908152604080832033861684529091529081902093909355908616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9086905190815260200160405180910390a3600191505b509392505050565b600082821115610b6c57fe5b508082035b92915050565b600082820183811015610b8657fe5b8091505b5092915050565b600060406044361015610ba057fe5b600160a060020a033316600090815260016020526040902054610bc9908463ffffffff610b6016565b600160a060020a033381166000908152600160205260408082209390935590861681522054610bfe908463ffffffff610b7716565b600160a060020a0380861660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9086905190815260200160405180910390a3600191505b5b50929150505600a165627a7a7230582026af1402b61a63d4480b1aa1abd50cf9770f97bd294dcf680a1947ea2bf62a530029"}