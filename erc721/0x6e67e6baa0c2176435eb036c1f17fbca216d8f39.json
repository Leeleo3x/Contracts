{"Runs": "200", "SwarmSource": "bzzr://3c724b84389d33052724e2cd2402fa77e7d182fb2fd8d0de7b998400be01d924", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementsERC721\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"setBeneficiary\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"OfficialApps\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SaleAuction\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"GetStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"nukeApps\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Ships\",\"outputs\":[{\"name\":\"appearance\",\"type\":\"uint128\"},{\"name\":\"profile\",\"type\":\"uint32\"},{\"name\":\"firepower\",\"type\":\"uint8\"},{\"name\":\"armor\",\"type\":\"uint8\"},{\"name\":\"hitrate\",\"type\":\"uint8\"},{\"name\":\"speed\",\"type\":\"uint8\"},{\"name\":\"duration\",\"type\":\"uint8\"},{\"name\":\"shiptype\",\"type\":\"uint8\"},{\"name\":\"level\",\"type\":\"uint8\"},{\"name\":\"status\",\"type\":\"uint8\"},{\"name\":\"specials\",\"type\":\"uint16\"},{\"name\":\"extend\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ShipIdToApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"_balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_status\",\"type\":\"uint256\"}],\"name\":\"SetStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ShipIdToStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"takeOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_sale\",\"type\":\"address\"}],\"name\":\"setSaleAuction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_app\",\"type\":\"address\"}],\"name\":\"AddOfficialApps\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"GetShipsByOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Getwsic\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wsic\",\"type\":\"uint256\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"updateship\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ShipIdToOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wsic\",\"type\":\"uint256\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"createship\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"shipId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"wsic\",\"type\":\"uint256\"}],\"name\":\"NewShip\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"shipId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newStatus\",\"type\":\"uint8\"}],\"name\":\"ShipStatusUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"shipId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"wsic\",\"type\":\"uint256\"}],\"name\":\"ShipStructUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.21+commit.dfe3193c", "ConstructorArguments": "", "SourceCode": "pragma solidity ^0.4.18;\r\npragma solidity ^0.4.18;\r\n\r\n//It's open source,but... ;) Good luck! :P\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n\r\n    /**\r\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n     * account.\r\n     */\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n     * @param newOwner The address to transfer ownership to.\r\n     */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n\r\n}\r\n\r\ncontract Beneficiary is Ownable {\r\n\r\n    address public beneficiary;\r\n\r\n    function setBeneficiary(address _beneficiary) onlyOwner public {\r\n        beneficiary = _beneficiary;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\ncontract Pausable is Beneficiary{\r\n    bool public paused = false;\r\n\r\n    modifier whenNotPaused() {\r\n        require(!paused);\r\n        _;\r\n    }\r\n\r\n    modifier whenPaused {\r\n        require(paused);\r\n        _;\r\n    }\r\n\r\n    function pause() external onlyOwner whenNotPaused {\r\n        paused = true;\r\n    }\r\n\r\n    function unpause() public onlyOwner whenPaused {\r\n        // can't unpause if contract was upgraded\r\n        paused = false;\r\n    }\r\n} \r\n\r\nlibrary SafeMath {\r\n\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    assert(c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\n\r\ncontract WarshipAccess is Pausable{\r\n\taddress[] public OfficialApps;\r\n\t//Official games & services\r\n\r\n\tfunction AddOfficialApps(address _app) onlyOwner public{\r\n\t\trequire(_app != address(0));\r\n\t\tOfficialApps.push(_app);\r\n\t}\r\n\t\r\n\tfunction nukeApps()onlyOwner public{\r\n\t    for(uint i = 0; i < OfficialApps.length; i++){\r\n\t\t\tdelete OfficialApps[i];\r\n\t        \r\n\t    }\r\n\t}\r\n\r\n\tfunction _isOfficialApps(address _app) internal view returns (bool){\r\n\t\tfor(uint i = 0; i < OfficialApps.length; i++){\r\n\t\t\tif( _app == OfficialApps[i] ){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tmodifier OnlyOfficialApps {\r\n        require(_isOfficialApps(msg.sender));\r\n        _;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n//main contract for warship\r\n\r\ncontract WarshipMain is WarshipAccess{\r\n    \r\n    using SafeMath for uint256;\r\n\r\n    struct Warship {\r\n        uint128 appearance; //wsic code for producing warship outlook\r\n        uint32 profile;//profile including ship names\r\n        uint8 firepower;\r\n        uint8 armor;\r\n        uint8 hitrate;\r\n        uint8 speed;\r\n        uint8 duration;//ship strength\r\n        uint8 shiptype;//ship class\r\n        uint8 level;//strengthening level\r\n        uint8 status;//how it was built\r\n        uint16 specials;//16 specials\r\n        uint16 extend;\r\n    }//128+32+8*8+16*2=256\r\n\r\n    Warship[] public Ships;\r\n    mapping (uint256 => address) public ShipIdToOwner;\r\n    //Supporting 2^32 ships at most.\r\n    mapping (address => uint256) OwnerShipCount;\r\n    //Used internally inside balanceOf() to resolve ownership count.\r\n    mapping (uint256 => address) public ShipIdToApproval;\r\n    //Each ship can only have one approved address for transfer at any time.\r\n    mapping (uint256 => uint256) public ShipIdToStatus;\r\n    //0 for sunk, 1 for live, 2 for min_broken, 3 for max_broken, 4 for on_marketing, 5 for in_pvp\r\n    //256 statuses at most.\r\n    \r\n\r\n    //SaleAuction\r\n    address public SaleAuction;\r\n    function setSaleAuction(address _sale) onlyOwner public{\r\n        require(_sale != address(0));\r\n        SaleAuction = _sale;\r\n    }\r\n\r\n\r\n\r\n    //event emitted when ship created or updated\r\n    event NewShip(address indexed owner, uint indexed shipId, uint256 wsic);\r\n    event ShipStatusUpdate(uint indexed shipId, uint8 newStatus);\r\n    event ShipStructUpdate(uint indexed shipId, uint256 wsic);\r\n\r\n    //----erc721 interface\r\n    bool public implementsERC721 = true;\r\n    string public constant name = \"EtherWarship\";\r\n    string public constant symbol = \"SHIP\";\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId); \r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n    function balanceOf(address _owner) public view returns (uint256 _balance){\r\n        return OwnerShipCount[_owner];\r\n    }\r\n    function ownerOf(uint256 _tokenId) public view returns (address _owner){\r\n        return ShipIdToOwner[_tokenId];\r\n    }\r\n    //function transfer(address _to, uint256 _tokenId) public;   //see below\r\n    //function approve(address _to, uint256 _tokenId) public;    //see below\r\n    //function takeOwnership(uint256 _tokenId) public;      //see below\r\n    //----erc721 interface\r\n\r\n\r\n    \r\n\r\n    //check if owned/approved\r\n    function _owns(address _claimant, uint256 _tokenId) internal view returns (bool) {\r\n        return ShipIdToOwner[_tokenId] == _claimant;\r\n    }\r\n    function _approvedFor(address _claimant, uint256 _tokenId) internal view returns (bool) {\r\n        return ShipIdToApproval[_tokenId] == _claimant;\r\n    }\r\n\r\n\r\n    /// @dev Assigns ownership of a specific ship to an address.\r\n    function _transfer(address _from, address _to, uint256 _tokenId) internal {\r\n        OwnerShipCount[_to]=OwnerShipCount[_to].add(1);\r\n        ShipIdToOwner[_tokenId] = _to;\r\n        if (_from != address(0)) {\r\n            OwnerShipCount[_from]=OwnerShipCount[_from].sub(1);\r\n            // clear any previously approved ownership exchange\r\n            delete ShipIdToApproval[_tokenId];\r\n        }\r\n        Transfer(_from, _to, _tokenId);\r\n    }\r\n\r\n    /// @dev Marks an address as being approved for transferFrom(), overwriting any previous\r\n    ///  approval. Setting _approved to address(0) clears all transfer approval.\r\n    function _approve(uint256 _tokenId, address _approved) internal {\r\n        ShipIdToApproval[_tokenId] = _approved;\r\n    }\r\n\r\n    /// @dev Required for ERC-721 compliance.\r\n    function transfer(address _to, uint256 _tokenId) external whenNotPaused {\r\n        // Safety check to prevent against an unexpected 0x0 default.\r\n        require(_to != address(0));\r\n        // Disallow transfers to this contract to prevent accidental misuse.\r\n        require(_to != address(this));\r\n        // You can only send your own cat.\r\n        require(_owns(msg.sender, _tokenId));\r\n        // Reassign ownership, clear pending approvals, emit Transfer event.\r\n        require(ShipIdToStatus[_tokenId]==1||msg.sender==SaleAuction);\r\n        // Ship must be alive.\r\n\r\n        if(msg.sender == SaleAuction){\r\n            ShipIdToStatus[_tokenId] = 1;\r\n        }\r\n\r\n        _transfer(msg.sender, _to, _tokenId);\r\n\r\n    }\r\n\r\n    /// @dev Required for ERC-721 compliance.\r\n    function approve(address _to, uint256 _tokenId) external whenNotPaused {\r\n        // Only an owner can grant transfer approval.\r\n        require(_owns(msg.sender, _tokenId));\r\n        // Register the approval (replacing any previous approval).\r\n        _approve(_tokenId, _to);\r\n        // Emit approval event.\r\n        Approval(msg.sender, _to, _tokenId);\r\n    }\r\n\r\n    /// @dev Required for ERC-721 compliance.\r\n    function transferFrom(address _from, address _to, uint256 _tokenId) external whenNotPaused {\r\n        // Safety check to prevent against an unexpected 0x0 default.\r\n        require(_to != address(0));\r\n        // Disallow transfers to this contract to prevent accidental misuse.\r\n        require(_to != address(this));\r\n        // Check for approval and valid ownersh ip\r\n        //p.s. SaleAuction can call transferFrom for anyone\r\n        require(_approvedFor(msg.sender, _tokenId)||msg.sender==SaleAuction); \r\n\r\n        require(_owns(_from, _tokenId));\r\n\r\n        require(ShipIdToStatus[_tokenId]==1);\r\n        // Ship must be alive.\r\n\r\n        if(msg.sender == SaleAuction){\r\n            ShipIdToStatus[_tokenId] = 4;\r\n        }\r\n\r\n\r\n        // Reassign ownership (also clears pending approvals and emits Transfer event).\r\n        _transfer(_from, _to, _tokenId);\r\n    }\r\n    /// @dev Required for ERC-721 compliance.\r\n    function totalSupply() public view returns (uint) {\r\n        return Ships.length;\r\n    }\r\n\r\n    /// @dev Required for ERC-721 compliance.\r\n    function takeOwnership(uint256 _tokenId) public {\r\n        // check approvals\r\n        require(ShipIdToApproval[_tokenId] == msg.sender);\r\n\r\n        require(ShipIdToStatus[_tokenId]==1);\r\n        // Ship must be alive.\r\n\r\n        _transfer(ownerOf(_tokenId), msg.sender, _tokenId);\r\n    }\r\n\r\n\r\n    //------------all ERC-721 requirement are present----------------------\r\n\r\n\r\n\r\n\r\n\r\n    /// @dev uint256 WSIC to warship structure \r\n    function _translateWSIC (uint256 _wsic) internal pure returns(Warship){\r\n  //    uint128 _appearance = uint128(_wsic >> 128);\r\n  //    uint32 _profile = uint32((_wsic>>96)&0xffffffff);\r\n  //    uint8 _firepower = uint8((_wsic>>88)&0xff);\r\n        // uint8 _armor = uint8((_wsic>>80)&0xff);\r\n        // uint8 _hitrate = uint8((_wsic>>72)&0xff);\r\n        // uint8 _speed = uint8((_wsic>>64)&0xff);\r\n        // uint8 _duration = uint8((_wsic>>56)&0xff);\r\n        // uint8 _shiptype = uint8((_wsic>>48)&0xff);\r\n        // uint8 _level = uint8((_wsic>>40)&0xff);\r\n        // uint8 _status = uint8((_wsic>>32)&0xff);\r\n        // uint16 _specials = uint16((_wsic>>16)&0xffff);\r\n        // uint16 _extend = uint16(_wsic&0xffff);\r\n        Warship memory  _ship = Warship(uint128(_wsic >> 128), uint32((_wsic>>96)&0xffffffff), uint8((_wsic>>88)&0xff), uint8((_wsic>>80)&0xff), uint8((_wsic>>72)&0xff), uint8((_wsic>>64)&0xff),\r\n         uint8((_wsic>>56)&0xff), uint8((_wsic>>48)&0xff), uint8((_wsic>>40)&0xff), uint8((_wsic>>32)&0xff),  uint16((_wsic>>16)&0xffff), uint16(_wsic&0xffff));\r\n        return _ship;\r\n    }\r\n    function _encodeWSIC(Warship _ship) internal pure returns(uint256){\r\n        uint256 _wsic = 0x00;\r\n        _wsic = _wsic ^ (uint256(_ship.appearance) << 128);\r\n        _wsic = _wsic ^ (uint256(_ship.profile) << 96);\r\n        _wsic = _wsic ^ (uint256(_ship.firepower) << 88);\r\n        _wsic = _wsic ^ (uint256(_ship.armor) << 80);\r\n        _wsic = _wsic ^ (uint256(_ship.hitrate) << 72);\r\n        _wsic = _wsic ^ (uint256(_ship.speed) << 64);\r\n        _wsic = _wsic ^ (uint256(_ship.duration) << 56);\r\n        _wsic = _wsic ^ (uint256(_ship.shiptype) << 48);\r\n        _wsic = _wsic ^ (uint256(_ship.level) << 40);\r\n        _wsic = _wsic ^ (uint256(_ship.status) << 32);\r\n        _wsic = _wsic ^ (uint256(_ship.specials) << 16);\r\n        _wsic = _wsic ^ (uint256(_ship.extend));\r\n        return _wsic;\r\n    }\r\n\r\n\r\n    \r\n\r\n    // @dev An internal method that creates a new ship and stores it. This\r\n    ///  method doesn't do any checking and should only be called when the\r\n    ///  input data is known to be valid. \r\n    function _createship (uint256 _wsic, address _owner) internal returns(uint){\r\n        //wsic2ship\r\n        Warship memory _warship = _translateWSIC(_wsic);\r\n        //push into ships\r\n        uint256 newshipId = Ships.push(_warship) - 1;\r\n        //emit event\r\n        NewShip(_owner, newshipId, _wsic);\r\n        //set to alive\r\n        ShipIdToStatus[newshipId] = 1;\r\n        //transfer 0 to owner\r\n        _transfer(0, _owner, newshipId);\r\n        //\"Where is the counter?Repeat that.Where is the counter?Everyone want to know it.----Troll XI\"\r\n       \r\n        \r\n\r\n        return newshipId; \r\n    }\r\n\r\n    /// @dev An internal method that update a new ship. \r\n    function _update (uint256 _wsic, uint256 _tokenId) internal returns(bool){\r\n        //check if id is valid\r\n        require(_tokenId <= totalSupply());\r\n        //wsic2ship\r\n        Warship memory _warship = _translateWSIC(_wsic);\r\n        //emit event\r\n        ShipStructUpdate(_tokenId, _wsic);\r\n        //update\r\n        Ships[_tokenId] = _warship;\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    /// @dev Allow official apps to create ship.\r\n    function createship(uint256 _wsic, address _owner) external OnlyOfficialApps returns(uint){\r\n        //check address\r\n        require(_owner != address(0));\r\n        return _createship(_wsic, _owner);\r\n    }\r\n\r\n    /// @dev Allow official apps to update ship.\r\n    function updateship (uint256 _wsic, uint256 _tokenId) external OnlyOfficialApps returns(bool){\r\n        return _update(_wsic, _tokenId);\r\n    }\r\n    /// @dev Allow official apps to update ship.\r\n    function SetStatus(uint256 _tokenId, uint256 _status) external OnlyOfficialApps returns(bool){\r\n        require(uint8(_status)==_status);\r\n        ShipIdToStatus[_tokenId] = _status;\r\n        ShipStatusUpdate(_tokenId, uint8(_status));\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    /// @dev Get wsic code for a ship.\r\n    function Getwsic(uint256 _tokenId) external view returns(uint256){\r\n        //check if id is valid\r\n        require(_tokenId < Ships.length);\r\n        uint256 _wsic = _encodeWSIC(Ships[_tokenId]);\r\n        return _wsic;\r\n    }\r\n\r\n    /// @dev Get ships for a specified user.\r\n    function GetShipsByOwner(address _owner) external view returns(uint[]) {\r\n    uint[] memory result = new uint[](OwnerShipCount[_owner]);\r\n    uint counter = 0;\r\n    for (uint i = 0; i < Ships.length; i++) {\r\n          if (ShipIdToOwner[i] == _owner) {\r\n            result[counter] = i;\r\n            counter++;\r\n          }\r\n        }\r\n    return result;\r\n    }\r\n\r\n    /// @dev Get status\r\n    function GetStatus(uint256 _tokenId) external view returns(uint){\r\n        return ShipIdToStatus[_tokenId];\r\n    }\r\n\r\n\r\n\r\n}", "OptimizationUsed": "0", "ContractName": "WarshipMain", "ByteCode": "0x606060405260043610610196576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461019b578063095ea7b3146102295780631051db341461026b57806318160ddd146102985780631c31f710146102c15780632075d284146102fa57806323b872dd1461035d578063349296a5146103be57806338af3eed146104135780633f4ba83a146104685780633f8126d51461047d57806343ca86c6146104b45780635c975abb146104c95780636352211e146104f65780636a0970b5146105595780636b77824d1461064d57806370a08231146106b05780638456cb59146106fd57806386de99dd146107125780638da5cb5b1461075657806395d89b41146107ab578063a9059cbb14610839578063adc0bf211461087b578063b2e6ceeb146108b2578063b527b0a6146108d5578063b90cec6d1461090e578063bef90b9414610947578063c30ed0a4146109d5578063d486769414610a0c578063e52a841814610a50578063f2fde38b14610ab3578063fc756c6914610aec575b600080fd5b34156101a657600080fd5b6101ae610b42565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101ee5780820151818401526020810190506101d3565b50505050905090810190601f16801561021b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561023457600080fd5b610269600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610b7b565b005b341561027657600080fd5b61027e610c15565b604051808215151515815260200191505060405180910390f35b34156102a357600080fd5b6102ab610c28565b6040518082815260200191505060405180910390f35b34156102cc57600080fd5b6102f8600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610c35565b005b341561030557600080fd5b61031b6004808035906020019091905050610cd4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561036857600080fd5b6103bc600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610d13565b005b34156103c957600080fd5b6103d1610eca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561041e57600080fd5b610426610ef0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561047357600080fd5b61047b610f16565b005b341561048857600080fd5b61049e6004808035906020019091905050610fa9565b6040518082815260200191505060405180910390f35b34156104bf57600080fd5b6104c7610fc6565b005b34156104d457600080fd5b6104dc611082565b604051808215151515815260200191505060405180910390f35b341561050157600080fd5b6105176004808035906020019091905050611095565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561056457600080fd5b61057a60048080359060200190919050506110d2565b604051808d6fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020018c63ffffffff1663ffffffff1681526020018b60ff1660ff1681526020018a60ff1660ff1681526020018960ff1660ff1681526020018860ff1660ff1681526020018760ff1660ff1681526020018660ff1660ff1681526020018560ff1660ff1681526020018460ff1660ff1681526020018361ffff1661ffff1681526020018261ffff1661ffff1681526020019c5050505050505050505050505060405180910390f35b341561065857600080fd5b61066e60048080359060200190919050506111ee565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156106bb57600080fd5b6106e7600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611221565b6040518082815260200191505060405180910390f35b341561070857600080fd5b61071061126a565b005b341561071d57600080fd5b61073c60048080359060200190919080359060200190919050506112fd565b604051808215151515815260200191505060405180910390f35b341561076157600080fd5b610769611384565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156107b657600080fd5b6107be6113a9565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107fe5780820151818401526020810190506107e3565b50505050905090810190601f16801561082b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561084457600080fd5b610879600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506113e2565b005b341561088657600080fd5b61089c6004808035906020019091905050611583565b6040518082815260200191505060405180910390f35b34156108bd57600080fd5b6108d3600480803590602001909190505061159b565b005b34156108e057600080fd5b61090c600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611640565b005b341561091957600080fd5b610945600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061171b565b005b341561095257600080fd5b61097e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611818565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156109c15780820151818401526020810190506109a6565b505050509050019250505060405180910390f35b34156109e057600080fd5b6109f66004808035906020019091905050611946565b6040518082815260200191505060405180910390f35b3415610a1757600080fd5b610a366004808035906020019091908035906020019091905050611b2e565b604051808215151515815260200191505060405180910390f35b3415610a5b57600080fd5b610a716004808035906020019091905050611b56565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610abe57600080fd5b610aea600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611b89565b005b3415610af757600080fd5b610b2c600480803590602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611cde565b6040518082815260200191505060405180910390f35b6040805190810160405280600c81526020017f457468657257617273686970000000000000000000000000000000000000000081525081565b600160149054906101000a900460ff16151515610b9757600080fd5b610ba13382611d42565b1515610bac57600080fd5b610bb68183611dae565b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600860149054906101000a900460ff1681565b6000600380549050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c9057600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600281815481101515610ce357fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160149054906101000a900460ff16151515610d2f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610d6b57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610da657600080fd5b610db03382611e04565b80610e085750600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515610e1357600080fd5b610e1d8382611d42565b1515610e2857600080fd5b60016007600083815260200190815260200160002054141515610e4a57600080fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610eba57600460076000838152602001908152602001600020819055505b610ec5838383611e70565b505050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f7157600080fd5b600160149054906101000a900460ff161515610f8c57600080fd5b6000600160146101000a81548160ff021916908315150217905550565b600060076000838152602001908152602001600020549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561102357600080fd5b600090505b60028054905081101561107f5760028181548110151561104457fe5b906000526020600020900160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690558080600101915050611028565b50565b600160149054906101000a900460ff1681565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6003818154811015156110e157fe5b90600052602060002090016000915090508060000160009054906101000a90046fffffffffffffffffffffffffffffffff16908060000160109054906101000a900463ffffffff16908060000160149054906101000a900460ff16908060000160159054906101000a900460ff16908060000160169054906101000a900460ff16908060000160179054906101000a900460ff16908060000160189054906101000a900460ff16908060000160199054906101000a900460ff169080600001601a9054906101000a900460ff169080600001601b9054906101000a900460ff169080600001601c9054906101000a900461ffff169080600001601e9054906101000a900461ffff1690508c565b60066020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112c557600080fd5b600160149054906101000a900460ff161515156112e157600080fd5b60018060146101000a81548160ff021916908315150217905550565b6000611308336120bb565b151561131357600080fd5b818260ff1614151561132457600080fd5b816007600085815260200190815260200160002081905550827fa50847596974744a7fc539d5efb84c8b8425e6a0ad97421536f1e8a1bbc5186b83604051808260ff1660ff16815260200191505060405180910390a26001905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040805190810160405280600481526020017f534849500000000000000000000000000000000000000000000000000000000081525081565b600160149054906101000a900460ff161515156113fe57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561143a57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561147557600080fd5b61147f3382611d42565b151561148a57600080fd5b6001600760008381526020019081526020016000205414806114f95750600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561150457600080fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561157457600160076000838152602001908152602001600020819055505b61157f338383611e70565b5050565b60076020528060005260406000206000915090505481565b3373ffffffffffffffffffffffffffffffffffffffff166006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561160857600080fd5b6001600760008381526020019081526020016000205414151561162a57600080fd5b61163d61163682611095565b3383611e70565b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561169b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156116d757600080fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561177657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156117b257600080fd5b600280548060010182816117c6919061287f565b9160005260206000209001600083909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6118206128ab565b6118286128ab565b600080600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518059106118785750595b9080825280602002602001820160405250925060009150600090505b60038054905081101561193b578473ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561192e5780838381518110151561191757fe5b906020019060200201818152505081806001019250505b8080600101915050611894565b829350505050919050565b6000806003805490508310151561195c57600080fd5b611b2360038481548110151561196e57fe5b906000526020600020900161018060405190810160405290816000820160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020016000820160109054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160149054906101000a900460ff1660ff1660ff1681526020016000820160159054906101000a900460ff1660ff1660ff1681526020016000820160169054906101000a900460ff1660ff1660ff1681526020016000820160179054906101000a900460ff1660ff1660ff1681526020016000820160189054906101000a900460ff1660ff1660ff1681526020016000820160199054906101000a900460ff1660ff1660ff16815260200160008201601a9054906101000a900460ff1660ff1660ff16815260200160008201601b9054906101000a900460ff1660ff1660ff16815260200160008201601c9054906101000a900461ffff1661ffff1661ffff16815260200160008201601e9054906101000a900461ffff1661ffff1661ffff168152505061215f565b905080915050919050565b6000611b39336120bb565b1515611b4457600080fd5b611b4e8383612264565b905092915050565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611be457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611c2057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611ce9336120bb565b1515611cf457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611d3057600080fd5b611d3a83836124a8565b905092915050565b60008273ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b806006600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008273ffffffffffffffffffffffffffffffffffffffff166006600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b611ec36001600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461272490919063ffffffff16565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151561205b57611fe16001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461274290919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506006600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600080600090505b600280549050811015612154576002818154811015156120df57fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156121475760019150612159565b80806001019150506120c3565b600091505b50919050565b60008060009050608083600001516fffffffffffffffffffffffffffffffff169060020a02811890506060836020015163ffffffff169060020a02811890506058836040015160ff169060020a02811890506050836060015160ff169060020a02811890506048836080015160ff169060020a028118905060408360a0015160ff169060020a028118905060388360c0015160ff169060020a028118905060308360e0015160ff169060020a0281189050602883610100015160ff169060020a0281189050602083610120015160ff169060020a0281189050601083610140015161ffff169060020a028118905082610160015161ffff168118905080915050919050565b600061226e6128bf565b612276610c28565b831115151561228457600080fd5b61228d8461275b565b9050827f4d9c0b704e29f887329bafa71bf3ee0f4ff9acb17be93c794c4ea800dc3c325b856040518082815260200191505060405180910390a2806003848154811015156122d757fe5b906000526020600020900160008201518160000160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060208201518160000160106101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160146101000a81548160ff021916908360ff16021790555060608201518160000160156101000a81548160ff021916908360ff16021790555060808201518160000160166101000a81548160ff021916908360ff16021790555060a08201518160000160176101000a81548160ff021916908360ff16021790555060c08201518160000160186101000a81548160ff021916908360ff16021790555060e08201518160000160196101000a81548160ff021916908360ff16021790555061010082015181600001601a6101000a81548160ff021916908360ff16021790555061012082015181600001601b6101000a81548160ff021916908360ff16021790555061014082015181600001601c6101000a81548161ffff021916908361ffff16021790555061016082015181600001601e6101000a81548161ffff021916908361ffff160217905550905050600191505092915050565b60006124b26128bf565b60006124bd8561275b565b91506001600380548060010182816124d59190612959565b9160005260206000209001600085909190915060008201518160000160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555060208201518160000160106101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160146101000a81548160ff021916908360ff16021790555060608201518160000160156101000a81548160ff021916908360ff16021790555060808201518160000160166101000a81548160ff021916908360ff16021790555060a08201518160000160176101000a81548160ff021916908360ff16021790555060c08201518160000160186101000a81548160ff021916908360ff16021790555060e08201518160000160196101000a81548160ff021916908360ff16021790555061010082015181600001601a6101000a81548160ff021916908360ff16021790555061012082015181600001601b6101000a81548160ff021916908360ff16021790555061014082015181600001601c6101000a81548161ffff021916908361ffff16021790555061016082015181600001601e6101000a81548161ffff021916908361ffff1602179055505050039050808473ffffffffffffffffffffffffffffffffffffffff167f65100bf17091d1dc95c03ae299a819d6e46ada120af8478ec1f05b178aee1d6e876040518082815260200191505060405180910390a36001600760008381526020019081526020016000208190555061271960008583611e70565b809250505092915050565b600080828401905083811015151561273857fe5b8091505092915050565b600082821115151561275057fe5b818303905092915050565b6127636128bf565b61276b6128bf565b610180604051908101604052806080859060020a90046fffffffffffffffffffffffffffffffff16815260200163ffffffff6060869060020a90041663ffffffff16815260200160ff6058869060020a90041660ff16815260200160ff6050869060020a90041660ff16815260200160ff6048869060020a90041660ff16815260200160ff6040869060020a90041660ff16815260200160ff6038869060020a90041660ff16815260200160ff6030869060020a90041660ff16815260200160ff6028869060020a90041660ff16815260200160ff6020869060020a90041660ff16815260200161ffff6010869060020a90041661ffff16815260200161ffff851661ffff16815250905080915050919050565b8154818355818115116128a6578183600052602060002091820191016128a59190612985565b5b505050565b602060405190810160405280600081525090565b6101806040519081016040528060006fffffffffffffffffffffffffffffffff168152602001600063ffffffff168152602001600060ff168152602001600060ff168152602001600060ff168152602001600060ff168152602001600060ff168152602001600060ff168152602001600060ff168152602001600060ff168152602001600061ffff168152602001600061ffff1681525090565b8154818355818115116129805781836000526020600020918201910161297f91906129aa565b5b505050565b6129a791905b808211156129a357600081600090555060010161298b565b5090565b90565b612aca91905b80821115612ac657600080820160006101000a8154906fffffffffffffffffffffffffffffffff02191690556000820160106101000a81549063ffffffff02191690556000820160146101000a81549060ff02191690556000820160156101000a81549060ff02191690556000820160166101000a81549060ff02191690556000820160176101000a81549060ff02191690556000820160186101000a81549060ff02191690556000820160196101000a81549060ff021916905560008201601a6101000a81549060ff021916905560008201601b6101000a81549060ff021916905560008201601c6101000a81549061ffff021916905560008201601e6101000a81549061ffff0219169055506001016129b0565b5090565b905600a165627a7a723058203c724b84389d33052724e2cd2402fa77e7d182fb2fd8d0de7b998400be01d9240029"}