{"Runs": "200", "SwarmSource": "bzzr://0b92f4a92f6662883588a427cb57f970575daf04db1bcdfe0ab30e5e137ffa20", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"CLAWBACK_PERIOD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DATE_PRESALE_START\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BONUS_ICO_WEEK_TWO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BONUS_PRESALE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isTransferable\",\"outputs\":[{\"name\":\"transferable\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"icoEtherContributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"setAdminWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"adminWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_FUNDING_GOAL\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_CONTRIBUTION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_participant\",\"type\":\"address\"}],\"name\":\"computeAirdrop\",\"outputs\":[{\"name\":\"airdrop\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRESALE_ETH_CAP\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_participant\",\"type\":\"address\"}],\"name\":\"removeLock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimAirdrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DATE_PRESALE_END\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensClaimedAirdrop\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"COOLDOWN_PERIOD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_SUPPLY_MKT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_participant\",\"type\":\"address\"},{\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"mintMarketing\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"atNow\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensIssuedTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_CONTRIBUTION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DATE_ICO_START\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokensPerEth\",\"type\":\"uint256\"}],\"name\":\"updateTokensPerEth\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addresses\",\"type\":\"address[]\"},{\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"transferMultiple\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_participant\",\"type\":\"address\"}],\"name\":\"adminClaimAirdrop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"refundClaimed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"ownerClawback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DATE_ICO_END\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"BONUS_ICO_WEEK_ONE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_SUPPLY_ICO\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensPerEth\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"locked\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reclaimFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"icoTokensReceived\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_SUPPLY_TOTAL\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"airdropClaimed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensIssuedIco\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"setWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokensIssuedMkt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoThresholdReached\",\"outputs\":[{\"name\":\"thresholdReached\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addresses\",\"type\":\"address[]\"}],\"name\":\"adminClaimAirdropMultiple\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"icoEtherReceived\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_participants\",\"type\":\"address[]\"}],\"name\":\"removeLockMultiple\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newWallet\",\"type\":\"address\"}],\"name\":\"WalletUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_newAdminWallet\",\"type\":\"address\"}],\"name\":\"AdminWalletUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_tokensPerEth\",\"type\":\"uint256\"}],\"name\":\"TokensPerEthUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"TokensMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_etherContributed\",\"type\":\"uint256\"}],\"name\":\"TokensIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"Refund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"Airdrop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_participant\",\"type\":\"address\"}],\"name\":\"LockRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.16+commit.d7661dd9", "ConstructorArguments": "", "SourceCode": "pragma solidity ^0.4.16;\r\n\r\n// ----------------------------------------------------------------------------\r\n//\r\n// IDH indaHash token public sale contract\r\n//\r\n// For details, please visit: https://indahash.com/ico\r\n//\r\n// ----------------------------------------------------------------------------\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n//\r\n// SafeMath3\r\n//\r\n// Adapted from https://github.com/OpenZeppelin/zeppelin-solidity/blob/master/contracts/math/SafeMath.sol\r\n// (no need to implement division)\r\n//\r\n// ----------------------------------------------------------------------------\r\n\r\nlibrary SafeMath3 {\r\n\r\n  function mul(uint a, uint b) internal constant returns (uint c) {\r\n    c = a * b;\r\n    assert( a == 0 || c / a == b );\r\n  }\r\n\r\n  function sub(uint a, uint b) internal constant returns (uint) {\r\n    assert( b <= a );\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint a, uint b) internal constant returns (uint c) {\r\n    c = a + b;\r\n    assert( c >= a );\r\n  }\r\n\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n//\r\n// Owned contract\r\n//\r\n// ----------------------------------------------------------------------------\r\n\r\ncontract Owned {\r\n\r\n  address public owner;\r\n  address public newOwner;\r\n\r\n  // Events ---------------------------\r\n\r\n  event OwnershipTransferProposed(address indexed _from, address indexed _to);\r\n  event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n  // Modifier -------------------------\r\n\r\n  modifier onlyOwner {\r\n    require( msg.sender == owner );\r\n    _;\r\n  }\r\n\r\n  // Functions ------------------------\r\n\r\n  function Owned() {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  function transferOwnership(address _newOwner) onlyOwner {\r\n    require( _newOwner != owner );\r\n    require( _newOwner != address(0x0) );\r\n    OwnershipTransferProposed(owner, _newOwner);\r\n    newOwner = _newOwner;\r\n  }\r\n\r\n  function acceptOwnership() {\r\n    require(msg.sender == newOwner);\r\n    OwnershipTransferred(owner, newOwner);\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n//\r\n// ERC Token Standard #20 Interface\r\n// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\r\n//\r\n// ----------------------------------------------------------------------------\r\n\r\ncontract ERC20Interface {\r\n\r\n  // Events ---------------------------\r\n\r\n  event Transfer(address indexed _from, address indexed _to, uint _value);\r\n  event Approval(address indexed _owner, address indexed _spender, uint _value);\r\n\r\n  // Functions ------------------------\r\n\r\n  function totalSupply() constant returns (uint);\r\n  function balanceOf(address _owner) constant returns (uint balance);\r\n  function transfer(address _to, uint _value) returns (bool success);\r\n  function transferFrom(address _from, address _to, uint _value) returns (bool success);\r\n  function approve(address _spender, uint _value) returns (bool success);\r\n  function allowance(address _owner, address _spender) constant returns (uint remaining);\r\n\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n//\r\n// ERC Token Standard #20\r\n//\r\n// ----------------------------------------------------------------------------\r\n\r\ncontract ERC20Token is ERC20Interface, Owned {\r\n  \r\n  using SafeMath3 for uint;\r\n\r\n  uint public tokensIssuedTotal = 0;\r\n  mapping(address => uint) balances;\r\n  mapping(address => mapping (address => uint)) allowed;\r\n\r\n  // Functions ------------------------\r\n\r\n  /* Total token supply */\r\n\r\n  function totalSupply() constant returns (uint) {\r\n    return tokensIssuedTotal;\r\n  }\r\n\r\n  /* Get the account balance for an address */\r\n\r\n  function balanceOf(address _owner) constant returns (uint balance) {\r\n    return balances[_owner];\r\n  }\r\n\r\n  /* Transfer the balance from owner's account to another account */\r\n\r\n  function transfer(address _to, uint _amount) returns (bool success) {\r\n    // amount sent cannot exceed balance\r\n    require( balances[msg.sender] >= _amount );\r\n\r\n    // update balances\r\n    balances[msg.sender] = balances[msg.sender].sub(_amount);\r\n    balances[_to]        = balances[_to].add(_amount);\r\n\r\n    // log event\r\n    Transfer(msg.sender, _to, _amount);\r\n    return true;\r\n  }\r\n\r\n  /* Allow _spender to withdraw from your account up to _amount */\r\n\r\n  function approve(address _spender, uint _amount) returns (bool success) {\r\n    // approval amount cannot exceed the balance\r\n    require ( balances[msg.sender] >= _amount );\r\n      \r\n    // update allowed amount\r\n    allowed[msg.sender][_spender] = _amount;\r\n    \r\n    // log event\r\n    Approval(msg.sender, _spender, _amount);\r\n    return true;\r\n  }\r\n\r\n  /* Spender of tokens transfers tokens from the owner's balance */\r\n  /* Must be pre-approved by owner */\r\n\r\n  function transferFrom(address _from, address _to, uint _amount) returns (bool success) {\r\n    // balance checks\r\n    require( balances[_from] >= _amount );\r\n    require( allowed[_from][msg.sender] >= _amount );\r\n\r\n    // update balances and allowed amount\r\n    balances[_from]            = balances[_from].sub(_amount);\r\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\r\n    balances[_to]              = balances[_to].add(_amount);\r\n\r\n    // log event\r\n    Transfer(_from, _to, _amount);\r\n    return true;\r\n  }\r\n\r\n  /* Returns the amount of tokens approved by the owner */\r\n  /* that can be transferred by spender */\r\n\r\n  function allowance(address _owner, address _spender) constant returns (uint remaining) {\r\n    return allowed[_owner][_spender];\r\n  }\r\n\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------------\r\n//\r\n// IDH public token sale\r\n//\r\n// ----------------------------------------------------------------------------\r\n\r\ncontract IndaHashToken is ERC20Token {\r\n\r\n  /* Utility variable */\r\n  \r\n  uint constant E6 = 10**6;\r\n  \r\n  /* Basic token data */\r\n\r\n  string public constant name     = \"indaHash Coin\";\r\n  string public constant symbol   = \"IDH\";\r\n  uint8  public constant decimals = 6;\r\n\r\n  /* Wallet addresses - initially set to owner at deployment */\r\n  \r\n  address public wallet;\r\n  address public adminWallet;\r\n\r\n  /* ICO dates */\r\n\r\n  uint public constant DATE_PRESALE_START = 1510153200; // 08-Nov-2017 15:00 UTC\r\n  uint public constant DATE_PRESALE_END   = 1510758000; // 15-Nov-2017 15:00 UTC\r\n\r\n  uint public constant DATE_ICO_START = 1511967600; // 29-Nov-2017 15:00 UTC\r\n  uint public constant DATE_ICO_END   = 1513782000; // 20-Dec-2017 15:00 UTC\r\n\r\n  /* ICO tokens per ETH */\r\n  \r\n  uint public tokensPerEth = 3200 * E6; // rate during last ICO week\r\n\r\n  uint public constant BONUS_PRESALE      = 40;\r\n  uint public constant BONUS_ICO_WEEK_ONE = 20;\r\n  uint public constant BONUS_ICO_WEEK_TWO = 10;\r\n\r\n  /* Other ICO parameters */  \r\n  \r\n  uint public constant TOKEN_SUPPLY_TOTAL = 400 * E6 * E6; // 400 mm tokens\r\n  uint public constant TOKEN_SUPPLY_ICO   = 320 * E6 * E6; // 320 mm tokens\r\n  uint public constant TOKEN_SUPPLY_MKT   =  80 * E6 * E6; //  80 mm tokens\r\n\r\n  uint public constant PRESALE_ETH_CAP =  15000 ether;\r\n\r\n  uint public constant MIN_FUNDING_GOAL =  40 * E6 * E6; // 40 mm tokens\r\n  \r\n  uint public constant MIN_CONTRIBUTION = 1 ether / 2; // 0.5 Ether\r\n  uint public constant MAX_CONTRIBUTION = 300 ether;\r\n\r\n  uint public constant COOLDOWN_PERIOD =  2 days;\r\n  uint public constant CLAWBACK_PERIOD = 90 days;\r\n\r\n  /* Crowdsale variables */\r\n\r\n  uint public icoEtherReceived = 0; // Ether actually received by the contract\r\n\r\n  uint public tokensIssuedIco   = 0;\r\n  uint public tokensIssuedMkt   = 0;\r\n  \r\n  uint public tokensClaimedAirdrop = 0;\r\n  \r\n  /* Keep track of Ether contributed and tokens received during Crowdsale */\r\n  \r\n  mapping(address => uint) public icoEtherContributed;\r\n  mapping(address => uint) public icoTokensReceived;\r\n\r\n  /* Keep track of participants who \r\n  /* - have received their airdropped tokens after a successful ICO */\r\n  /* - or have reclaimed their contributions in case of failed Crowdsale */\r\n  /* - are locked */\r\n  \r\n  mapping(address => bool) public airdropClaimed;\r\n  mapping(address => bool) public refundClaimed;\r\n  mapping(address => bool) public locked;\r\n\r\n  // Events ---------------------------\r\n  \r\n  event WalletUpdated(address _newWallet);\r\n  event AdminWalletUpdated(address _newAdminWallet);\r\n  event TokensPerEthUpdated(uint _tokensPerEth);\r\n  event TokensMinted(address indexed _owner, uint _tokens, uint _balance);\r\n  event TokensIssued(address indexed _owner, uint _tokens, uint _balance, uint _etherContributed);\r\n  event Refund(address indexed _owner, uint _amount, uint _tokens);\r\n  event Airdrop(address indexed _owner, uint _amount, uint _balance);\r\n  event LockRemoved(address indexed _participant);\r\n\r\n  // Basic Functions ------------------\r\n\r\n  /* Initialize (owner is set to msg.sender by Owned.Owned() */\r\n\r\n  function IndaHashToken() {\r\n    require( TOKEN_SUPPLY_ICO + TOKEN_SUPPLY_MKT == TOKEN_SUPPLY_TOTAL );\r\n    wallet = owner;\r\n    adminWallet = owner;\r\n  }\r\n\r\n  /* Fallback */\r\n  \r\n  function () payable {\r\n    buyTokens();\r\n  }\r\n  \r\n  // Information functions ------------\r\n  \r\n  /* What time is it? */\r\n  \r\n  function atNow() constant returns (uint) {\r\n    return now;\r\n  }\r\n  \r\n  /* Has the minimum threshold been reached? */\r\n  \r\n  function icoThresholdReached() constant returns (bool thresholdReached) {\r\n     if (tokensIssuedIco < MIN_FUNDING_GOAL) return false;\r\n     return true;\r\n  }  \r\n  \r\n  /* Are tokens transferable? */\r\n\r\n  function isTransferable() constant returns (bool transferable) {\r\n     if ( !icoThresholdReached() ) return false;\r\n     if ( atNow() < DATE_ICO_END + COOLDOWN_PERIOD ) return false;\r\n     return true;\r\n  }\r\n  \r\n  // Lock functions -------------------\r\n\r\n  /* Manage locked */\r\n\r\n  function removeLock(address _participant) {\r\n    require( msg.sender == adminWallet || msg.sender == owner );\r\n    locked[_participant] = false;\r\n    LockRemoved(_participant);\r\n  }\r\n\r\n  function removeLockMultiple(address[] _participants) {\r\n    require( msg.sender == adminWallet || msg.sender == owner );\r\n    for (uint i = 0; i < _participants.length; i++) {\r\n      locked[_participants[i]] = false;\r\n      LockRemoved(_participants[i]);\r\n    }\r\n  }\r\n\r\n  // Owner Functions ------------------\r\n  \r\n  /* Change the crowdsale wallet address */\r\n\r\n  function setWallet(address _wallet) onlyOwner {\r\n    require( _wallet != address(0x0) );\r\n    wallet = _wallet;\r\n    WalletUpdated(wallet);\r\n  }\r\n\r\n  /* Change the admin wallet address */\r\n\r\n  function setAdminWallet(address _wallet) onlyOwner {\r\n    require( _wallet != address(0x0) );\r\n    adminWallet = _wallet;\r\n    AdminWalletUpdated(adminWallet);\r\n  }\r\n\r\n  /* Change tokensPerEth before ICO start */\r\n  \r\n  function updateTokensPerEth(uint _tokensPerEth) onlyOwner {\r\n    require( atNow() < DATE_PRESALE_START );\r\n    tokensPerEth = _tokensPerEth;\r\n    TokensPerEthUpdated(_tokensPerEth);\r\n  }\r\n\r\n  /* Minting of marketing tokens by owner */\r\n\r\n  function mintMarketing(address _participant, uint _tokens) onlyOwner {\r\n    // check amount\r\n    require( _tokens <= TOKEN_SUPPLY_MKT.sub(tokensIssuedMkt) );\r\n    \r\n    // update balances\r\n    balances[_participant] = balances[_participant].add(_tokens);\r\n    tokensIssuedMkt        = tokensIssuedMkt.add(_tokens);\r\n    tokensIssuedTotal      = tokensIssuedTotal.add(_tokens);\r\n    \r\n    // locked\r\n    locked[_participant] = true;\r\n    \r\n    // log the miniting\r\n    Transfer(0x0, _participant, _tokens);\r\n    TokensMinted(_participant, _tokens, balances[_participant]);\r\n  }\r\n\r\n  /* Owner clawback of remaining funds after clawback period */\r\n  /* (for use in case of a failed Crwodsale) */\r\n  \r\n  function ownerClawback() external onlyOwner {\r\n    require( atNow() > DATE_ICO_END + CLAWBACK_PERIOD );\r\n    wallet.transfer(this.balance);\r\n  }\r\n\r\n  /* Transfer out any accidentally sent ERC20 tokens */\r\n\r\n  function transferAnyERC20Token(address tokenAddress, uint amount) onlyOwner returns (bool success) {\r\n      return ERC20Interface(tokenAddress).transfer(owner, amount);\r\n  }\r\n\r\n  // Private functions ----------------\r\n\r\n  /* Accept ETH during crowdsale (called by default function) */\r\n\r\n  function buyTokens() private {\r\n    uint ts = atNow();\r\n    bool isPresale = false;\r\n    bool isIco = false;\r\n    uint tokens = 0;\r\n    \r\n    // minimum contribution\r\n    require( msg.value >= MIN_CONTRIBUTION );\r\n    \r\n    // one address transfer hard cap\r\n    require( icoEtherContributed[msg.sender].add(msg.value) <= MAX_CONTRIBUTION );\r\n\r\n    // check dates for presale or ICO\r\n    if (ts > DATE_PRESALE_START && ts < DATE_PRESALE_END) isPresale = true;  \r\n    if (ts > DATE_ICO_START && ts < DATE_ICO_END) isIco = true;  \r\n    require( isPresale || isIco );\r\n\r\n    // presale cap in Ether\r\n    if (isPresale) require( icoEtherReceived.add(msg.value) <= PRESALE_ETH_CAP );\r\n    \r\n    // get baseline number of tokens\r\n    tokens = tokensPerEth.mul(msg.value) / 1 ether;\r\n    \r\n    // apply bonuses (none for last week)\r\n    if (isPresale) {\r\n      tokens = tokens.mul(100 + BONUS_PRESALE) / 100;\r\n    } else if (ts < DATE_ICO_START + 7 days) {\r\n      // first week ico bonus\r\n      tokens = tokens.mul(100 + BONUS_ICO_WEEK_ONE) / 100;\r\n    } else if (ts < DATE_ICO_START + 14 days) {\r\n      // second week ico bonus\r\n      tokens = tokens.mul(100 + BONUS_ICO_WEEK_TWO) / 100;\r\n    }\r\n    \r\n    // ICO token volume cap\r\n    require( tokensIssuedIco.add(tokens) <= TOKEN_SUPPLY_ICO );\r\n\r\n    // register tokens\r\n    balances[msg.sender]          = balances[msg.sender].add(tokens);\r\n    icoTokensReceived[msg.sender] = icoTokensReceived[msg.sender].add(tokens);\r\n    tokensIssuedIco               = tokensIssuedIco.add(tokens);\r\n    tokensIssuedTotal             = tokensIssuedTotal.add(tokens);\r\n    \r\n    // register Ether\r\n    icoEtherReceived                = icoEtherReceived.add(msg.value);\r\n    icoEtherContributed[msg.sender] = icoEtherContributed[msg.sender].add(msg.value);\r\n    \r\n    // locked\r\n    locked[msg.sender] = true;\r\n    \r\n    // log token issuance\r\n    Transfer(0x0, msg.sender, tokens);\r\n    TokensIssued(msg.sender, tokens, balances[msg.sender], msg.value);\r\n\r\n    // transfer Ether if we're over the threshold\r\n    if ( icoThresholdReached() ) wallet.transfer(this.balance);\r\n  }\r\n  \r\n  // ERC20 functions ------------------\r\n\r\n  /* Override \"transfer\" (ERC20) */\r\n\r\n  function transfer(address _to, uint _amount) returns (bool success) {\r\n    require( isTransferable() );\r\n    require( locked[msg.sender] == false );\r\n    require( locked[_to] == false );\r\n    return super.transfer(_to, _amount);\r\n  }\r\n  \r\n  /* Override \"transferFrom\" (ERC20) */\r\n\r\n  function transferFrom(address _from, address _to, uint _amount) returns (bool success) {\r\n    require( isTransferable() );\r\n    require( locked[_from] == false );\r\n    require( locked[_to] == false );\r\n    return super.transferFrom(_from, _to, _amount);\r\n  }\r\n\r\n  // External functions ---------------\r\n\r\n  /* Reclaiming of funds by contributors in case of a failed crowdsale */\r\n  /* (it will fail if account is empty after ownerClawback) */\r\n\r\n  /* While there could not have been any token transfers yet, a contributor */\r\n  /* may have received minted tokens, so the token balance after a refund */ \r\n  /* may still be positive */\r\n  \r\n  function reclaimFunds() external {\r\n    uint tokens; // tokens to destroy\r\n    uint amount; // refund amount\r\n    \r\n    // ico is finished and was not successful\r\n    require( atNow() > DATE_ICO_END && !icoThresholdReached() );\r\n    \r\n    // check if refund has already been claimed\r\n    require( !refundClaimed[msg.sender] );\r\n    \r\n    // check if there is anything to refund\r\n    require( icoEtherContributed[msg.sender] > 0 );\r\n    \r\n    // update variables affected by refund\r\n    tokens = icoTokensReceived[msg.sender];\r\n    amount = icoEtherContributed[msg.sender];\r\n\r\n    balances[msg.sender] = balances[msg.sender].sub(tokens);\r\n    tokensIssuedTotal    = tokensIssuedTotal.sub(tokens);\r\n    \r\n    refundClaimed[msg.sender] = true;\r\n    \r\n    // transfer out refund\r\n    msg.sender.transfer(amount);\r\n    \r\n    // log\r\n    Transfer(msg.sender, 0x0, tokens);\r\n    Refund(msg.sender, amount, tokens);\r\n  }\r\n\r\n  /* Claiming of \"airdropped\" tokens in case of successful crowdsale */\r\n  /* Can be done by token holder, or by adminWallet */ \r\n\r\n  function claimAirdrop() external {\r\n    doAirdrop(msg.sender);\r\n  }\r\n\r\n  function adminClaimAirdrop(address _participant) external {\r\n    require( msg.sender == adminWallet );\r\n    doAirdrop(_participant);\r\n  }\r\n\r\n  function adminClaimAirdropMultiple(address[] _addresses) external {\r\n    require( msg.sender == adminWallet );\r\n    for (uint i = 0; i < _addresses.length; i++) doAirdrop(_addresses[i]);\r\n  }  \r\n  \r\n  function doAirdrop(address _participant) internal {\r\n    uint airdrop = computeAirdrop(_participant);\r\n\r\n    require( airdrop > 0 );\r\n\r\n    // update balances and token issue volume\r\n    airdropClaimed[_participant] = true;\r\n    balances[_participant] = balances[_participant].add(airdrop);\r\n    tokensIssuedTotal      = tokensIssuedTotal.add(airdrop);\r\n    tokensClaimedAirdrop   = tokensClaimedAirdrop.add(airdrop);\r\n    \r\n    // log\r\n    Airdrop(_participant, airdrop, balances[_participant]);\r\n    Transfer(0x0, _participant, airdrop);\r\n  }\r\n\r\n  /* Function to estimate airdrop amount. For some accounts, the value of */\r\n  /* tokens received by calling claimAirdrop() may be less than gas costs */\r\n  \r\n  /* If an account has tokens from the ico, the amount after the airdrop */\r\n  /* will be newBalance = tokens * TOKEN_SUPPLY_ICO / tokensIssuedIco */\r\n      \r\n  function computeAirdrop(address _participant) constant returns (uint airdrop) {\r\n    // return 0 if it's too early or ico was not successful\r\n    if ( atNow() < DATE_ICO_END || !icoThresholdReached() ) return 0;\r\n    \r\n    // return  0 is the airdrop was already claimed\r\n    if( airdropClaimed[_participant] ) return 0;\r\n\r\n    // return 0 if the account does not hold any crowdsale tokens\r\n    if( icoTokensReceived[_participant] == 0 ) return 0;\r\n    \r\n    // airdrop amount\r\n    uint tokens = icoTokensReceived[_participant];\r\n    uint newBalance = tokens.mul(TOKEN_SUPPLY_ICO) / tokensIssuedIco;\r\n    airdrop = newBalance - tokens;\r\n  }  \r\n\r\n  /* Multiple token transfers from one address to save gas */\r\n  /* (longer _amounts array not accepted = sanity check) */\r\n\r\n  function transferMultiple(address[] _addresses, uint[] _amounts) external {\r\n    require( isTransferable() );\r\n    require( locked[msg.sender] == false );\r\n    require( _addresses.length == _amounts.length );\r\n    for (uint i = 0; i < _addresses.length; i++) {\r\n      if (locked[_addresses[i]] == false) super.transfer(_addresses[i], _amounts[i]);\r\n    }\r\n  }  \r\n\r\n}", "OptimizationUsed": "1", "ContractName": "IndaHashToken", "ByteCode": "0x606060405236156102bc5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663021ba8f881146102c8578063023bb74d146102ed578063024c6def1461031257806305502a621461033757806306fdde031461035c578063095ea7b3146103e757806318160ddd1461041d5780632121dc751461044257806323b872dd14610469578063313ce567146104a5578063347e26c0146104ce57806335082933146104ff57806336b19cd71461052057806336d95f561461054f57806340650c9114610574578063436e1e2e14610599578063465a092d146105ca5780634a387bef146105ef578063521eb273146106105780635b88349d1461063f5780635ef7943414610654578063615ef639146106795780636e99d52f1461069e57806370a08231146106c357806374b433bd146106f4578063763f40111461071957806379ba50971461073d57806381aea6681461075257806384ef0778146107775780638da5cb5b1461079c57806394d95f8f146107cb57806395cc2e8b146107f057806395d89b41146108155780639ea407be146108a0578063a05fccef146108b8578063a9059cbb146108e4578063ad9df0551461091a578063b557478a1461093b578063b63e93dc1461096e578063c0c133a814610983578063cab3ad2c146109a8578063cbc8ae5f146109cd578063cbdd69b5146109f2578063cbf9fe5f14610a17578063cce4bd5214610a4a578063ce916d8514610a5f578063cef9db6d14610a90578063d1b6dd3014610ab5578063d4ee1d9014610ae8578063d912ebb214610b17578063dc39d06d14610b3c578063dd62ed3e14610b72578063deaa59df14610ba9578063e1c1451a14610bca578063e3fe974014610bef578063f0e7cf1314610c16578063f21632e114610c36578063f2fde38b14610c5b578063fcc1cc9b14610c7c575b5b6102c5610ccd565b5b005b34156102d357600080fd5b6102db61107f565b60405190815260200160405180910390f35b34156102f857600080fd5b6102db611086565b60405190815260200160405180910390f35b341561031d57600080fd5b6102db61108e565b60405190815260200160405180910390f35b341561034257600080fd5b6102db611093565b60405190815260200160405180910390f35b341561036757600080fd5b61036f611098565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156103ac5780820151818401525b602001610393565b50505050905090810190601f1680156103d95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156103f257600080fd5b610409600160a060020a03600435166024356110cf565b604051901515815260200160405180910390f35b341561042857600080fd5b6102db61115f565b60405190815260200160405180910390f35b341561044d57600080fd5b610409611166565b604051901515815260200160405180910390f35b341561047457600080fd5b610409600160a060020a03600435811690602435166044356111a0565b604051901515815260200160405180910390f35b34156104b057600080fd5b6104b8611216565b60405160ff909116815260200160405180910390f35b34156104d957600080fd5b6102db600160a060020a036004351661121b565b60405190815260200160405180910390f35b341561050a57600080fd5b6102c5600160a060020a036004351661122d565b005b341561052b57600080fd5b6105336112ce565b604051600160a060020a03909116815260200160405180910390f35b341561055a57600080fd5b6102db6112dd565b60405190815260200160405180910390f35b341561057f57600080fd5b6102db6112e7565b60405190815260200160405180910390f35b34156105a457600080fd5b6102db600160a060020a03600435166112f3565b60405190815260200160405180910390f35b34156105d557600080fd5b6102db6113c5565b60405190815260200160405180910390f35b34156105fa57600080fd5b6102c5600160a060020a03600435166113d3565b005b341561061b57600080fd5b61053361145a565b604051600160a060020a03909116815260200160405180910390f35b341561064a57600080fd5b6102c5611469565b005b341561065f57600080fd5b6102db611475565b60405190815260200160405180910390f35b341561068457600080fd5b6102db61147d565b60405190815260200160405180910390f35b34156106a957600080fd5b6102db611483565b60405190815260200160405180910390f35b34156106ce57600080fd5b6102db600160a060020a036004351661148a565b60405190815260200160405180910390f35b34156106ff57600080fd5b6102db6114a9565b60405190815260200160405180910390f35b341561072457600080fd5b6102c5600160a060020a03600435166024356114b3565b005b341561074857600080fd5b6102c5611602565b005b341561075d57600080fd5b6102db61168e565b60405190815260200160405180910390f35b341561078257600080fd5b6102db611693565b60405190815260200160405180910390f35b34156107a757600080fd5b610533611699565b604051600160a060020a03909116815260200160405180910390f35b34156107d657600080fd5b6102db6116a8565b60405190815260200160405180910390f35b34156107fb57600080fd5b6102db6116b5565b60405190815260200160405180910390f35b341561082057600080fd5b61036f6116bd565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156103ac5780820151818401525b602001610393565b50505050905090810190601f1680156103d95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156108ab57600080fd5b6102c56004356116f4565b005b34156108c357600080fd5b6102c56024600480358281019290820135918135918201910135611763565b005b34156108ef57600080fd5b610409600160a060020a036004351660243561183e565b604051901515815260200160405180910390f35b341561092557600080fd5b6102c5600160a060020a03600435166118b2565b005b341561094657600080fd5b610409600160a060020a03600435166118da565b604051901515815260200160405180910390f35b341561097957600080fd5b6102c56118ef565b005b341561098e57600080fd5b6102db61195e565b60405190815260200160405180910390f35b34156109b357600080fd5b6102db611966565b60405190815260200160405180910390f35b34156109d857600080fd5b6102db61196b565b60405190815260200160405180910390f35b34156109fd57600080fd5b6102db611976565b60405190815260200160405180910390f35b3415610a2257600080fd5b610409600160a060020a036004351661197c565b604051901515815260200160405180910390f35b3415610a5557600080fd5b6102c5611991565b005b3415610a6a57600080fd5b6102db600160a060020a0360043516611b36565b60405190815260200160405180910390f35b3415610a9b57600080fd5b6102db611b48565b60405190815260200160405180910390f35b3415610ac057600080fd5b610409600160a060020a0360043516611b53565b604051901515815260200160405180910390f35b3415610af357600080fd5b610533611b68565b604051600160a060020a03909116815260200160405180910390f35b3415610b2257600080fd5b6102db611b77565b60405190815260200160405180910390f35b3415610b4757600080fd5b610409600160a060020a0360043516602435611b7d565b604051901515815260200160405180910390f35b3415610b7d57600080fd5b6102db600160a060020a0360043581169060243516611c3c565b60405190815260200160405180910390f35b3415610bb457600080fd5b6102c5600160a060020a0360043516611c69565b005b3415610bd557600080fd5b6102db611d0a565b60405190815260200160405180910390f35b3415610bfa57600080fd5b610409611d10565b604051901515815260200160405180910390f35b3415610c2157600080fd5b6102c56004803560248101910135611d33565b005b3415610c4157600080fd5b6102db611d90565b60405190815260200160405180910390f35b3415610c6657600080fd5b6102c5600160a060020a0360043516611d96565b005b3415610c8757600080fd5b6102c56004602481358181019083013580602081810201604051908101604052809392919081815260200183836020028082843750949650611e4a95505050505050565b005b600080600080610cdb61168e565b9350600092508291508190506706f05b59d3b20000341015610cfc57600080fd5b600160a060020a0333166000908152600c6020526040902054681043561a882930000090610d30903463ffffffff611f2d16565b1115610d3b57600080fd5b635a031bf084118015610d515750635a0c567084105b15610d5b57600192505b635a1ecb7084118015610d715750635a3a7af084105b15610d7b57600191505b8280610d845750815b1515610d8f57600080fd5b8215610dbf5760085469032d26d12e980b60000090610db4903463ffffffff611f2d16565b1115610dbf57600080fd5b5b600754670de0b6b3a764000090610ddd903463ffffffff611f4116565b811515610de657fe5b0490508215610e13576064610e0282608c63ffffffff611f4116565b811515610e0b57fe5b049050610e6f565b635a2805f0841015610e43576064610e0282607863ffffffff611f4116565b811515610e0b57fe5b049050610e6f565b635a314070841015610e6f576064610e6282606e63ffffffff611f4116565b811515610e6b57fe5b0490505b5b5b60095466012309ce54000090610e8d908363ffffffff611f2d16565b1115610e9857600080fd5b600160a060020a033316600090815260036020526040902054610ec1908263ffffffff611f2d16565b600160a060020a033316600090815260036020908152604080832093909355600d90522054610ef6908263ffffffff611f2d16565b600160a060020a0333166000908152600d6020526040902055600954610f22908263ffffffff611f2d16565b600955600254610f38908263ffffffff611f2d16565b600255600854610f4e903463ffffffff611f2d16565b600855600160a060020a0333166000908152600c6020526040902054610f7a903463ffffffff611f2d16565b600160a060020a0333166000818152600c602090815260408083209490945560109052828120805460ff1916600117905590916000805160206122d68339815191529084905190815260200160405180910390a3600160a060020a03331660008181526003602052604090819020547fdf61f51b99ff0164245d2ca4eb058f919dbe973d48c3891c93e50183b67f3e1e9184919034905180848152602001838152602001828152602001935050505060405180910390a2611039611d10565b1561107757600554600160a060020a039081169030163180156108fc0290604051600060405180830381858888f19350505050151561107757600080fd5b5b5b50505050565b6276a70081565b635a031bf081565b600a81565b602881565b60408051908101604052600d81527f696e64614861736820436f696e00000000000000000000000000000000000000602082015281565b600160a060020a033316600090815260036020526040812054829010156110f557600080fd5b600160a060020a03338116600081815260046020908152604080832094881680845294909152908190208590557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b6002545b90565b6000611170611d10565b151561117e57506000611163565b635a3d1df061118b61168e565b101561119957506000611163565b5060015b90565b60006111aa611166565b15156111b557600080fd5b600160a060020a03841660009081526010602052604090205460ff16156111db57600080fd5b600160a060020a03831660009081526010602052604090205460ff161561120157600080fd5b61120c848484611f6a565b90505b9392505050565b600681565b600c6020526000908152604090205481565b60005433600160a060020a0390811691161461124857600080fd5b600160a060020a038116151561125d57600080fd5b6006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383811691909117918290557f65ef617d87f7e47ab080058ac1d5ebf06817bbd817e49898ab9f9532405ecd9b9116604051600160a060020a03909116815260200160405180910390a15b5b50565b600654600160a060020a031681565b65246139ca800081565b6706f05b59d3b2000081565b6000806000635a3a7af061130561168e565b10806113165750611314611d10565b155b1561132457600092506113be565b600160a060020a0384166000908152600e602052604090205460ff161561134e57600092506113be565b600160a060020a0384166000908152600d6020526040902054151561137657600092506113be565b600160a060020a0384166000908152600d60205260409020546009549092506113ac8366012309ce54000063ffffffff611f4116565b8115156113b557fe5b04905081810392505b5050919050565b69032d26d12e980b60000081565b60065433600160a060020a03908116911614806113fe575060005433600160a060020a039081169116145b151561140957600080fd5b600160a060020a03811660008181526010602052604090819020805460ff191690557f064f67e76df103eb3e142dac6110a06fcfc7a01ef2da651312b88eb6f0dd3d28905160405180910390a25b50565b600554600160a060020a031681565b611472336120c6565b5b565b635a0c567081565b600b5481565b6202a30081565b600160a060020a0381166000908152600360205260409020545b919050565b6548c27395000081565b60005433600160a060020a039081169116146114ce57600080fd5b600a546114e8906548c2739500009063ffffffff6121ea16565b8111156114f457600080fd5b600160a060020a03821660009081526003602052604090205461151d908263ffffffff611f2d16565b600160a060020a038316600090815260036020526040902055600a54611549908263ffffffff611f2d16565b600a5560025461155f908263ffffffff611f2d16565b600255600160a060020a038216600081815260106020526040808220805460ff191660011790556000805160206122d68339815191529084905190815260200160405180910390a3600160a060020a03821660008181526003602052604090819020547f2e8ac5177a616f2aec08c3048f5021e4e9743ece034e8d83ba5caf76688bb475918491905191825260208201526040908101905180910390a25b5b5050565b60015433600160a060020a0390811691161461161d57600080fd5b600154600054600160a060020a0391821691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36001546000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039092169190911790555b565b425b90565b60025481565b600054600160a060020a031681565b681043561a882930000081565b635a1ecb7081565b60408051908101604052600381527f4944480000000000000000000000000000000000000000000000000000000000602082015281565b60005433600160a060020a0390811691161461170f57600080fd5b635a031bf061171c61168e565b1061172657600080fd5b60078190557ff7729fa834bbef70b6d3257c2317a562aa88b56c81b544814f93dc5963a2c0038160405190815260200160405180910390a15b5b50565b600061176d611166565b151561177857600080fd5b600160a060020a03331660009081526010602052604090205460ff161561179e57600080fd5b8382146117aa57600080fd5b5060005b8381101561183657601060008686848181106117c657fe5b60209081029290920135600160a060020a03168352508101919091526040016000205460ff16151561182d5761182b85858381811061180157fe5b90506020020135600160a060020a0316848484818110151561181f57fe5b90506020020135612201565b505b5b6001016117ae565b5b5050505050565b6000611848611166565b151561185357600080fd5b600160a060020a03331660009081526010602052604090205460ff161561187957600080fd5b600160a060020a03831660009081526010602052604090205460ff161561189f57600080fd5b6118a98383612201565b90505b92915050565b60065433600160a060020a039081169116146118cd57600080fd5b6112ca816120c6565b5b50565b600f6020526000908152604090205460ff1681565b60005433600160a060020a0390811691161461190a57600080fd5b635ab121f061191761168e565b1161192157600080fd5b600554600160a060020a039081169030163180156108fc0290604051600060405180830381858888f19350505050151561147257600080fd5b5b5b565b635a3a7af081565b601481565b66012309ce54000081565b60075481565b60106020526000908152604090205460ff1681565b600080635a3a7af06119a161168e565b1180156119b357506119b1611d10565b155b15156119be57600080fd5b600160a060020a0333166000908152600f602052604090205460ff16156119e457600080fd5b600160a060020a0333166000908152600c602052604081205411611a0757600080fd5b5050600160a060020a0333166000908152600d6020908152604080832054600c8352818420546003909352922054611a45908363ffffffff6121ea16565b600160a060020a033316600090815260036020526040902055600254611a71908363ffffffff6121ea16565b600255600160a060020a0333166000818152600f602052604090819020805460ff1916600117905582156108fc0290839051600060405180830381858888f193505050501515611ac057600080fd5b600033600160a060020a03166000805160206122d68339815191528460405190815260200160405180910390a333600160a060020a03167f73f04af9dcc582a923ec15d3eea990fe34adabfff2879e28d44572e01a54abb6828460405191825260208201526040908101905180910390a25b5050565b600d6020526000908152604090205481565b66016bcc41e9000081565b600e6020526000908152604090205460ff1681565b600154600160a060020a031681565b60095481565b6000805433600160a060020a03908116911614611b9957600080fd5b60008054600160a060020a038086169263a9059cbb92909116908590604051602001526040517c010000000000000000000000000000000000000000000000000000000063ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b1515611c1857600080fd5b6102c65a03f11515611c2957600080fd5b50505060405180519150505b5b92915050565b600160a060020a038083166000908152600460209081526040808320938516835292905220545b92915050565b60005433600160a060020a03908116911614611c8457600080fd5b600160a060020a0381161515611c9957600080fd5b6005805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383811691909117918290557f4edbfac5b40fe46ac1af1fd222b224b38cfeeb9e21bd4fc6344526c245f7549b9116604051600160a060020a03909116815260200160405180910390a15b5b50565b600a5481565b60095460009065246139ca800090101561119957506000611163565b5060015b90565b60065460009033600160a060020a03908116911614611d5157600080fd5b5060005b81811015611d8a57611d81838383818110611d6c57fe5b90506020020135600160a060020a03166120c6565b5b600101611d55565b5b505050565b60085481565b60005433600160a060020a03908116911614611db157600080fd5b600054600160a060020a0382811691161415611dcc57600080fd5b600160a060020a0381161515611de157600080fd5b600054600160a060020a0380831691167ff4e75b79500ab730f8a026ed3cba6d55331bcb64c9e9f60c548e371356e5e3c060405160405180910390a36001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b50565b60065460009033600160a060020a0390811691161480611e78575060005433600160a060020a039081169116145b1515611e8357600080fd5b5060005b81518110156115fd57600060106000848481518110611ea257fe5b90602001906020020151600160a060020a031681526020810191909152604001600020805460ff1916911515919091179055818181518110611ee057fe5b90602001906020020151600160a060020a03167f064f67e76df103eb3e142dac6110a06fcfc7a01ef2da651312b88eb6f0dd3d2860405160405180910390a25b600101611e87565b5b5050565b8181018281101561115957fe5b5b92915050565b818102821580611f5b5750818382811515611f5857fe5b04145b151561115957fe5b5b92915050565b600160a060020a03831660009081526003602052604081205482901015611f9057600080fd5b600160a060020a038085166000908152600460209081526040808320339094168352929052205482901015611fc457600080fd5b600160a060020a038416600090815260036020526040902054611fed908363ffffffff6121ea16565b600160a060020a0380861660009081526003602090815260408083209490945560048152838220339093168252919091522054612030908363ffffffff6121ea16565b600160a060020a0380861660009081526004602090815260408083203385168452825280832094909455918616815260039091522054612076908363ffffffff611f2d16565b600160a060020a03808516600081815260036020526040908190209390935591908616906000805160206122d68339815191529085905190815260200160405180910390a35060015b9392505050565b60006120d1826112f3565b9050600081116120e057600080fd5b600160a060020a0382166000908152600e60209081526040808320805460ff19166001179055600390915290205461211e908263ffffffff611f2d16565b600160a060020a03831660009081526003602052604090205560025461214a908263ffffffff611f2d16565b600255600b54612160908263ffffffff611f2d16565b600b55600160a060020a03821660008181526003602052604090819020547fada993ad066837289fe186cd37227aa338d27519a8a1547472ecb9831486d272918491905191825260208201526040908101905180910390a281600160a060020a031660006000805160206122d68339815191528360405190815260200160405180910390a35b5050565b6000828211156121f657fe5b508082035b92915050565b600160a060020a0333166000908152600360205260408120548290101561222757600080fd5b600160a060020a033316600090815260036020526040902054612250908363ffffffff6121ea16565b600160a060020a033381166000908152600360205260408082209390935590851681522054612285908363ffffffff611f2d16565b600160a060020a0380851660008181526003602052604090819020939093559133909116906000805160206122d68339815191529085905190815260200160405180910390a35060015b929150505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a723058200b92f4a92f6662883588a427cb57f970575daf04db1bcdfe0ab30e5e137ffa200029"}