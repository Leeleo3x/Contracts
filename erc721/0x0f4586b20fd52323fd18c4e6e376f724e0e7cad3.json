{"Runs": "200", "SwarmSource": "bzzr://1845fe86d4c1f4335bbd7c9f40054c81ee2e21f2a52c260e9816bfa47fc7acb6", "ABI": "[{\"constant\":true,\"inputs\":[{\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_deleteType\",\"type\":\"uint16\"}],\"name\":\"destroyFashion\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_approved\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokens\",\"type\":\"uint256[]\"}],\"name\":\"getFashionsAttrs\",\"outputs\":[{\"name\":\"attrs\",\"type\":\"uint16[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getOwnFashions\",\"outputs\":[{\"name\":\"tokens\",\"type\":\"uint256[]\"},{\"name\":\"flags\",\"type\":\"uint32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"safeTransferByContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"doUnpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getFashion\",\"outputs\":[{\"name\":\"datas\",\"type\":\"uint16[12]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_actionAddr\",\"type\":\"address\"}],\"name\":\"getActionContract\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"doPause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_actionAddr\",\"type\":\"address\"},{\"name\":\"_useful\",\"type\":\"bool\"}],\"name\":\"setActionContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_attrs\",\"type\":\"uint16[9]\"}],\"name\":\"createFashion\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"_idxArray\",\"type\":\"uint16[4]\"},{\"name\":\"_params\",\"type\":\"uint16[4]\"},{\"name\":\"_changeType\",\"type\":\"uint16\"}],\"name\":\"changeFashionAttr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_operator\",\"type\":\"address\"},{\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addrAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fashionArray\",\"outputs\":[{\"name\":\"protoId\",\"type\":\"uint16\"},{\"name\":\"quality\",\"type\":\"uint16\"},{\"name\":\"pos\",\"type\":\"uint16\"},{\"name\":\"health\",\"type\":\"uint16\"},{\"name\":\"atkMin\",\"type\":\"uint16\"},{\"name\":\"atkMax\",\"type\":\"uint16\"},{\"name\":\"defence\",\"type\":\"uint16\"},{\"name\":\"crit\",\"type\":\"uint16\"},{\"name\":\"attrExt1\",\"type\":\"uint16\"},{\"name\":\"attrExt2\",\"type\":\"uint16\"},{\"name\":\"attrExt3\",\"type\":\"uint16\"},{\"name\":\"attrExt4\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"protoId\",\"type\":\"uint16\"},{\"indexed\":false,\"name\":\"quality\",\"type\":\"uint16\"},{\"indexed\":false,\"name\":\"pos\",\"type\":\"uint16\"},{\"indexed\":false,\"name\":\"createType\",\"type\":\"uint16\"}],\"name\":\"CreateFashion\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"changeType\",\"type\":\"uint16\"}],\"name\":\"ChangeFashion\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"deleteType\",\"type\":\"uint16\"}],\"name\":\"DeleteFashion\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"preAdmin\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminTransferred\",\"type\":\"event\"}]", "Library": "", "CompilerVersion": "v0.4.21+commit.dfe3193c", "ConstructorArguments": "", "SourceCode": "/* ==================================================================== */\r\n/* Copyright (c) 2018 The ether.online Project.  All rights reserved.\r\n/* \r\n/* https://ether.online  The first RPG game of blockchain                 \r\n/* ==================================================================== */\r\npragma solidity ^0.4.20;\r\n\r\n/// @title ERC-165 Standard Interface Detection\r\n/// @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md\r\ninterface ERC165 {\r\n    function supportsInterface(bytes4 interfaceID) external view returns (bool);\r\n}\r\n\r\n/// @title ERC-721 Non-Fungible Token Standard\r\n/// @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\r\ncontract ERC721 is ERC165 {\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _tokenId);\r\n    event Approval(address indexed _owner, address indexed _approved, uint256 _tokenId);\r\n    event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved);\r\n    function balanceOf(address _owner) external view returns (uint256);\r\n    function ownerOf(uint256 _tokenId) external view returns (address);\r\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes data) external;\r\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;\r\n    function transferFrom(address _from, address _to, uint256 _tokenId) external;\r\n    function approve(address _approved, uint256 _tokenId) external;\r\n    function setApprovalForAll(address _operator, bool _approved) external;\r\n    function getApproved(uint256 _tokenId) external view returns (address);\r\n    function isApprovedForAll(address _owner, address _operator) external view returns (bool);\r\n}\r\n\r\n/// @title ERC-721 Non-Fungible Token Standard\r\ninterface ERC721TokenReceiver {\r\n\tfunction onERC721Received(address _from, uint256 _tokenId, bytes data) external returns(bytes4);\r\n}\r\n\r\n/// @title ERC-721 Non-Fungible Token Standard, optional metadata extension\r\ninterface ERC721Metadata /* is ERC721 */ {\r\n    function name() external pure returns (string _name);\r\n    function symbol() external pure returns (string _symbol);\r\n    function tokenURI(uint256 _tokenId) external view returns (string);\r\n}\r\n\r\n/// @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\r\ninterface ERC721Enumerable /* is ERC721 */ {\r\n    function totalSupply() external view returns (uint256);\r\n    function tokenByIndex(uint256 _index) external view returns (uint256);\r\n    function tokenOfOwnerByIndex(address _owner, uint256 _index) external view returns (uint256);\r\n}\r\n\r\ncontract AccessAdmin {\r\n    bool public isPaused = false;\r\n    address public addrAdmin;  \r\n\r\n    event AdminTransferred(address indexed preAdmin, address indexed newAdmin);\r\n\r\n    function AccessAdmin() public {\r\n        addrAdmin = msg.sender;\r\n    }  \r\n\r\n\r\n    modifier onlyAdmin() {\r\n        require(msg.sender == addrAdmin);\r\n        _;\r\n    }\r\n\r\n    modifier whenNotPaused() {\r\n        require(!isPaused);\r\n        _;\r\n    }\r\n\r\n    modifier whenPaused {\r\n        require(isPaused);\r\n        _;\r\n    }\r\n\r\n    function setAdmin(address _newAdmin) external onlyAdmin {\r\n        require(_newAdmin != address(0));\r\n        AdminTransferred(addrAdmin, _newAdmin);\r\n        addrAdmin = _newAdmin;\r\n    }\r\n\r\n    function doPause() external onlyAdmin whenNotPaused {\r\n        isPaused = true;\r\n    }\r\n\r\n    function doUnpause() external onlyAdmin whenPaused {\r\n        isPaused = false;\r\n    }\r\n}\r\n\r\n/// This Random is inspired by https://github.com/axiomzen/eth-random\r\ncontract Random {\r\n    uint256 _seed;\r\n\r\n    /// @dev \u6839\u636e\u5408\u7ea6\u8bb0\u5f55\u7684\u4e0a\u4e00\u6b21\u79cd\u5b50\u751f\u4ea7\u4e00\u4e2a\u968f\u673a\u6570\r\n    /// @return \u8fd4\u56de\u4e00\u4e2a\u968f\u673a\u6570\r\n    function _rand() internal returns (uint256) {\r\n        _seed = uint256(keccak256(_seed, block.blockhash(block.number - 1), block.coinbase, block.difficulty));\r\n        return _seed;\r\n    }\r\n\r\n    /// @dev \u6839\u636e\u7ed9\u5b9a\u7684\u79cd\u5b50\u751f\u4ea7\u4e00\u4e2a\u968f\u673a\u6570\r\n    /// @param _outSeed \u5916\u90e8\u7ed9\u5b9a\u7684\u79cd\u5b50\r\n    /// @return \u8fd4\u56de\u4e00\u4e2a\u968f\u673a\u6570\r\n    function _randBySeed(uint256 _outSeed) internal view returns (uint256) {\r\n        return uint256(keccak256(_outSeed, block.blockhash(block.number - 1), block.coinbase, block.difficulty));\r\n    }\r\n\r\n    /*\r\n    function _randByRange(uint256 _min, uint256 _max) internal returns (uint256) {\r\n        if (_min >= _max) {\r\n            return _min;\r\n        }\r\n        return (_rand() % (_max - _min)) + _min;\r\n    }\r\n\r\n    function _rankByNumber(uint256 _max) internal returns (uint256) {\r\n        return _rand() % _max;\r\n    }\r\n    */\r\n}\r\n\r\ncontract WarToken is ERC721, AccessAdmin {\r\n    /// @dev The equipment info\r\n    struct Fashion {\r\n        uint16 protoId;     // 0  Equipment ID\r\n        uint16 quality;     // 1  Rarity: 1 Coarse/2 Good/3 Rare/4 Epic/5 Legendary\r\n        uint16 pos;         // 2  Slots: 1 Weapon/2 Hat/3 Cloth/4 Pant/5 Shoes/9 Pets\r\n        uint16 health;      // 3  Health\r\n        uint16 atkMin;      // 4  Min attack\r\n        uint16 atkMax;      // 5  Max attack\r\n        uint16 defence;     // 6  Defennse\r\n        uint16 crit;        // 7  Critical rate\r\n        uint16 attrExt1;    // 8  future stat 1\r\n        uint16 attrExt2;    // 9  future stat 2\r\n        uint16 attrExt3;    // 10 future stat 3\r\n        uint16 attrExt4;    // 11 future stat 4\r\n    }\r\n\r\n    /// @dev All equipments tokenArray (not exceeding 2^32-1)\r\n    Fashion[] public fashionArray;\r\n\r\n    /// @dev Amount of tokens destroyed\r\n    uint256 destroyFashionCount;\r\n\r\n    /// @dev Equipment token ID vs owner address\r\n    mapping (uint256 => address) fashionIdToOwner;\r\n\r\n    /// @dev Equipments owner by the owner (array)\r\n    mapping (address => uint256[]) ownerToFashionArray;\r\n\r\n    /// @dev Equipment token ID search in owner array\r\n    mapping (uint256 => uint256) fashionIdToOwnerIndex;\r\n\r\n    /// @dev The authorized address for each WAR\r\n    mapping (uint256 => address) fashionIdToApprovals;\r\n\r\n    /// @dev The authorized operators for each address\r\n    mapping (address => mapping (address => bool)) operatorToApprovals;\r\n\r\n    /// @dev Trust contract\r\n    mapping (address => bool) actionContracts;\r\n\r\n    function setActionContract(address _actionAddr, bool _useful) external onlyAdmin {\r\n        actionContracts[_actionAddr] = _useful;\r\n    }\r\n\r\n    function getActionContract(address _actionAddr) external view onlyAdmin returns(bool) {\r\n        return actionContracts[_actionAddr];\r\n    }\r\n\r\n    /// @dev This emits when the approved address for an WAR is changed or reaffirmed.\r\n    event Approval(address indexed _owner, address indexed _approved, uint256 _tokenId);\r\n\r\n    /// @dev This emits when an operator is enabled or disabled for an owner.\r\n    event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved);\r\n\r\n    /// @dev This emits when the equipment ownership changed \r\n    event Transfer(address indexed from, address indexed to, uint256 tokenId);\r\n\r\n    /// @dev This emits when the equipment created\r\n    event CreateFashion(address indexed owner, uint256 tokenId, uint16 protoId, uint16 quality, uint16 pos, uint16 createType);\r\n\r\n    /// @dev This emits when the equipment's attributes changed\r\n    event ChangeFashion(address indexed owner, uint256 tokenId, uint16 changeType);\r\n\r\n    /// @dev This emits when the equipment destroyed\r\n    event DeleteFashion(address indexed owner, uint256 tokenId, uint16 deleteType);\r\n    \r\n    function WarToken() public {\r\n        addrAdmin = msg.sender;\r\n        fashionArray.length += 1;\r\n    }\r\n\r\n    // modifier\r\n    /// @dev Check if token ID is valid\r\n    modifier isValidToken(uint256 _tokenId) {\r\n        require(_tokenId >= 1 && _tokenId <= fashionArray.length);\r\n        require(fashionIdToOwner[_tokenId] != address(0)); \r\n        _;\r\n    }\r\n\r\n    modifier canTransfer(uint256 _tokenId) {\r\n        address owner = fashionIdToOwner[_tokenId];\r\n        require(msg.sender == owner || msg.sender == fashionIdToApprovals[_tokenId] || operatorToApprovals[owner][msg.sender]);\r\n        _;\r\n    }\r\n\r\n    // ERC721\r\n    function supportsInterface(bytes4 _interfaceId) external view returns(bool) {\r\n        // ERC165 || ERC721 || ERC165^ERC721\r\n        return (_interfaceId == 0x01ffc9a7 || _interfaceId == 0x80ac58cd || _interfaceId == 0x8153916a) && (_interfaceId != 0xffffffff);\r\n    }\r\n        \r\n    function name() public pure returns(string) {\r\n        return \"WAR Token\";\r\n    }\r\n\r\n    function symbol() public pure returns(string) {\r\n        return \"WAR\";\r\n    }\r\n\r\n    /// @dev Search for token quantity address\r\n    /// @param _owner Address that needs to be searched\r\n    /// @return Returns token quantity\r\n    function balanceOf(address _owner) external view returns(uint256) {\r\n        require(_owner != address(0));\r\n        return ownerToFashionArray[_owner].length;\r\n    }\r\n\r\n    /// @dev Find the owner of an WAR\r\n    /// @param _tokenId The tokenId of WAR\r\n    /// @return Give The address of the owner of this WAR\r\n    function ownerOf(uint256 _tokenId) external view /*isValidToken(_tokenId)*/ returns (address owner) {\r\n        return fashionIdToOwner[_tokenId];\r\n    }\r\n\r\n    /// @dev Transfers the ownership of an WAR from one address to another address\r\n    /// @param _from The current owner of the WAR\r\n    /// @param _to The new owner\r\n    /// @param _tokenId The WAR to transfer\r\n    /// @param data Additional data with no specified format, sent in call to `_to`\r\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes data) \r\n        external\r\n        whenNotPaused\r\n    {\r\n        _safeTransferFrom(_from, _to, _tokenId, data);\r\n    }\r\n\r\n    /// @dev Transfers the ownership of an WAR from one address to another address\r\n    /// @param _from The current owner of the WAR\r\n    /// @param _to The new owner\r\n    /// @param _tokenId The WAR to transfer\r\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId) \r\n        external\r\n        whenNotPaused\r\n    {\r\n        _safeTransferFrom(_from, _to, _tokenId, \"\");\r\n    }\r\n\r\n    /// @dev Transfer ownership of an WAR, '_to' must be a vaild address, or the WAR will lost\r\n    /// @param _from The current owner of the WAR\r\n    /// @param _to The new owner\r\n    /// @param _tokenId The WAR to transfer\r\n    function transferFrom(address _from, address _to, uint256 _tokenId)\r\n        external\r\n        whenNotPaused\r\n        isValidToken(_tokenId)\r\n        canTransfer(_tokenId)\r\n    {\r\n        address owner = fashionIdToOwner[_tokenId];\r\n        require(owner != address(0));\r\n        require(_to != address(0));\r\n        require(owner == _from);\r\n        \r\n        _transfer(_from, _to, _tokenId);\r\n    }\r\n\r\n    /// @dev Set or reaffirm the approved address for an WAR\r\n    /// @param _approved The new approved WAR controller\r\n    /// @param _tokenId The WAR to approve\r\n    function approve(address _approved, uint256 _tokenId)\r\n        external\r\n        whenNotPaused\r\n    {\r\n        address owner = fashionIdToOwner[_tokenId];\r\n        require(owner != address(0));\r\n        require(msg.sender == owner || operatorToApprovals[owner][msg.sender]);\r\n\r\n        fashionIdToApprovals[_tokenId] = _approved;\r\n        Approval(owner, _approved, _tokenId);\r\n    }\r\n\r\n    /// @dev Enable or disable approval for a third party (\"operator\") to manage all your asset.\r\n    /// @param _operator Address to add to the set of authorized operators.\r\n    /// @param _approved True if the operators is approved, false to revoke approval\r\n    function setApprovalForAll(address _operator, bool _approved) \r\n        external \r\n        whenNotPaused\r\n    {\r\n        operatorToApprovals[msg.sender][_operator] = _approved;\r\n        ApprovalForAll(msg.sender, _operator, _approved);\r\n    }\r\n\r\n    /// @dev Get the approved address for a single WAR\r\n    /// @param _tokenId The WAR to find the approved address for\r\n    /// @return The approved address for this WAR, or the zero address if there is none\r\n    function getApproved(uint256 _tokenId) external view isValidToken(_tokenId) returns (address) {\r\n        return fashionIdToApprovals[_tokenId];\r\n    }\r\n\r\n    /// @dev Query if an address is an authorized operator for another address\r\n    /// @param _owner The address that owns the WARs\r\n    /// @param _operator The address that acts on behalf of the owner\r\n    /// @return True if `_operator` is an approved operator for `_owner`, false otherwise\r\n    function isApprovedForAll(address _owner, address _operator) external view returns (bool) {\r\n        return operatorToApprovals[_owner][_operator];\r\n    }\r\n\r\n    /// @dev Count WARs tracked by this contract\r\n    /// @return A count of valid WARs tracked by this contract, where each one of\r\n    ///  them has an assigned and queryable owner not equal to the zero address\r\n    function totalSupply() external view returns (uint256) {\r\n        return fashionArray.length - destroyFashionCount - 1;\r\n    }\r\n\r\n    /// @dev Do the real transfer with out any condition checking\r\n    /// @param _from The old owner of this WAR(If created: 0x0)\r\n    /// @param _to The new owner of this WAR \r\n    /// @param _tokenId The tokenId of the WAR\r\n    function _transfer(address _from, address _to, uint256 _tokenId) internal {\r\n        if (_from != address(0)) {\r\n            uint256 indexFrom = fashionIdToOwnerIndex[_tokenId];\r\n            uint256[] storage fsArray = ownerToFashionArray[_from];\r\n            require(fsArray[indexFrom] == _tokenId);\r\n\r\n            // If the WAR is not the element of array, change it to with the last\r\n            if (indexFrom != fsArray.length - 1) {\r\n                uint256 lastTokenId = fsArray[fsArray.length - 1];\r\n                fsArray[indexFrom] = lastTokenId; \r\n                fashionIdToOwnerIndex[lastTokenId] = indexFrom;\r\n            }\r\n            fsArray.length -= 1; \r\n            \r\n            if (fashionIdToApprovals[_tokenId] != address(0)) {\r\n                delete fashionIdToApprovals[_tokenId];\r\n            }      \r\n        }\r\n\r\n        // Give the WAR to '_to'\r\n        fashionIdToOwner[_tokenId] = _to;\r\n        ownerToFashionArray[_to].push(_tokenId);\r\n        fashionIdToOwnerIndex[_tokenId] = ownerToFashionArray[_to].length - 1;\r\n        \r\n        Transfer(_from != address(0) ? _from : this, _to, _tokenId);\r\n    }\r\n\r\n    /// @dev Actually perform the safeTransferFrom\r\n    function _safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes data) \r\n        internal\r\n        isValidToken(_tokenId) \r\n        canTransfer(_tokenId)\r\n    {\r\n        address owner = fashionIdToOwner[_tokenId];\r\n        require(owner != address(0));\r\n        require(_to != address(0));\r\n        require(owner == _from);\r\n        \r\n        _transfer(_from, _to, _tokenId);\r\n\r\n        // Do the callback after everything is done to avoid reentrancy attack\r\n        uint256 codeSize;\r\n        assembly { codeSize := extcodesize(_to) }\r\n        if (codeSize == 0) {\r\n            return;\r\n        }\r\n        bytes4 retval = ERC721TokenReceiver(_to).onERC721Received(_from, _tokenId, data);\r\n        // bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\")) = 0xf0b9e5ba;\r\n        require(retval == 0xf0b9e5ba);\r\n    }\r\n\r\n    //----------------------------------------------------------------------------------------------------------\r\n\r\n    /// @dev Equipment creation\r\n    /// @param _owner Owner of the equipment created\r\n    /// @param _attrs Attributes of the equipment created\r\n    /// @return Token ID of the equipment created\r\n    function createFashion(address _owner, uint16[9] _attrs) \r\n        external \r\n        whenNotPaused\r\n        returns(uint256)\r\n    {\r\n        require(actionContracts[msg.sender]);\r\n        require(_owner != address(0));\r\n\r\n        uint256 newFashionId = fashionArray.length;\r\n        require(newFashionId < 4294967296);\r\n\r\n        fashionArray.length += 1;\r\n        Fashion storage fs = fashionArray[newFashionId];\r\n        fs.protoId = _attrs[0];\r\n        fs.quality = _attrs[1];\r\n        fs.pos = _attrs[2];\r\n        if (_attrs[3] != 0) {\r\n            fs.health = _attrs[3];\r\n        }\r\n        \r\n        if (_attrs[4] != 0) {\r\n            fs.atkMin = _attrs[4];\r\n            fs.atkMax = _attrs[5];\r\n        }\r\n       \r\n        if (_attrs[6] != 0) {\r\n            fs.defence = _attrs[6];\r\n        }\r\n        \r\n        if (_attrs[7] != 0) {\r\n            fs.crit = _attrs[7];\r\n        }\r\n        \r\n        _transfer(0, _owner, newFashionId);\r\n        CreateFashion(_owner, newFashionId, _attrs[0], _attrs[1], _attrs[2], _attrs[8]);\r\n        return newFashionId;\r\n    }\r\n\r\n    /// @dev One specific attribute of the equipment modified\r\n    function _changeAttrByIndex(Fashion storage _fs, uint16 _index, uint16 _val) internal {\r\n        if (_index == 3) {\r\n            _fs.health = _val;\r\n        } else if(_index == 4) {\r\n            _fs.atkMin = _val;\r\n        } else if(_index == 5) {\r\n            _fs.atkMax = _val;\r\n        } else if(_index == 6) {\r\n            _fs.defence = _val;\r\n        } else if(_index == 7) {\r\n            _fs.crit = _val;\r\n        } else if(_index == 8) {\r\n            _fs.attrExt1 = _val;\r\n        } else if(_index == 9) {\r\n            _fs.attrExt2 = _val;\r\n        } else if(_index == 10) {\r\n            _fs.attrExt3 = _val;\r\n        } else {\r\n            _fs.attrExt4 = _val;\r\n        }\r\n    }\r\n\r\n    /// @dev Equiment attributes modified (max 4 stats modified)\r\n    /// @param _tokenId Equipment Token ID\r\n    /// @param _idxArray Stats order that must be modified\r\n    /// @param _params Stat value that must be modified\r\n    /// @param _changeType Modification type such as enhance, socket, etc.\r\n    function changeFashionAttr(uint256 _tokenId, uint16[4] _idxArray, uint16[4] _params, uint16 _changeType) \r\n        external \r\n        whenNotPaused\r\n        isValidToken(_tokenId) \r\n    {\r\n        require(actionContracts[msg.sender]);\r\n\r\n        Fashion storage fs = fashionArray[_tokenId];\r\n        if (_idxArray[0] > 0) {\r\n            _changeAttrByIndex(fs, _idxArray[0], _params[0]);\r\n        }\r\n\r\n        if (_idxArray[1] > 0) {\r\n            _changeAttrByIndex(fs, _idxArray[1], _params[1]);\r\n        }\r\n\r\n        if (_idxArray[2] > 0) {\r\n            _changeAttrByIndex(fs, _idxArray[2], _params[2]);\r\n        }\r\n\r\n        if (_idxArray[3] > 0) {\r\n            _changeAttrByIndex(fs, _idxArray[3], _params[3]);\r\n        }\r\n\r\n        ChangeFashion(fashionIdToOwner[_tokenId], _tokenId, _changeType);\r\n    }\r\n\r\n    /// @dev Equipment destruction\r\n    /// @param _tokenId Equipment Token ID\r\n    /// @param _deleteType Destruction type, such as craft\r\n    function destroyFashion(uint256 _tokenId, uint16 _deleteType)\r\n        external \r\n        whenNotPaused\r\n        isValidToken(_tokenId) \r\n    {\r\n        require(actionContracts[msg.sender]);\r\n\r\n        address _from = fashionIdToOwner[_tokenId];\r\n        uint256 indexFrom = fashionIdToOwnerIndex[_tokenId];\r\n        uint256[] storage fsArray = ownerToFashionArray[_from]; \r\n        require(fsArray[indexFrom] == _tokenId);\r\n\r\n        if (indexFrom != fsArray.length - 1) {\r\n            uint256 lastTokenId = fsArray[fsArray.length - 1];\r\n            fsArray[indexFrom] = lastTokenId; \r\n            fashionIdToOwnerIndex[lastTokenId] = indexFrom;\r\n        }\r\n        fsArray.length -= 1; \r\n\r\n        fashionIdToOwner[_tokenId] = address(0);\r\n        delete fashionIdToOwnerIndex[_tokenId];\r\n        destroyFashionCount += 1;\r\n\r\n        Transfer(_from, 0, _tokenId);\r\n\r\n        DeleteFashion(_from, _tokenId, _deleteType);\r\n    }\r\n\r\n    /// @dev Safe transfer by trust contracts\r\n    function safeTransferByContract(uint256 _tokenId, address _to) \r\n        external\r\n        whenNotPaused\r\n    {\r\n        require(actionContracts[msg.sender]);\r\n\r\n        require(_tokenId >= 1 && _tokenId <= fashionArray.length);\r\n        address owner = fashionIdToOwner[_tokenId];\r\n        require(owner != address(0));\r\n        require(_to != address(0));\r\n        require(owner != _to);\r\n\r\n        _transfer(owner, _to, _tokenId);\r\n    }\r\n\r\n    //----------------------------------------------------------------------------------------------------------\r\n\r\n    /// @dev Get fashion attrs by tokenId\r\n    function getFashion(uint256 _tokenId) external view isValidToken(_tokenId) returns (uint16[12] datas) {\r\n        Fashion storage fs = fashionArray[_tokenId];\r\n        datas[0] = fs.protoId;\r\n        datas[1] = fs.quality;\r\n        datas[2] = fs.pos;\r\n        datas[3] = fs.health;\r\n        datas[4] = fs.atkMin;\r\n        datas[5] = fs.atkMax;\r\n        datas[6] = fs.defence;\r\n        datas[7] = fs.crit;\r\n        datas[8] = fs.attrExt1;\r\n        datas[9] = fs.attrExt2;\r\n        datas[10] = fs.attrExt3;\r\n        datas[11] = fs.attrExt4;\r\n    }\r\n\r\n    /// @dev Get tokenIds and flags by owner\r\n    function getOwnFashions(address _owner) external view returns(uint256[] tokens, uint32[] flags) {\r\n        require(_owner != address(0));\r\n        uint256[] storage fsArray = ownerToFashionArray[_owner];\r\n        uint256 length = fsArray.length;\r\n        tokens = new uint256[](length);\r\n        flags = new uint32[](length);\r\n        for (uint256 i = 0; i < length; ++i) {\r\n            tokens[i] = fsArray[i];\r\n            Fashion storage fs = fashionArray[fsArray[i]];\r\n            flags[i] = uint32(uint32(fs.protoId) * 100 + uint32(fs.quality) * 10 + fs.pos);\r\n        }\r\n    }\r\n\r\n    /// @dev WAR token info returned based on Token ID transfered (64 at most)\r\n    function getFashionsAttrs(uint256[] _tokens) external view returns(uint16[] attrs) {\r\n        uint256 length = _tokens.length;\r\n        require(length <= 64);\r\n        attrs = new uint16[](length * 11);\r\n        uint256 tokenId;\r\n        uint256 index;\r\n        for (uint256 i = 0; i < length; ++i) {\r\n            tokenId = _tokens[i];\r\n            if (fashionIdToOwner[tokenId] != address(0)) {\r\n                index = i * 11;\r\n                Fashion storage fs = fashionArray[tokenId];\r\n                attrs[index] = fs.health;\r\n                attrs[index + 1] = fs.atkMin;\r\n                attrs[index + 2] = fs.atkMax;\r\n                attrs[index + 3] = fs.defence;\r\n                attrs[index + 4] = fs.crit;\r\n                attrs[index + 5] = fs.attrExt1;\r\n                attrs[index + 6] = fs.attrExt2;\r\n                attrs[index + 7] = fs.attrExt3;\r\n                attrs[index + 8] = fs.attrExt4;\r\n            }   \r\n        }\r\n    }\r\n}", "OptimizationUsed": "1", "ContractName": "WarToken", "ByteCode": "0x6060604052600436106101695763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301ffc9a7811461016e5780630378f83f146101a257806306fdde03146101c1578063081812fc1461024b578063095ea7b31461027d5780630d047d491461029f57806315de46071461031057806318160ddd146103c857806318ad052b146103ed57806323b872dd1461040f57806330efb8d314610437578063425189e01461044a57806342842e0e146104995780634ea34cdb146104c15780636352211e146104e057806367d0661d146104f65780636fb642de14610509578063704b6c021461052d57806370a082311461054c578063753b0dc11461056b57806375b599c01461058c57806395d89b41146105ae578063a22cb465146105c1578063b187bd26146105e5578063b88d4fde146105f8578063bfae2f0e1461062f578063e985e9c514610642578063febb986b14610667575b600080fd5b341561017957600080fd5b61018e600160e060020a0319600435166106ef565b604051901515815260200160405180910390f35b34156101ad57600080fd5b6101bf60043561ffff602435166107a2565b005b34156101cc57600080fd5b6101d46109bc565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156102105780820151838201526020016101f8565b50505050905090810190601f16801561023d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561025657600080fd5b6102616004356109fe565b604051600160a060020a03909116815260200160405180910390f35b341561028857600080fd5b6101bf600160a060020a0360043516602435610a5f565b34156102aa57600080fd5b6102bd6004803560248101910135610b5d565b60405160208082528190810183818151815260200191508051906020019060200280838360005b838110156102fc5780820151838201526020016102e4565b505050509050019250505060405180910390f35b341561031b57600080fd5b61032f600160a060020a0360043516610dde565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b8381101561037357808201518382015260200161035b565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156103b257808201518382015260200161039a565b5050505090500194505050505060405180910390f35b34156103d357600080fd5b6103db610f34565b60405190815260200160405180910390f35b34156103f857600080fd5b6101bf600435600160a060020a0360243516610f42565b341561041a57600080fd5b6101bf600160a060020a0360043581169060243516604435610ffb565b341561044257600080fd5b6101bf611137565b341561045557600080fd5b610460600435611174565b604051808261018080838360005b8381101561048657808201518382015260200161046e565b5050505090500191505060405180910390f35b34156104a457600080fd5b6101bf600160a060020a03600435811690602435166044356112da565b34156104cc57600080fd5b61018e600160a060020a0360043516611304565b34156104eb57600080fd5b610261600435611344565b341561050157600080fd5b6101bf61135f565b341561051457600080fd5b6101bf600160a060020a0360043516602435151561139e565b341561053857600080fd5b6101bf600160a060020a03600435166113e9565b341561055757600080fd5b6103db600160a060020a0360043516611494565b341561057657600080fd5b6103db600160a060020a036004351660246114c7565b341561059757600080fd5b6101bf600435602460a461ffff6101243516611745565b34156105b957600080fd5b6101d46118d5565b34156105cc57600080fd5b6101bf600160a060020a03600435166024351515611916565b34156105f057600080fd5b61018e611996565b341561060357600080fd5b6101bf600160a060020a036004803582169160248035909116916044359160643590810191013561199f565b341561063a57600080fd5b6102616119f1565b341561064d57600080fd5b61018e600160a060020a0360043581169060243516611a05565b341561067257600080fd5b61067d600435611a33565b60405161ffff9c8d1681529a8c1660208c0152988b166040808c0191909152978b1660608b0152958a1660808a015293891660a089015291881660c0880152871660e0870152861661010086015285166101208501528416610140840152921661016082015261018001905180910390f35b60007f01ffc9a700000000000000000000000000000000000000000000000000000000600160e060020a03198316148061075257507f80ac58cd00000000000000000000000000000000000000000000000000000000600160e060020a03198316145b8061078657507f8153916a00000000000000000000000000000000000000000000000000000000600160e060020a03198316145b801561079c5750600160e060020a031980831614155b92915050565b6000805481908190819060ff16156107b957600080fd5b85600181101580156107cd57506001548111155b15156107d857600080fd5b600081815260036020526040902054600160a060020a031615156107fb57600080fd5b600160a060020a03331660009081526008602052604090205460ff16151561082257600080fd5b6000878152600360209081526040808320546005835281842054600160a060020a03909116808552600490935292208054919750919550909350879084908690811061086a57fe5b6000918252602090912001541461088057600080fd5b82546000190184146108dc5782548390600019810190811061089e57fe5b90600052602060002090015491508183858154811015156108bb57fe5b60009182526020808320909101929092558381526005909152604090208490555b8254600019016108ec84826121aa565b506000878152600360209081526040808320805473ffffffffffffffffffffffffffffffffffffffff191690556005909152808220829055600280546001019055600160a060020a038716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908a905190815260200160405180910390a384600160a060020a03167f731c886bc6fd1e9c7249159422a4e267e6babaa0543d8aa9c085d1d0ce896611888860405191825261ffff1660208201526040908101905180910390a250505050505050565b6109c46121ce565b60408051908101604052600981527f57415220546f6b656e0000000000000000000000000000000000000000000000602082015290505b90565b60008160018110158015610a1457506001548111155b1515610a1f57600080fd5b600081815260036020526040902054600160a060020a03161515610a4257600080fd5b5050600090815260066020526040902054600160a060020a031690565b6000805460ff1615610a7057600080fd5b50600081815260036020526040902054600160a060020a0316801515610a9557600080fd5b80600160a060020a031633600160a060020a03161480610adb5750600160a060020a038082166000908152600760209081526040808320339094168352929052205460ff165b1515610ae657600080fd5b60008281526006602052604090819020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0386811691821790925591908316907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a3505050565b610b656121ce565b8160008080806040851115610b7957600080fd5b84600b02604051805910610b8a5750595b90808252806020026020018201604052509550600091505b84821015610dd357878783818110610bb657fe5b602090810292909201356000818152600390935260409092205491955050600160a060020a031615610dc85760018054600b8402945085908110610bf657fe5b600091825260209091200180549091506601000000000000900461ffff16868481518110610c2057fe5b61ffff92831660209182029092010152815468010000000000000000900416866001850181518110610c4e57fe5b61ffff9283166020918202909201015281546a0100000000000000000000900416866002850181518110610c7e57fe5b61ffff9283166020918202909201015281546c01000000000000000000000000900416866003850181518110610cb057fe5b61ffff9283166020918202909201015281546e010000000000000000000000000000900416866004850181518110610ce457fe5b61ffff928316602091820290920101528154700100000000000000000000000000000000900416866005850181518110610d1a57fe5b61ffff9283166020918202909201015281547201000000000000000000000000000000000000900416866006850181518110610d5257fe5b61ffff92831660209182029092010152815474010000000000000000000000000000000000000000900416866007850181518110610d8c57fe5b61ffff92831660209182029092010152815460b060020a900416866008850181518110610db557fe5b61ffff9092166020928302909101909101525b816001019150610ba2565b505050505092915050565b610de66121ce565b610dee6121ce565b6000808080600160a060020a0387161515610e0857600080fd5b600160a060020a0387166000908152600460205260409081902080549095509350839051805910610e365750595b9080825280602002602001820160405250955082604051805910610e575750595b90808252806020026020018201604052509450600091505b82821015610f2b578382815481101515610e8557fe5b906000526020600020900154868381518110610e9d57fe5b602090810290910101528354600190859084908110610eb857fe5b60009182526020909120015481548110610ece57fe5b60009182526020909120018054909150640100000000810461ffff9081166201000083048216600a02919092166064020101858381518110610f0c57fe5b63ffffffff909216602092830290910190910152600190910190610e6f565b50505050915091565b600254600154036000190190565b6000805460ff1615610f5357600080fd5b600160a060020a03331660009081526008602052604090205460ff161515610f7a57600080fd5b60018310158015610f8d57506001548311155b1515610f9857600080fd5b50600082815260036020526040902054600160a060020a0316801515610fbd57600080fd5b600160a060020a0382161515610fd257600080fd5b600160a060020a038181169083161415610feb57600080fd5b610ff6818385611b15565b505050565b6000805460ff161561100c57600080fd5b816001811015801561102057506001548111155b151561102b57600080fd5b600081815260036020526040902054600160a060020a0316151561104e57600080fd5b6000838152600360205260409020548390600160a060020a03908116903316811480611094575060008281526006602052604090205433600160a060020a039081169116145b806110c55750600160a060020a038082166000908152600760209081526040808320339094168352929052205460ff165b15156110d057600080fd5b600085815260036020526040902054600160a060020a031693508315156110f657600080fd5b600160a060020a038616151561110b57600080fd5b600160a060020a038481169088161461112357600080fd5b61112e878787611b15565b50505050505050565b60005433600160a060020a03908116610100909204161461115757600080fd5b60005460ff16151561116857600080fd5b6000805460ff19169055565b61117c6121e0565b6000826001811015801561119257506001548111155b151561119d57600080fd5b600081815260036020526040902054600160a060020a031615156111c057600080fd5b60018054859081106111ce57fe5b6000918252602091829020015461ffff80821686526201000082048116928601929092526401000000008104821660408601526601000000000000810482166060860152680100000000000000008104821660808601526a01000000000000000000008104821660a08601526c010000000000000000000000008104821660c08601526e0100000000000000000000000000008104821660e086015270010000000000000000000000000000000081048216610100860152720100000000000000000000000000000000000081048216610120860152740100000000000000000000000000000000000000008104821661014086015260b060020a900416610160840152509092915050565b60005460ff16156112ea57600080fd5b610ff6838383602060405190810160405260008152611d12565b6000805433600160a060020a03908116610100909204161461132557600080fd5b50600160a060020a031660009081526008602052604090205460ff1690565b600090815260036020526040902054600160a060020a031690565b60005433600160a060020a03908116610100909204161461137f57600080fd5b60005460ff161561138f57600080fd5b6000805460ff19166001179055565b60005433600160a060020a0390811661010090920416146113be57600080fd5b600160a060020a03919091166000908152600860205260409020805460ff1916911515919091179055565b60005433600160a060020a03908116610100909204161461140957600080fd5b600160a060020a038116151561141e57600080fd5b600054600160a060020a03808316916101009004167ff8ccb027dfcd135e000e9d45e6cc2d662578a8825d4c45b5e32e0adf67e79ec660405160405180910390a360008054600160a060020a039092166101000274ffffffffffffffffffffffffffffffffffffffff0019909216919091179055565b6000600160a060020a03821615156114ab57600080fd5b50600160a060020a031660009081526004602052604090205490565b600080548190819060ff16156114dc57600080fd5b600160a060020a03331660009081526008602052604090205460ff16151561150357600080fd5b600160a060020a038516151561151857600080fd5b6001549150640100000000821061152e57600080fd5b6001805481019061153f9082612209565b50600180548390811061154e57fe5b600091825260209182902001805461ffff1916863561ffff9081169190911763ffff0000191692870135811662010000029290921765ffff00000000191660408701358316640100000000021781559150606085013516156115cd57805467ffff0000000000001916606085013561ffff166601000000000000021781555b61ffff6080850135161561162d57805469ffff00000000000000001916608085013561ffff9081166801000000000000000002919091176bffff00000000000000000000191660a0860135919091166a0100000000000000000000021781555b61ffff60c0850135161561166a5780546dffff000000000000000000000000191660c085013561ffff166c01000000000000000000000000021781555b61ffff60e085013516156116ab5780546fffff0000000000000000000000000000191660e085013561ffff166e010000000000000000000000000000021781555b6116b760008684611b15565b600160a060020a0385167f8ded42b67fd3601c2cdbeb4fcb9a03da61bfd15fedc18f2908c4fe93305ed7428361ffff8735811690602089013581169060408a013516896008602002013561ffff1660405194855261ffff938416602086015291831660408086019190915290831660608501529116608083015260a0909101905180910390a2509392505050565b6000805460ff161561175657600080fd5b846001811015801561176a57506001548111155b151561177557600080fd5b600081815260036020526040902054600160a060020a0316151561179857600080fd5b600160a060020a03331660009081526008602052604090205460ff1615156117bf57600080fd5b60018054879081106117cd57fe5b60009182526020822001925061ffff8635161115611801576118018261ffff8735168660005b602002013561ffff16611f88565b600061ffff6020870135161115611827576118278261ffff6020880135168660016117f3565b600061ffff604087013516111561184d5761184d8261ffff6040880135168660026117f3565b600061ffff6060870135161115611873576118738261ffff6060880135168660036117f3565b6000868152600360205260409081902054600160a060020a0316907f447449e0835c6129793b404e5f4373bee3e0c20463da359d3cf0922bd8d911cf90889086905191825261ffff1660208201526040908101905180910390a2505050505050565b6118dd6121ce565b60408051908101604052600381527f57415200000000000000000000000000000000000000000000000000000000006020820152905090565b60005460ff161561192657600080fd5b33600160a060020a0390811660008181526007602090815260408083209487168084529490915290819020805460ff19168515151790557f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190849051901515815260200160405180910390a35050565b60005460ff1681565b60005460ff16156119af57600080fd5b6119ea85858585858080601f016020809104026020016040519081016040528181529291906020840183838082843750611d12945050505050565b5050505050565b6000546101009004600160a060020a031681565b600160a060020a03918216600090815260076020908152604080832093909416825291909152205460ff1690565b6001805482908110611a4157fe5b60009182526020909120015461ffff80821692506201000082048116916401000000008104821691660100000000000082048116916801000000000000000081048216916a010000000000000000000082048116916c0100000000000000000000000081048216916e010000000000000000000000000000820481169170010000000000000000000000000000000081048216917201000000000000000000000000000000000000820481169174010000000000000000000000000000000000000000810482169160b060020a909104168c565b60008080600160a060020a03861615611c2d57600084815260056020908152604080832054600160a060020a038a1684526004909252909120805491945092508490839085908110611b6357fe5b60009182526020909120015414611b7957600080fd5b8154600019018314611bd557815482906000198101908110611b9757fe5b9060005260206000209001549050808284815481101515611bb457fe5b60009182526020808320909101929092558281526005909152604090208390555b815460001901611be583826121aa565b50600084815260066020526040902054600160a060020a031615611c2d576000848152600660205260409020805473ffffffffffffffffffffffffffffffffffffffff191690555b6000848152600360209081526040808320805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038a16908117909155835260049091529020805460018101611c8083826121aa565b506000918252602080832091909101869055600160a060020a0380881680845260048352604080852054898652600590945290932060001990920190915587161515611ccc5730611cce565b865b600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8660405190815260200160405180910390a3505050505050565b60008060008460018110158015611d2b57506001548111155b1515611d3657600080fd5b600081815260036020526040902054600160a060020a03161515611d5957600080fd5b6000868152600360205260409020548690600160a060020a03908116903316811480611d9f575060008281526006602052604090205433600160a060020a039081169116145b80611dd05750600160a060020a038082166000908152600760209081526040808320339094168352929052205460ff165b1515611ddb57600080fd5b600088815260036020526040902054600160a060020a03169550851515611e0157600080fd5b600160a060020a0389161515611e1657600080fd5b600160a060020a03868116908b1614611e2e57600080fd5b611e398a8a8a611b15565b883b9450841515611e4957611f7c565b88600160a060020a031663f0b9e5ba8b8a8a6040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611ee1578082015183820152602001611ec9565b50505050905090810190601f168015611f0e5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b1515611f2e57600080fd5b5af11515611f3b57600080fd5b50505060405180519450507ff0b9e5ba00000000000000000000000000000000000000000000000000000000600160e060020a0319851614611f7c57600080fd5b50505050505050505050565b8161ffff1660031415611fb857825467ffff0000000000001916660100000000000061ffff831602178355610ff6565b8161ffff1660041415611fec57825469ffff000000000000000019166801000000000000000061ffff831602178355610ff6565b8161ffff16600514156120245782546bffff0000000000000000000019166a010000000000000000000061ffff831602178355610ff6565b8161ffff16600614156120605782546dffff00000000000000000000000019166c0100000000000000000000000061ffff831602178355610ff6565b8161ffff16600714156120a05782546fffff000000000000000000000000000019166e01000000000000000000000000000061ffff831602178355610ff6565b8161ffff16600814156120e457825471ffff00000000000000000000000000000000191670010000000000000000000000000000000061ffff831602178355610ff6565b8161ffff166009141561212c57825473ffff0000000000000000000000000000000000001916720100000000000000000000000000000000000061ffff831602178355610ff6565b8161ffff16600a141561217857825475ffff000000000000000000000000000000000000000019167401000000000000000000000000000000000000000061ffff831602178355610ff6565b825461ffff821660b060020a0277ffff0000000000000000000000000000000000000000000019909116178355505050565b815481835581811511610ff657600083815260209020610ff691810190830161222d565b60206040519081016040526000815290565b610180604051908101604052600c815b6000815260001990910190602001816121f05790505090565b815481835581811511610ff657600083815260209020610ff691810190830161224b565b6109fb91905b808211156122475760008155600101612233565b5090565b6109fb91905b8082111561224757805477ffffffffffffffffffffffffffffffffffffffffffffffff191681556001016122515600a165627a7a723058201845fe86d4c1f4335bbd7c9f40054c81ee2e21f2a52c260e9816bfa47fc7acb60029"}